{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./lib/aes.js","webpack:///./lib/base58.js","webpack:///./lib/coin.js","webpack:///./lib/common.js","webpack:///./lib/constants.js","webpack:///./lib/elgamal.js","webpack:///./lib/hybridencryption.js","webpack:///./lib/key.js","webpack:///./lib/keySet.js","webpack:///./lib/knapsack.js","webpack:///./lib/payment.js","webpack:///./lib/rpcclient/rpcclient.js","webpack:///./lib/rpcclient/rpchttpservice.js","webpack:///./lib/schnorr.js","webpack:///./lib/tx/constants.js","webpack:///./lib/tx/txcustomkenprivacydata.js","webpack:///./lib/tx/txcustomtoken.js","webpack:///./lib/tx/txcustomtokendata.js","webpack:///./lib/tx/txcustomtokenprivacy.js","webpack:///./lib/tx/txprivacy.js","webpack:///./lib/tx/utils.js","webpack:///./lib/wallet/accountWallet.js","webpack:///./lib/wallet/constants.js","webpack:///./lib/wallet/hdwallet.js","webpack:///./lib/wallet/history.js","webpack:///./lib/wallet/mnemonic.js","webpack:///./lib/wallet/utils.js","webpack:///./lib/wallet/wallet.js","webpack:///./lib/wallet/wordlist.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/adapters/http.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/helpers/btoa.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/bn.js/lib/bn.js","webpack:///./node_modules/brorand/index.js","webpack:///./node_modules/circular-json/build/circular-json.node.js","webpack:///./node_modules/create-hmac/index.js","webpack:///./node_modules/crypto-js/aes.js","webpack:///./node_modules/crypto-js/cipher-core.js","webpack:///./node_modules/crypto-js/core.js","webpack:///./node_modules/crypto-js/enc-base64.js","webpack:///./node_modules/crypto-js/enc-utf16.js","webpack:///./node_modules/crypto-js/evpkdf.js","webpack:///./node_modules/crypto-js/format-hex.js","webpack:///./node_modules/crypto-js/hmac.js","webpack:///./node_modules/crypto-js/index.js","webpack:///./node_modules/crypto-js/lib-typedarrays.js","webpack:///./node_modules/crypto-js/md5.js","webpack:///./node_modules/crypto-js/mode-cfb.js","webpack:///./node_modules/crypto-js/mode-ctr-gladman.js","webpack:///./node_modules/crypto-js/mode-ctr.js","webpack:///./node_modules/crypto-js/mode-ecb.js","webpack:///./node_modules/crypto-js/mode-ofb.js","webpack:///./node_modules/crypto-js/pad-ansix923.js","webpack:///./node_modules/crypto-js/pad-iso10126.js","webpack:///./node_modules/crypto-js/pad-iso97971.js","webpack:///./node_modules/crypto-js/pad-nopadding.js","webpack:///./node_modules/crypto-js/pad-zeropadding.js","webpack:///./node_modules/crypto-js/pbkdf2.js","webpack:///./node_modules/crypto-js/rabbit-legacy.js","webpack:///./node_modules/crypto-js/rabbit.js","webpack:///./node_modules/crypto-js/rc4.js","webpack:///./node_modules/crypto-js/ripemd160.js","webpack:///./node_modules/crypto-js/sha1.js","webpack:///./node_modules/crypto-js/sha224.js","webpack:///./node_modules/crypto-js/sha256.js","webpack:///./node_modules/crypto-js/sha3.js","webpack:///./node_modules/crypto-js/sha384.js","webpack:///./node_modules/crypto-js/sha512.js","webpack:///./node_modules/crypto-js/tripledes.js","webpack:///./node_modules/crypto-js/x64-core.js","webpack:///./node_modules/elliptic/lib/elliptic.js","webpack:///./node_modules/elliptic/lib/elliptic/curve/base.js","webpack:///./node_modules/elliptic/lib/elliptic/curve/edwards.js","webpack:///./node_modules/elliptic/lib/elliptic/curve/index.js","webpack:///./node_modules/elliptic/lib/elliptic/curve/mont.js","webpack:///./node_modules/elliptic/lib/elliptic/curve/short.js","webpack:///./node_modules/elliptic/lib/elliptic/curves.js","webpack:///./node_modules/elliptic/lib/elliptic/ec/index.js","webpack:///./node_modules/elliptic/lib/elliptic/ec/key.js","webpack:///./node_modules/elliptic/lib/elliptic/ec/signature.js","webpack:///./node_modules/elliptic/lib/elliptic/eddsa/index.js","webpack:///./node_modules/elliptic/lib/elliptic/eddsa/key.js","webpack:///./node_modules/elliptic/lib/elliptic/eddsa/signature.js","webpack:///./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","webpack:///./node_modules/elliptic/lib/elliptic/utils.js","webpack:///./node_modules/encoding/lib sync","webpack:///./node_modules/encoding/lib/encoding.js","webpack:///./node_modules/encoding/lib/iconv-loader.js","webpack:///./node_modules/follow-redirects/index.js","webpack:///./node_modules/follow-redirects/node_modules/debug/src/browser.js","webpack:///./node_modules/follow-redirects/node_modules/debug/src/common.js","webpack:///./node_modules/follow-redirects/node_modules/debug/src/index.js","webpack:///./node_modules/follow-redirects/node_modules/debug/src/node.js","webpack:///./node_modules/golang-wasm-async-loader/dist/gobridge.js","webpack:///./node_modules/golang-wasm-async-loader/lib sync","webpack:///./node_modules/golang-wasm-async-loader/lib/wasm_exec.js","webpack:///./node_modules/has-flag/index.js","webpack:///./node_modules/hash.js/lib/hash.js","webpack:///./node_modules/hash.js/lib/hash/common.js","webpack:///./node_modules/hash.js/lib/hash/hmac.js","webpack:///./node_modules/hash.js/lib/hash/ripemd.js","webpack:///./node_modules/hash.js/lib/hash/sha.js","webpack:///./node_modules/hash.js/lib/hash/sha/1.js","webpack:///./node_modules/hash.js/lib/hash/sha/224.js","webpack:///./node_modules/hash.js/lib/hash/sha/256.js","webpack:///./node_modules/hash.js/lib/hash/sha/384.js","webpack:///./node_modules/hash.js/lib/hash/sha/512.js","webpack:///./node_modules/hash.js/lib/hash/sha/common.js","webpack:///./node_modules/hash.js/lib/hash/utils.js","webpack:///./node_modules/hmac-drbg/lib/hmac-drbg.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-data.js","webpack:///./node_modules/iconv-lite/encodings/index.js","webpack:///./node_modules/iconv-lite/encodings/internal.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data.js","webpack:///./node_modules/iconv-lite/encodings/utf16.js","webpack:///./node_modules/iconv-lite/encodings/utf7.js","webpack:///./node_modules/iconv-lite/lib/bom-handling.js","webpack:///./node_modules/iconv-lite/lib/extend-node.js","webpack:///./node_modules/iconv-lite/lib/index.js","webpack:///./node_modules/iconv-lite/lib/streams.js","webpack:///./node_modules/inherits/inherits.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/is-buffer/index.js","webpack:///./node_modules/is-stream/index.js","webpack:///./node_modules/isomorphic-fetch/fetch-npm-node.js","webpack:///./node_modules/minimalistic-assert/index.js","webpack:///./node_modules/minimalistic-crypto-utils/lib/utils.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/node-fetch/index.js","webpack:///./node_modules/node-fetch/lib/body.js","webpack:///./node_modules/node-fetch/lib/fetch-error.js","webpack:///./node_modules/node-fetch/lib/headers.js","webpack:///./node_modules/node-fetch/lib/request.js","webpack:///./node_modules/node-fetch/lib/response.js","webpack:///./node_modules/pbkdf2/index.js","webpack:///./node_modules/pbkdf2/lib/async.js","webpack:///./node_modules/pbkdf2/lib/default-encoding.js","webpack:///./node_modules/pbkdf2/lib/precondition.js","webpack:///./node_modules/pbkdf2/lib/sync.js","webpack:///./node_modules/privacy-js-lib/lib/bigint_utils.js","webpack:///./node_modules/privacy-js-lib/lib/constants.js","webpack:///./node_modules/privacy-js-lib/lib/ec.js","webpack:///./node_modules/privacy-js-lib/lib/pedersen.js","webpack:///./node_modules/privacy-js-lib/lib/polynomials.js","webpack:///./node_modules/privacy-js-lib/lib/privacy_utils.js","webpack:///./node_modules/privacy-js-lib/lib/sjcl/sjcl.js","webpack:///./node_modules/privacy-js-lib/lib/zkps/aggregatedrange.js","webpack:///./node_modules/privacy-js-lib/lib/zkps/aggregatedrange_utils.js","webpack:///./node_modules/privacy-js-lib/lib/zkps/aggregaterangeparams.js","webpack:///./node_modules/privacy-js-lib/lib/zkps/oneoutofmany.js","webpack:///./node_modules/privacy-js-lib/lib/zkps/snnoprivacy.js","webpack:///./node_modules/privacy-js-lib/lib/zkps/snprivacy.js","webpack:///./node_modules/privacy-js-lib/lib/zkps/utils.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/safer-buffer/safer.js","webpack:///./node_modules/sha3/index.js","webpack:///./node_modules/sha3/sponge/index.js","webpack:///./node_modules/sha3/sponge/permute/chi/index.js","webpack:///./node_modules/sha3/sponge/permute/copy/index.js","webpack:///./node_modules/sha3/sponge/permute/index.js","webpack:///./node_modules/sha3/sponge/permute/iota/index.js","webpack:///./node_modules/sha3/sponge/permute/iota/round-constants/index.js","webpack:///./node_modules/sha3/sponge/permute/rho-pi/index.js","webpack:///./node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js","webpack:///./node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js","webpack:///./node_modules/sha3/sponge/permute/theta/index.js","webpack:///./node_modules/supports-color/index.js","webpack:///(webpack)/buildin/module.js","webpack:///external \"assert\"","webpack:///external \"buffer\"","webpack:///external \"crypto\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"stream\"","webpack:///external \"string_decoder\"","webpack:///external \"tty\"","webpack:///external \"url\"","webpack:///external \"util\"","webpack:///external \"zlib\""],"names":["AES","key","sjcl","cipher","aes","codec","bytes","toBits","data","iv","Uint8Array","AES_BLOCK_SIZE","length","set","randBytes","fromBits","mode","ctr","encrypt","slice","ct","decrypt","alphabet","alphabetIdx0","b58_map","base","FACTOR","Math","log","iFACTOR","encode","source","Buffer","isBuffer","TypeError","zeroes","pbegin","pend","size","b58","carry","i","it","Error","str","repeat","charAt","Array","prototype","equals","console","warn","array","l","Object","defineProperty","enumerable","decodeUnsafe","alloc","psz","b256","charCodeAt","vch","allocUnsafe","fill","j","decode","string","buffer","checkEncode","bytearrays","version","res","Number","checkSumFirst4Bytes","from","checkDecode","dCode","checkSum","last4Bytes","bytesDecoded","hashSha3BytesToBytes","zeroPoint","P256","curve","point","Coin","publicKey","coinCommitment","snderivator","bn","serialNumber","randomness","value","info","snd","commitAll","utils","toBytes","partialBytes","NUM_COIN_PROPERTIES","totalSize","COMPRESS_POINT_SIZE","compress","BIG_INT_SIZE","toArray","valueBytes","valueBytesLen","infoLen","index","targetCoin","eq","shardId","getShardIDFromLastByte","getPubKeyLastByte","PedCom","add","pubKeyBytes","InputCoin","coinDetails","OutputCoin","coinDetailsEncrypted","coinDetailsEncryptedBytes","ciphertextBytes","ciphertextBytesLen","coinDetailsEncryptedBytesLen","coinDetailBytes","recipientTK","randomnessBytes","addPaddingBigInt","msg","hybridEncrypt","lastByte","Wallet","ShardNumber","convertHashToStr","hash","tmpHash","tmp","HASH_SIZE","byteToHexString","uint8arr","hexStr","hex","toString","toLowerCase","hexStringToByte","a","len","push","parseInt","substr","newHashFromStr","NUM_PROOF_PROPERTIES","ENCODE_VERSION","SIG_PUB_KEY_SIZE","SIG_NO_PRIVACY_SIZE","SIG_PRIVACY_SIZE","SPENDING_KEY_SIZE","PUBLIC_KEY_SIZE","PAYMENT_ADDR_SIZE","TRANSMISSION_KEY_SIZE","VIEWING_KEY_SIZE","ENCRYPTED_RANDOMNESS_SIZE","ENCRYPTED_SYM_KEY_SIZE","ELGAMAL_CIPHERTEXT_SIZE","INPUT_COINS_PRIVACY_SIZE","OUTPUT_COINS_CONSTANTS_SIZE","INPUT_COINS_NO_PRIVACY_SIZE","OUTPUT_COINS_NO_PRIVACY_SIZE","isSafe","k","randScalar","C1","g","mul","C2","privateKeyBytes","ciphertext","privateKey","decompress","sub","error","Ciphertext","msgEncrypted","symKeyEncrypted","aesKeyPoint","randomize","aesKeyByte","getX","aesScheme","publicKeyPoint","GenerateSpendingKey","seed","spendingKey","gt","n","GeneratePublicKey","GenerateReceivingKey","receivingKey","GenerateTransmissionKey","ViewingKey","Pk","Rk","viewingKeyBytes","PaymentAddress","Tk","paymentAddrBytes","PaymentInfo","paymentAddr","amount","Amount","KeySet","PrivateKey","ReadonlyKey","fromSpendingKey","privKeySig","SchnPrivKey","sign","knapsack","target","K","w","rowI","greedy","inputCoins","sum","cmp","PaymentWitness","randSK","outputCoins","commitmentIndices","myCommitmentIndices","oneOfManyWitness","serialNumberWitness","snNoPrivacyWitness","aggregatedRangeWitness","comOutputValue","comOutputSND","comOutputShardID","comInputSK","comInputValue","comInputSND","comInputShardID","hasPrivacy","pkLastByteSender","commitments","numInputCoin","SNNoPrivacyWitness","commitAtIndex","SK","randInputShardID","shardID","SHARD_ID","randInputValue","randInputSND","cmInputValueAll","randInputValueAll","cmInputSum","randInputSum","randInputSumAll","commitmentTemps","randInputIsZero","preIndex","VALUE","SND","umod","mod","CM_RING_SIZE","indexIsZero","OneOutOfManyWitness","SNPrivacyWitness","numOutputCoin","randOutputValue","randOutputSND","randOutputShardID","cmOutputValue","cmOutputSND","cmOutputShardID","cmOutputSum","randOutputSum","cmOutputSumAll","cmOutputValueAll","randOutputValueAll","outputValue","AggregatedRangeWitness","proof","PaymentProof","numInputCoins","snNoPrivacyProof","prove","oneOfManyProof","serialNumberProof","oneOfMany","err","aggregatedRangeProof","time","paymentProofSize","oneOfManyArrLen","ONE_OF_MANY_PROOF_SIZE","offset","intToByteArr","serialNumberArrLen","SN_PRIVACY_PROOF_SIZE","snNoPrivacyArrLen","SN_NO_PRIVACY_PROOF_SIZE","comOutputMultiRangeProof","inputCoinArrLen","inputCoinBytesTmp","inputCoinBytesSize","outputCoinArr","outputCoinBytesTmp","outputCoinBytesSize","comOutputValueArrLen","comOutputSNDArr","comOutputShardIDArrLen","comInputValueArrLen","comInputSNDArrLen","UINT64_SIZE","timeEnd","nInput","nOutput","flagSize","sizeSNNoconstantsProof","sizeInputCoins","sizeOutputCoins","sizeProof","sizeOneOfManyProof","sizeSNPrivacyProof","sizeComOutputMultiRangeProof","estimateMultiRangeProofSize","sizeComOutputValue","sizeComOutputSND","sizeComOutputShardID","sizeComInputSK","sizeComInputValue","sizeComInputSND","sizeComInputShardID","sizeCommitmentIndices","RpcClient","url","user","password","paymentAdrr","viewingKey","tokenID","rpcHttpService","postRequest","response","status","outCoins","Result","Outputs","serialNumberStrs","existed","snds","inputCoinStrs","commitmentStrs","Commitments","CommitmentIndices","MyCommitmentIndexs","tx","sigPrivKey","txJson","json","stringify","convertTxToByte","serializedTxJson","stringToBytes","txId","TxID","JSON","convertTxCustomTokenToByte","txBytes","join","txTokenPrivacyData","txNormal","convertTxCustomTokenPrivacyToByte","listCustomToken","ListCustomToken","listPrivacyToken","paymentAddrSerialize","tokenIDStr","listUnspentCustomToken","unitFee","EstimateFeeCoinPerKb","txHashStr","isInBlock","isInMempool","IsInBlock","IsInMempool","type","shardNumber","hashStrs","images","RPCHttpService","axios","require","username","post","auth","headers","sk","r","R","PK","SchnPubKey","G","H","RAND","s1","s2","t","toRed","N","fromRed","E","Z1","redSub","redMul","Z2","signaturesBytesArrays","S1","rv","ev","S2","b","getY","TxNormalType","TxSalaryType","TxCustomTokenType","TxCustomTokenPrivacyType","CustomTokenInit","CustomTokenTransfer","TxVersion","MaxInputNumberForDefragment","TxTokenPrivacyData","record","propertyName","propertySymbol","outCoin","inCoin","Tx","propertyID","mintable","txnormal","CustomTokenPrivacyParamTx","tokenTxType","receivers","tokenInputs","TxCustomToken","rpcClient","txTokenData","TxTokenData","normalTxHash","metadata","vouts","convertToByte","txCustomTokenID","vins","senderSK","paymentAddressStr","paymentInfo","fee","tokenParams","listCustomTokens","metaData","handled","receiver","TxTokenVout","paymentAddress","hashTxTokenData","pubKeyLastByteSender","hashStr","ID","paymentTokenAmount","refundTokenAmount","vinsAmount","TxTokenVin","voutIndex","signature","convertUint8ArrayToArray","name","symbol","CustomTokenParamTx","TxCustomTokenPrivacy","feePRV","feeToken","hasPrivacyForToken","SigPubKey","hashTxTokenPrivacyData","tokenInputsStr","parseInputCoinToEncodedObject","init","ConstantID","sig","sigKey","sigPubKey","hashTx","lockTime","proofBytes","proofBytesEncoded","Type","hashValue","start","Date","getTime","senderKeySet","importFromPrivateKey","senderPK","pubKeyData","transmissionKeyPoint","sumOutputValue","sumInputValue","overBalance","lt","commitmentProving","randomCommitmentsProcess","changePaymentInfo","ok","sndOuts","sndOut","sndOutStrs","hasSNDerivator","checkDuplicateBigIntArray","witness","end","txSize","getTxActualSize","MaxTxSize","toNumber","sizeTx","ceil","prepareInputForTx","spendingKeyStr","paymentInfos","account","myKeyWallet","keyWallet","base58CheckDeserialize","base58CheckSerialize","PaymentAddressType","readOnlyKeySerialize","ReadonlyKeyType","getOutputCoin","allOutputCoinStrs","analyzeOutputCoinFromCached","uncachedOutputCoinStrs","cachedOutputCoinStrs","cachedInputCoins","uncachedInputCoins","parseInputCoinFromEncodedObject","derivatorPointCached","mergeDerivatorCached","mergeInputCoinJsonCached","concat","analyzeSpentCoinFromCached","unspentInputCoinsFromCached","unspentInputCoinsFromCachedStrs","getUnspentCoin","unspentCoins","unspentCoinExceptSpendingCoin","getUnspentCoinExceptSpendingCoin","respChooseBestCoin","chooseBestCoinToSpent","inputCoinsToSpent","resultInputCoins","inputCoinsToSpentStr","prepareInputForCustomTokenTx","senderKeyWallet","tokenVins","vOutAmount","getUnspentCustomToken","vinAmount","Value","tokenVoutsTmp","tokenVinTmp","TxCustomTokenID","Index","prepareInputForTxCustomTokenPrivacy","listPrivacyCustomTokens","amountTokenPrivacyOutput","getUnspentPrivacyCustomToken","unspentOutputCoins","unspentCoin","encodedCoinObjects","derivatorCached","spendingKeyBN","publicKeyDecode","PublicKey","commitmentDecode","CoinCommitment","sndDecode","SNDerivator","randDecode","Randomness","Info","sndStr","undefined","derive","coins","encodedCoins","SerialNumber","remainInputCoins","cloneInputCoinArray","totalResultInputCoinAmount","inCoinOverAmount","inCoinsUnderAmount","sort","inputCoinsClone","estimateFee","payments","customTokenParams","privacyCustomTokenParams","getEstimateFeePerKB","estimateTxSize","getEstimateFee","to","privatekeyStr","isPrivacy","receiverKeyWallet","inputForTx","getEstimateFeeForSendingToken","tokenObject","isPrivacyForPrivateToken","id","TokenID","TokenName","TokenSymbol","Privacy","TokenReceivers","TokenTxType","TokenAmount","inputForCustomTx","inputForPrivacyCustomToken","getEstimateFeeToDefragment","senderPaymentAddress","getUTXOsToDefragment","result","defragmentUTXO","totalAmount","sizeVersion","sizeType","sizeLockTime","sizeFee","sizeInfo","sizeSigPubKey","sizeSig","estimateProofSize","sizePubKeyLastByte","sizeMetadata","customTokenDataSize","unspentCoinStrs","getUTXOsExceptSpendingCoin","UTXOExceptSpeningCoin","UTXOExceptSpeningCoinStrs","defragmentUTXOStr","numUTXO","spendingCoins","spendingSNs","splice","inCoinStrs","hasSerialNumber","AccountWallet","KeyWallet","child","isImport","followingTokens","Image","Name","Symbol","IsPrivacy","isInit","txHistory","NormalTx","CustomTokenTx","PrivacyCustomTokenTx","derivatorJsonCached","spentCoinCached","inputCoinCached","inputCoinJsonCached","getBalance","bind","loadInputCoinCached","loadDerivatorCached","removeObjectFromSpendingCoins","mergeSpentCoinCached","createAndSendConstant","createAndSendCustomToken","createAndSendPrivacyCustomToken","getCustomTokenBalance","getPrivacyCustomTokenBalance","listFollowingTokens","addFollowingToken","removeFollowingToken","getPrivacyCustomTokenTx","getCustomTokenTx","getPrivacyCustomTokenTxByTokenID","defragment","spendingCoinObj","txID","storage","cacheObject","cipherText","CryptoJS","setItem","getItem","jsonStr","enc","Utf8","parse","unshift","tokenId","removedIndex","findIndex","token","isIn","TxHistoryInfo","setHistoryInfo","toConstant","updateStatus","queryResult","tasks","Promise","resolve","setTimeout","all","inputCoinTmp","encodedCoin","jsonObject","oObject","chkAll","accountBalance","privacyCustomTokenID","unspentCoinList","unspentCoinString","customTokenIDStr","param","updateProgressTx","receiverPaymentAddrStr","senderSkStr","PriKeyType","sendRawTx","FailedTx","SuccessTx","txStatus","addSpendingCoins","saveNormalTx","ProgressTx","getStakingAmount","ShardStakingType","meta","MetaStakingShard","MetaStakingBeacon","burningAddress","amountToSpent","object","inputForCustomTokenTx","sendRawTxCustomToken","hashToIdenticon","identicon","followingToken","saveCustomTokenTx","submitParam","paymentInfoForPRV","inputForPrivacyCustomTokenTx","sendRawTxCustomTokenPrivacy","savePrivacyCustomTokenTx","senderPaymentAddressStr","PublicKeyType","PriKeySerializeSize","PaymentAddrSerializeSize","ReadonlyKeySerializeSize","PublicKeySerializeSize","ConfirmedTx","AmountStakingBeacon","AmountStakingShard","BeaconStakingType","ChildNumberSize","ChainCodeSize","MiliConstantUnit","Depth","ChildNumber","ChainCode","childIdx","intermediary","getIntermediary","newSeed","newKeySet","generateKey","childKey","childIndexBytes","chainCode","hmac","HmacSHA512","Base64","byteArrayToWordArray","wordArrayToByteArray","keyType","keyBytes","addChecksumToBytes","serializedKey","serialize","keyLength","PublicKeyLength","TransmisionKeyLength","ReceivingKeyLength","cs1","cs2","e","deserialize","NewMasterKey","keySet","wordToByteArray","word","ba","xFF","wordArray","hasOwnProperty","sigBytes","words","min","apply","wa","lib","WordArray","create","tokenName","tokenSymbol","miliseconds","newStatus","last11BitsMask","rightShift11BitsDivider","bigOne","bigTwo","wordList","wordMap","ErrEntropyLengthInvalid","list","newWordList","validateEntropyBitSize","bitSize","ex","MnemonicGenerator","entropy","RandomBytesFunc","setPrivacyUtilRandomBytesFunc","entropyBitLength","checksumBitLength","sentenceLength","addChecksum","entropyInt","and","div","wordBytes","padByteSlice","lenght","newSlice","computeChecksum","firstChecksumByte","dataBigInt","or","mnemonic","pbkdf2","pbkdf2Sync","checksum","miliConstantAmount","parseFloat","Seed","Entropy","PassPhrase","Mnemonic","MasterAccount","Storage","passPhrase","numOfAccount","mnemonicGen","newEntropy","newMnemonic","masterKey","newIndex","temp","childNumber","newChildKey","accountName","find","item","accountWallet","save","childIndex","accPrivateKeyStr","privakeyStr","masterDerivatorPointCached","masterInputCoinCached","masterDerivatorJsonCached","masterInputCoinJsonCached","masterSpentCoinCached","childDerivatorPointCacheds","childInputCoinCacheds","childDerivatorJsonCacheds","childInputCoinJsonCacheds","childSpentCoinCacheds","saveAccountCached","clearCached","accName","getAccountByName","getNormalTx","obj","setPrototypeOf","assign","loadAccountCached","map","getPublicKeyByHex","getPublicKeyCheckEncode","getTransactionByHash","interval","setInterval","update","randomBytesFunc","setRandBytesFunc","ms","progress","sleep","DefaultStorage","Data","language","englishWords","english","split"],"mappings":"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jD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AC5Oa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;AAChC,aAAa,mBAAO,CAAC,iEAAkB;AACvC,eAAe,mBAAO,CAAC,2EAAuB;AAC9C,mBAAmB,mBAAO,CAAC,mFAA2B;AACtD,sBAAsB,mBAAO,CAAC,yFAA8B;AAC5D,kBAAkB,mBAAO,CAAC,yEAAqB;AAC/C,yFAAyF,mBAAO,CAAC,mEAAmB;;AAEpH;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,KAA+B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,yEAAsB;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACnLa;;AAEb,YAAY,mBAAO,CAAC,kDAAS;AAC7B,WAAW,mBAAO,CAAC,gEAAgB;AACnC,YAAY,mBAAO,CAAC,4DAAc;AAClC,eAAe,mBAAO,CAAC,wDAAY;;AAEnC;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,kEAAiB;AACxC,oBAAoB,mBAAO,CAAC,4EAAsB;AAClD,iBAAiB,mBAAO,CAAC,sEAAmB;;AAE5C;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,oEAAkB;;AAEzC;;AAEA;AACA;;;;;;;;;;;;;ACnDa;;AAEb;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;AClBa;;AAEb,aAAa,mBAAO,CAAC,2DAAU;;AAE/B;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACxDa;;AAEb;AACA;AACA;;;;;;;;;;;;;ACJa;;AAEb,eAAe,mBAAO,CAAC,2DAAe;AACtC,YAAY,mBAAO,CAAC,qDAAY;AAChC,yBAAyB,mBAAO,CAAC,iFAAsB;AACvD,sBAAsB,mBAAO,CAAC,2EAAmB;;AAEjD;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,kCAAkC,cAAc;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;;;;;;;;;;;;;AC9Ea;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;;ACnDa;;AAEb,mBAAmB,mBAAO,CAAC,qEAAgB;;AAE3C;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;AAChC,oBAAoB,mBAAO,CAAC,uEAAiB;AAC7C,eAAe,mBAAO,CAAC,uEAAoB;AAC3C,eAAe,mBAAO,CAAC,yDAAa;AACpC,oBAAoB,mBAAO,CAAC,qFAA4B;AACxD,kBAAkB,mBAAO,CAAC,iFAA0B;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;ACrFa;;AAEb;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBa;;AAEb,kBAAkB,mBAAO,CAAC,mEAAe;;AAEzC;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,MAAM;AACjB,WAAW,eAAe;AAC1B,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;ACnBa;;AAEb,YAAY,mBAAO,CAAC,kDAAS;AAC7B,0BAA0B,mBAAO,CAAC,8FAA+B;;AAEjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,gEAAgB;AACtC,GAAG;AACH;AACA,cAAc,mBAAO,CAAC,kEAAiB;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO,YAAY;AACnB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC/Fa;;AAEb;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;;AAEb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnCa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACjEa;;AAEb;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACba;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;AACxC,OAAO;;AAEP;AACA,0DAA0D,wBAAwB;AAClF;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,gCAAgC;AAChC,6BAA6B,aAAa,EAAE;AAC5C;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACpDa;;AAEb;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACba;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACnEa;;AAEb,YAAY,mBAAO,CAAC,mDAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACXa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,eAAe;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;ACpDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Ba;;AAEb,WAAW,mBAAO,CAAC,gEAAgB;AACnC,eAAe,mBAAO,CAAC,oDAAW;;AAElC;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C,2BAA2B;AAC3B;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC9SY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtJA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,SAAS;AAChC;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpqBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA,KAAK;AACL,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;;AAEA,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;;AAEA,kCAAkC;AAClC,sCAAsC;AACtC;;AAEA;AACA,qBAAqB,OAAO;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA,6BAA6B,cAAc;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,QAAQ;AACvC;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,QAAQ;AACpC;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE,MAA6B;;;;;;;;;;;;;ACl2GhC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;AChEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B,iBAAiB;AAC3C;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9MA,iBAAiB,mBAAO,CAAC,sBAAQ;;;;;;;;;;;;ACAjC,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,4DAAc,GAAG,mBAAO,CAAC,8CAAO,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,8DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,mBAAmB;AACtD;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACvOD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,oDAAU;AAC1E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,8EAA8E,kBAAkB;AAChG;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,8EAA8E,kBAAkB;AAChG;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,wGAAwG,kBAAkB;AAC1H;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,mBAAmB,UAAU;AAC7B,mBAAmB,UAAU;AAC7B,mBAAmB,UAAU;AAC7B,mBAAmB,OAAO;AAC1B,mBAAmB,KAAK;AACxB,mBAAmB,QAAQ;AAC3B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,qCAAqC;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,iBAAiB;AACrC,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,iHAAiH,SAAS;AAC1H,iHAAiH,0CAA0C;AAC3J;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,oBAAoB;AACxC,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA,sHAAsH,0CAA0C;AAChK,mHAAmH,0CAA0C;AAC7J;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,4BAA4B;;AAElE;AACA;AACA;;AAEA;AACA,yCAAyC,+BAA+B;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,iBAAiB;AACrC,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,yHAAyH,kCAAkC;AAC3J;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,oBAAoB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA,8HAA8H,kCAAkC;AAChK,2HAA2H,kCAAkC;AAC7J;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN,EAAE;;;AAGF,CAAC,G;;;;;;;;;;;AC/2BD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA;AACA;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA,cAAc;AACd;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd,oCAAoC,YAAY;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACvvBD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;;AAEA,gCAAgC,sCAAsC;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACtID,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACpJD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,gDAAQ;AAC3F;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE,uDAAuD,+BAA+B;AACtF;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC,gBAAgB,OAAO;AACvB;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE,uDAAuD,+BAA+B;AACtF;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACnID,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,8DAAe;AAC/E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACjED,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,EAAE;;;AAGF,CAAC,G;;;;;;;;;;;AC9ID,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,wDAAY,GAAG,mBAAO,CAAC,sEAAmB,GAAG,mBAAO,CAAC,0DAAa,GAAG,mBAAO,CAAC,4DAAc,GAAG,mBAAO,CAAC,8CAAO,GAAG,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,0DAAa,GAAG,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,8DAAe,GAAG,mBAAO,CAAC,wDAAY,GAAG,mBAAO,CAAC,wDAAY,GAAG,mBAAO,CAAC,wEAAoB,GAAG,mBAAO,CAAC,wDAAY,GAAG,mBAAO,CAAC,wDAAY,GAAG,mBAAO,CAAC,gEAAgB,GAAG,mBAAO,CAAC,gEAAgB,GAAG,mBAAO,CAAC,gEAAgB,GAAG,mBAAO,CAAC,sEAAmB,GAAG,mBAAO,CAAC,kEAAiB,GAAG,mBAAO,CAAC,4DAAc,GAAG,mBAAO,CAAC,8CAAO,GAAG,mBAAO,CAAC,0DAAa,GAAG,mBAAO,CAAC,8CAAO,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,kEAAiB;AAClyB;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;;AAEA,CAAC,G;;;;;;;;;;;ACjBD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,0BAA0B;AACtD;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC3ED,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,4BAA4B,QAAQ;AACpnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC3QD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,8DAAe;AAC/E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC7ED,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,8DAAe;AAC/E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA,EAAE;;;;;AAKF;;AAEA,CAAC,G;;;;;;;;;;;ACnHD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,8DAAe;AAC/E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACzDD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,8DAAe;AAC/E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACvCD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,C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AA+B;AACtF;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AChJD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,4DAAc,GAAG,mBAAO,CAAC,8CAAO,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,8DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC7LD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,4DAAc,GAAG,mBAAO,CAAC,8CAAO,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,8DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC/LD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,4DAAc,GAAG,mBAAO,CAAC,8CAAO,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,8DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC1ID,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;;AAEA,kdAAkd,+BAA+B;AACjf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC1QD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACrJD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,oDAAU;AAC1E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC/ED,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACtMD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,wDAAY;AAC5E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AClUD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,wDAAY,GAAG,mBAAO,CAAC,oDAAU;AACjG;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AClFD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,wDAAY;AAC5E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AClUD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ,GAAG,mBAAO,CAAC,4DAAc,GAAG,mBAAO,CAAC,8CAAO,GAAG,mBAAO,CAAC,oDAAU,GAAG,mBAAO,CAAC,8DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,QAAQ;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACjwBD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,gDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;;AAEA;AACA;AACA,MAAM;AACN,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;;AC/SY;;AAEb;;AAEA,mBAAmB,mBAAO,CAAC,6DAAiB;AAC5C,iBAAiB,mBAAO,CAAC,uEAAkB;AAC3C,gBAAgB,mBAAO,CAAC,gDAAS;AACjC,iBAAiB,mBAAO,CAAC,6EAAkB;AAC3C,kBAAkB,mBAAO,CAAC,yEAAmB;;AAE7C;AACA,cAAc,mBAAO,CAAC,uEAAe;AACrC,iBAAiB,mBAAO,CAAC,6EAAkB;;;;;;;;;;;;;ACZ9B;;AAEb,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,+DAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,WAAW;AAC5B,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;;;;;;;;;;;;ACtXa;;AAEb,YAAY,mBAAO,CAAC,qEAAU;AAC9B,eAAe,mBAAO,CAAC,+DAAgB;AACvC,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,qDAAU;AACjC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChba;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kEAAQ;AAC7B,cAAc,mBAAO,CAAC,oEAAS;AAC/B,aAAa,mBAAO,CAAC,kEAAQ;AAC7B,gBAAgB,mBAAO,CAAC,wEAAW;;;;;;;;;;;;;ACPtB;;AAEb,YAAY,mBAAO,CAAC,qEAAU;AAC9B,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,qDAAU;AACjC;;AAEA,eAAe,mBAAO,CAAC,+DAAgB;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,uCAAuC;AACvC,eAAe;;AAEf,qBAAqB,iBAAiB;AACtC;;AAEA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnLa;;AAEb,YAAY,mBAAO,CAAC,qEAAU;AAC9B,eAAe,mBAAO,CAAC,+DAAgB;AACvC,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,qDAAU;AACjC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,eAAe;AACpB,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACx6Ba;;AAEb;;AAEA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,eAAe,mBAAO,CAAC,4DAAa;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,QAAQ,mBAAO,CAAC,8FAAyB;AACzC,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC5MY;;AAEb,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,4DAAW;AAClC,eAAe,mBAAO,CAAC,+DAAgB;AACvC;AACA;;AAEA,cAAc,mBAAO,CAAC,6DAAO;AAC7B,gBAAgB,mBAAO,CAAC,yEAAa;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,2CAA2C;AACrE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Oa;;AAEb,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,+DAAgB;AACvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA,YAAY;;AAEZ,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACtHa;;AAEb,SAAS,mBAAO,CAAC,6CAAO;;AAExB,eAAe,mBAAO,CAAC,+DAAgB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtIa;;AAEb,WAAW,mBAAO,CAAC,mDAAS;AAC5B,eAAe,mBAAO,CAAC,+DAAgB;AACvC;AACA;AACA;AACA,cAAc,mBAAO,CAAC,gEAAO;AAC7B,gBAAgB,mBAAO,CAAC,4EAAa;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAU,aAAa;AACvB,UAAU,qBAAqB;AAC/B,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iCAAiC;AAC9D;;AAEA;AACA,UAAU,MAAM;AAChB,UAAU,uBAAuB;AACjC,UAAU,2BAA2B;AACrC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrHa;;AAEb,eAAe,mBAAO,CAAC,+DAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA,UAAU,MAAM;AAChB,UAAU,OAAO;AACjB;AACA,UAAU,YAAY;AACtB,UAAU,MAAM;AAChB,UAAU,YAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;;AAEA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/Fa;;AAEb,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,+DAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA,UAAU,MAAM;AAChB,UAAU,oBAAoB;AAC9B,UAAU,mBAAmB;AAC7B,UAAU,gBAAgB;AAC1B,UAAU,aAAa;AACvB,UAAU,aAAa;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjwBa;;AAEb;AACA,SAAS,mBAAO,CAAC,6CAAO;AACxB,gBAAgB,mBAAO,CAAC,wEAAqB;AAC7C,eAAe,mBAAO,CAAC,wFAA2B;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,sE;;;;;;;;;;;;ACRa;;AAEb,gBAAgB,mBAAO,CAAC,0DAAY;AACpC;AACA;AACA,YAAY,mBAAO,CAAC,mEAAgB;;AAEpC;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChHa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,YAAY,kEAAQ,aAAa,CAAC;AAClC,CAAC;AACD;AACA;;AAEA;;;;;;;;;;;;ACbA,UAAU,mBAAO,CAAC,gBAAK;AACvB;AACA,WAAW,mBAAO,CAAC,kBAAM;AACzB,YAAY,mBAAO,CAAC,oBAAO;AAC3B,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,YAAY,mBAAO,CAAC,8EAAO;;AAE3B;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iCAAiC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,sBAAsB,uCAAuC,EAAE;AAC/D,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,2BAA2B;AAClD;;;;;;;;;;;;;ACjba;;AAEb,uBAAuB,2EAA2E,kCAAkC,mBAAmB,GAAG,EAAE,OAAO,kCAAkC,8HAA8H,GAAG,EAAE,qBAAqB;;AAE7V;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG,gBAAgB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG,iBAAiB;AACpB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG,gBAAgB;AACnB;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,kFAAU;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;AClLa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,sCAAI;AACrC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,aAAa,cAAc;AAC3B;AACA;;AAEA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yEAAyE,aAAa;AACtF;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;;AAEA;AACA,OAAO,EAAE;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,eAAe,kCAAkC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACvPa;;AAEb;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,uFAAc;AACzC,CAAC;AACD,mBAAmB,mBAAO,CAAC,iFAAW;AACtC;;;;;;;;;;;;;;ACVa;;AAEb;AACA;AACA;AACA,UAAU,mBAAO,CAAC,gBAAK;;AAEvB,WAAW,mBAAO,CAAC,kBAAM;AACzB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,8DAAgB;;AAE9C;AACA;AACA;AACA,CAAC,iBAAiB,4DAA4D;;AAE9E;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG,EAAE;;AAEL;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,EAAE;AACjD,0CAA0C;AAC1C;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,kFAAU;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5Ka;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,eAAe;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oC;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,sF;;;;;;;;;;;ACRA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,iFAAO;AAC5B,gBAAgB,mBAAO,CAAC,cAAI;;AAE5B,uBAAuB,mBAAO,CAAC,sBAAQ;AACvC;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iBAAiB,mBAAO,CAAC,kBAAM;AAC/B;AACA;AACA,GAAG;AACH;AACA;AACA,kBAAkB,+EAA+E;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB,EAAE;AACvC;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,gCAAgC,IAAI,GAAG,cAAc;AACrD,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;;;;;;ACxbY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;;AAEA,aAAa,mBAAO,CAAC,8DAAc;AACnC,cAAc,mBAAO,CAAC,gEAAe;AACrC,WAAW,mBAAO,CAAC,0DAAY;AAC/B,cAAc,mBAAO,CAAC,gEAAe;AACrC,YAAY,mBAAO,CAAC,4DAAa;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACda;;AAEb,YAAY,mBAAO,CAAC,yDAAS;AAC7B,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,oBAAoB;AACnC;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3Fa;;AAEb,YAAY,mBAAO,CAAC,yDAAS;AAC7B,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,oBAAoB;AAC9C;;AAEA,aAAa,gBAAgB;AAC7B;AACA;;AAEA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ca;;AAEb,YAAY,mBAAO,CAAC,yDAAS;AAC7B,aAAa,mBAAO,CAAC,2DAAU;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzjJa;;AAEb,eAAe,mBAAO,CAAC,yDAAS;AAChC,iBAAiB,mBAAO,CAAC,6DAAW;AACpC,iBAAiB,mBAAO,CAAC,6DAAW;AACpC,iBAAiB,mBAAO,CAAC,6DAAW;AACpC,iBAAiB,mBAAO,CAAC,6DAAW;;;;;;;;;;;;;ACNvB;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B,aAAa,mBAAO,CAAC,4DAAW;AAChC,gBAAgB,mBAAO,CAAC,+DAAU;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;;AAEA,OAAO,cAAc;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzEa;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B,aAAa,mBAAO,CAAC,yDAAO;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5Ba;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B,aAAa,mBAAO,CAAC,4DAAW;AAChC,gBAAgB,mBAAO,CAAC,+DAAU;AAClC,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA,QAAQ,cAAc;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGa;;AAEb,YAAY,mBAAO,CAAC,0DAAU;;AAE9B,aAAa,mBAAO,CAAC,yDAAO;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCa;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B,aAAa,mBAAO,CAAC,4DAAW;AAChC,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA,QAAQ,cAAc;AACtB,8CAA8C;AAC9C;AACA,0BAA0B;AAC1B;AACA,gDAAgD;AAChD;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzUa;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChDa;;AAEb,aAAa,mBAAO,CAAC,wEAAqB;AAC1C,eAAe,mBAAO,CAAC,qDAAU;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA,GAAG;AACH,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrRa;;AAEb,WAAW,mBAAO,CAAC,mDAAS;AAC5B,YAAY,mBAAO,CAAC,wFAA2B;AAC/C,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChHa;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,WAAW;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B,WAAW;AACrC;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA,0BAA0B,WAAW;AACrC;AACA,0BAA0B,WAAW;AACrC;AACA,K;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,UAAU;AACpB;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO,OAAO;AAC9C;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA,uCAAuC;AACvC,2BAA2B,iBAAiB;AAC5C;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,mCAAmC,SAAS;AAC5C,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,S;AACA,4CAA4C;AAC5C;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA,0DAA0D;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;AACA;;AAEA;AACA,gDAAgD;AAChD,iCAAiC;AACjC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;;AAEA;AACA;AACA,0DAA0D;AAC1D;AACA,8CAA8C;AAC9C;AACA;;AAEA,aAAa,uCAAuC;AACpD;;AAEA,aAAa,iCAAiC;;AAE9C;AACA;AACA;AACA,uCAAuC;AACvC,qCAAqC;;AAErC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,qEAAqE;AACrE,mEAAmE;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;;AAEf;;AAEA,sBAAsB;AACtB;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,8CAA8C;AAC9C;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B,gBAAgB;AAC1C;;AAEA;AACA;;AAEA,yB;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,sCAAsC;AACtC;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACziBa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,wFAAwB,GAAG;AACtE,oBAAoB,+BAA+B;AACnD,0BAA0B,yBAAyB;AACnD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,GAAG;AACnE,oBAAoB,+BAA+B;AACnD,KAAK;;AAEL;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,GAAG;AACnE,KAAK;;AAEL;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,SAAS,mBAAO,CAAC,0FAAyB,IAAI;AAC9G,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,SAAS,mBAAO,CAAC,0FAAyB,IAAI;AAC9G,6BAA6B,QAAQ,mBAAO,CAAC,oGAA8B,GAAG;AAC9E;AACA,oBAAoB,YAAY;AAChC,KAAK;;AAEL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,GAAG;AACnE,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,GAAG;AACnE,KAAK;;AAEL;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,SAAS,mBAAO,CAAC,4FAA0B,IAAI;AAC/G;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ka;;AAEb;AACA;AACA;AACA,IAAI,mBAAO,CAAC,mEAAY;AACxB,IAAI,mBAAO,CAAC,6DAAS;AACrB,IAAI,mBAAO,CAAC,2DAAQ;AACpB,IAAI,mBAAO,CAAC,uEAAc;AAC1B,IAAI,mBAAO,CAAC,qEAAa;AACzB,IAAI,mBAAO,CAAC,yFAAuB;AACnC,IAAI,mBAAO,CAAC,uEAAc;AAC1B,IAAI,mBAAO,CAAC,qEAAa;AACzB;;AAEA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBa;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;;AAEA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,mCAAmC;AAChD;;AAEA,aAAa,mCAAmC;AAChD;;AAEA,aAAa,oBAAoB;AACjC,aAAa,oBAAoB;AACjC,aAAa,oBAAoB;;AAEjC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,oBAAoB,mBAAO,CAAC,sCAAgB;;AAE5C;AACA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,wCAAwC;AACxC,gCAAgC;AAChC;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA,aAAa,2BAA2B;AACxC;AACA,8BAA8B;AAC9B,aAAa,2BAA2B;AACxC;AACA,8BAA8B;AAC9B,aAAa,OAAO;AACpB;AACA;AACA,SAAS,OAAO;AAChB,gCAAgC;AAChC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3La;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvEa;;AAEbuNAAuN,iEAAiE,EAAE;AAC1R,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,2JAA2J,iEAAiE,EAAE;AAC9N,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yLAAyL,iEAAiE,EAAE;AAC5P,GAAG;AACH;AACA;AACA,uNAAuN,iEAAiE,EAAE;AAC1R,GAAG;AACH;AACA;AACA,uNAAuN,gEAAgE,EAAE;AACzR,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClca;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5Ka;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC,yBAAyB,mBAAmB;AAC5C;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA,UAAU,kBAAkB;AAC5B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,+DAA+D,4BAA4B;;AAE3F;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE,2BAA2B,UAAU;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;AC9Ka;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,gBAAgB;AACnC,wBAAwB;AACxB;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,SAAS,OAAO;AAChB,uCAAuC;AACvC,wDAAwD;AACxD;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D,KAAK;AACL;;AAEA,+DAA+D;AAC/D,iDAAiD;AACjD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA,SAAS,OAAO;AAChB;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC,wBAAwB;AACxB;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,SAAS,OAAO;AAChB,2CAA2C;AAC3C,wDAAwD;AACxD;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D,KAAK;AACL;;AAEA,+DAA+D;AAC/D,iDAAiD;AACjD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/Ra;;AAEb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AClDa;AACb,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;;AAEA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,mBAAO,CAAC,sBAAQ;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,2BAA2B,mBAAO,CAAC,sBAAQ;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8FAA8F;;AAE9F;;AAEA,yBAAyB,mBAAO,CAAC,sBAAQ;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,mBAAO,CAAC,sBAAQ;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACxNa;;AAEb;AACA;AACA,aAAa,mBAAO,CAAC,0DAAc;;AAEnC,kBAAkB,mBAAO,CAAC,qEAAgB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;;AAE3B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,mBAAO,CAAC,kEAAc,EAAE;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yEAAyE;AACzE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,EAAE;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,mBAAO,CAAC,2DAAW;AAC3B;;AAEA;AACA,IAAI,mBAAO,CAAC,mEAAe;AAC3B;;AAEA,IAAI,KAAe,EAAE,EAEpB;;;;;;;;;;;;;ACxJY;;AAEb,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,gBAAgB,mBAAO,CAAC,sBAAQ;;;AAGhC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA,kBAAkB;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,oBAAoB,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA,kBAAkB;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,cAAc,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACvHA;AACA,aAAa,mBAAO,CAAC,kBAAM;AAC3B;AACA;AACA,CAAC;AACD,mBAAmB,mBAAO,CAAC,0EAAuB;AAClD;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpBa;;AAEb,gBAAgB,mBAAO,CAAC,sDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,GAAG;AACH,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChKA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B,kBAAkB,mBAAO,CAAC,gBAAK;AAC/B,WAAW,mBAAO,CAAC,kBAAM;AACzB,YAAY,mBAAO,CAAC,oBAAO;AAC3B,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sBAAQ;;AAE7B,WAAW,mBAAO,CAAC,yDAAY;AAC/B,eAAe,mBAAO,CAAC,iEAAgB;AACvC,cAAc,mBAAO,CAAC,+DAAe;AACrC,cAAc,mBAAO,CAAC,+DAAe;AACrC,iBAAiB,mBAAO,CAAC,uEAAmB;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,yDAAU;AAChC,iBAAiB,mBAAO,CAAC,oDAAW;AACpC,kBAAkB,mBAAO,CAAC,sBAAQ;AAClC,iBAAiB,mBAAO,CAAC,mEAAe;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnQA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAO,CAAC,kBAAM;;;;;;;;;;;;;AC/Bd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,GAAG;AACH;;AAEA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B,cAAc,mBAAO,CAAC,2DAAW;AACjC,WAAW,mBAAO,CAAC,qDAAQ;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,kBAAM;AACzB,cAAc,mBAAO,CAAC,2DAAW;AACjC,WAAW,mBAAO,CAAC,qDAAQ;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;ACjDA,sBAAsB,mBAAO,CAAC,qEAAoB;AAClD,aAAa,mBAAO,CAAC,sBAAQ;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,mBAAO,CAAC,qDAAY;AAC3C,mBAAmB,mBAAO,CAAC,uDAAa;;AAExC;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;AC9BA,sBAAsB,mBAAO,CAAC,iEAAgB;AAC9C,sBAAsB,mBAAO,CAAC,yEAAoB;AAClD,WAAW,mBAAO,CAAC,iDAAQ;AAC3B,aAAa,mBAAO,CAAC,wDAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;;;;;;;;;;;ACTA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8DAA8D;AAC9D;AACA;AACA;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,wDAAa;AACtC,sBAAsB,mBAAO,CAAC,sEAAqB;AACnD,sBAAsB,mBAAO,CAAC,8EAAyB;AACvD,aAAa,mBAAO,CAAC,wDAAa;;AAElC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;;AAEA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA,qBAAqB,UAAU;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB;;;;;;;;;;;;ACxDlB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;AC1CA,UAAU,mBAAO,CAAC,yDAAU;AAC5B;AACA,SAAS,mBAAO,CAAC,6CAAO;AACxB;AACA,YAAY,mBAAO,CAAC,2EAAiB;AACrC;AACA,SAAS,mBAAO,CAAC,mEAAa;AAC9B,kBAAkB,mBAAO,CAAC,yEAAgB;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AChTA,SAAS,mBAAO,CAAC,mEAAa;AAC9B,WAAW,mBAAO,CAAC,qDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,E;;;;;;;;;;;AC3CA,WAAW,mBAAO,CAAC,qDAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;AC1JA,eAAe,mBAAO,CAAC,yDAAU;AACjC,aAAa,mBAAO,CAAC,6CAAO;AAC5B;AACA,gBAAgB,mBAAO,CAAC,mEAAa;AACrC,aAAa,mBAAO,CAAC,mEAAa;AAClC,OAAO,KAAK,GAAG,mBAAO,CAAC,0CAAM;AAC7B,iBAAiB,mBAAO,CAAC,oDAAW;;AAEpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC,2BAA2B;AAC3B,YAAY;AACZ;AACA,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClKA,gEAAa,UAAU,SAAS,QAAQ,eAAe,QAAQ,QAAQ,SAAS,YAAY,oBAAoB,yBAAyB,gCAAgC,eAAe,qBAAqB,yBAAyB,gCAAgC,eAAe,iBAAiB,yBAAyB,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AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACvZA,aAAa,mBAAO,CAAC,6CAAO;AAC5B,YAAY,mBAAO,CAAC,4EAAkB;AACtC,eAAe,mBAAO,CAAC,oEAAc;AACrC,WAAW,mBAAO,CAAC,sDAAO;;AAE1B;AACA,gBAAgB,mBAAO,CAAC,8FAAwB;;AAEhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,EAAE;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7SA,aAAa,mBAAO,CAAC,kEAAa;AAClC,eAAe,mBAAO,CAAC,yDAAU;AACjC,aAAa,mBAAO,CAAC,6CAAO;AAC5B,YAAY,mBAAO,CAAC,4EAAkB;AACtC;AACA,gBAAgB,mBAAO,CAAC,oEAAc;AACtC;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvEA,SAAS,mBAAO,CAAC,6CAAO;AACxB,aAAa,mBAAO,CAAC,sDAAO;AAC5B,gBAAgB,mBAAO,CAAC,oEAAc;AACtC,cAAc,mBAAO,CAAC,4EAAkB;AACxC,iBAAiB,mBAAO,CAAC,gEAAS;AAClC,WAAW,mBAAO,CAAC,kEAAa;AAChC,WAAW,mBAAO,CAAC,wEAAgB;;;AAGnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB,yBAAyB;AACzB,yBAAyB;AACzB,yBAAyB;AACzB,yBAAyB;;AAEzB,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;;AAE1B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;;AAEA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B,yBAAyB;;AAEzB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,IAAI,EAAE,IAAI;AACxC;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,E;;;;;;;;;;;AChfA,aAAa,mBAAO,CAAC,6CAAO;AAC5B,SAAS,mBAAO,CAAC,sDAAO;AACxB,UAAU,mBAAO,CAAC,kEAAa;AAC/B,SAAS,mBAAO,CAAC,oEAAc;AAC/B,YAAY,mBAAO,CAAC,gEAAS;AAC7B,oBAAoB,mBAAO,CAAC,4EAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;ACzFA,aAAa,mBAAO,CAAC,6CAAO;AAC5B,SAAS,mBAAO,CAAC,sDAAO;AACxB,UAAU,mBAAO,CAAC,kEAAa;AAC/B,SAAS,mBAAO,CAAC,oEAAc;AAC/B,YAAY,mBAAO,CAAC,gEAAS;AAC7B,oBAAoB,mBAAO,CAAC,4EAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;ACxJA,aAAa,mBAAO,CAAC,6CAAO;AAC5B,aAAa,mBAAO,CAAC,kEAAa;AAClC,SAAS,mBAAO,CAAC,sDAAO;AACxB,YAAY,mBAAO,CAAC,4EAAkB;AACtC;;AAEA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjCA;AACA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC5Ea,4CAA4C,WAAW,EAAE,uEAAuE,YAAY,mBAAO,CAAC,sBAAQ,EAAE,mCAAmC,mBAAO,CAAC,qDAAU,GAAG,qCAAqC,gCAAgC,eAAe,yCAAyC,yBAAyB,uBAAuB,eAAe,uEAAuE,mCAAmC,sBAAsB,mCAAmC,8BAA8B,EAAE,4BAA4B,8EAA8E,mCAAmC,qBAAqB,aAAa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CA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;ACrBA,mC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,iC","file":"build/wallet.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/wallet/wallet.js\");\n","import sjcl from 'privacy-js-lib/lib/sjcl';\nimport { randBytes } from 'privacy-js-lib/lib/privacy_utils';\nimport { AES_BLOCK_SIZE } from './constants';\n\nclass AES {\n    constructor(key) {\n        // key is a 32-byte array\n        this.key = new sjcl.cipher.aes(sjcl.codec.bytes.toBits(key));\n    };\n\n    encrypt(data) {\n        // data is a byte array of arbitrary length\n        var iv = new Uint8Array(AES_BLOCK_SIZE + data.length);\n        iv.set(randBytes(AES_BLOCK_SIZE), 0);\n        iv.set(sjcl.codec.bytes.fromBits(sjcl.mode.ctr.encrypt(this.key, sjcl.codec.bytes.toBits(data), sjcl.codec.bytes.toBits(iv.slice(0, AES_BLOCK_SIZE)))), AES_BLOCK_SIZE);\n        return iv;\n    }\n\n    decrypt(data) {\n        var iv = data.slice(0, AES_BLOCK_SIZE);\n        var ct = data.slice(AES_BLOCK_SIZE, data.length);\n        return sjcl.codec.bytes.fromBits(sjcl.mode.ctr.decrypt(this.key, sjcl.codec.bytes.toBits(ct), sjcl.codec.bytes.toBits(iv)));\n    }\n}\n\n// let aes = new AES(randBytes());\n// console.log(aes.decrypt(aes.encrypt([0,2,3,4,5,6])));\n\nexport { AES };","import { Buffer } from 'safe-buffer';\nimport { hashSha3BytesToBytes } from 'privacy-js-lib/lib/privacy_utils';\n\nlet alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet alphabetIdx0 = '1';\nlet b58_map = new Uint8Array(256);\nlet base = 58;\nlet FACTOR = Math.log(base) / Math.log(256); // log(BASE) / log(256), rounded up\nlet iFACTOR = Math.log(256) / Math.log(base);\n\nb58_map = [\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 0, 1, 2, 3, 4, 5, 6,\n    7, 8, 255, 255, 255, 255, 255, 255,\n    255, 9, 10, 11, 12, 13, 14, 15,\n    16, 255, 17, 18, 19, 20, 21, 255,\n    22, 23, 24, 25, 26, 27, 28, 29,\n    30, 31, 32, 255, 255, 255, 255, 255,\n    255, 33, 34, 35, 36, 37, 38, 39,\n    40, 41, 42, 43, 255, 44, 45, 46,\n    47, 48, 49, 50, 51, 52, 53, 54,\n    55, 56, 57, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255\n];\n\nfunction encode(source) {\n    if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer');\n    if (source.length === 0) return '';\n\n    // Skip & count leading zeroes.\n    let zeroes = 0;\n    let length = 0;\n    let pbegin = 0;\n    let pend = source.length;\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n        pbegin++;\n        zeroes++;\n    }\n\n    // Allocate enough space in big-endian base58 representation.\n    let size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    let b58 = new Uint8Array(size);\n\n    // Process the bytes.\n    while (pbegin !== pend) {\n        let carry = source[pbegin];\n\n        // Apply \"b58 = b58 * 256 + ch\".\n        let i = 0;\n        for (let it = size - 1;\n            (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n            carry += (256 * b58[it]) >>> 0;\n            b58[it] = (carry % base) >>> 0;\n            carry = (carry / base) >>> 0;\n        }\n\n        if (carry !== 0) throw new Error('Non-zero carry');\n        length = i;\n        pbegin++;\n    }\n\n    // Skip leading zeroes in base58 result.\n    let it = size - length;\n    while (it !== size && b58[it] === 0) {\n        it++;\n    }\n\n    // Translate the result into a string.\n    let str = alphabetIdx0.repeat(zeroes);\n    for (; it < size; ++it) str += alphabet.charAt(b58[it]);\n\n    return str;\n}\n\nif (Array.prototype.equals)\n    console.warn(\"Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n// attach the .equals method to Array's prototype to call it on any array\nArray.prototype.equals = function (array) {\n    // if the other array is a falsy value, return\n    if (!array)\n        return false;\n\n    // compare lengths - can save a lot of time\n    if (this.length != array.length)\n        return false;\n\n    for (let i = 0, l = this.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (this[i] instanceof Array && array[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!this[i].equals(array[i]))\n                return false;\n        } else if (this[i] != array[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n// Hide method from for-in loops\nObject.defineProperty(Array.prototype, \"equals\", {\n    enumerable: false\n});\n\nfunction decodeUnsafe(source) {\n    if (typeof source !== 'string') throw new TypeError('Expected String');\n    if (source.length === 0) return Buffer.alloc(0);\n\n    let psz = 0;\n\n    // Skip leading spaces.\n    if (source[psz] === ' ') return;\n\n    // Skip and count leading '1's.\n    let zeroes = 0;\n    let length = 0;\n    while (source[psz] === alphabetIdx0) {\n        zeroes++;\n        psz++;\n    }\n\n    // Allocate enough space in big-endian base256 representation.\n    let size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    let b256 = new Uint8Array(size);\n\n    // Process the characters.\n    while (source[psz]) {\n        // Decode character\n        let carry = b58_map[source.charCodeAt(psz)];\n\n        // Invalid character\n        if (carry === 255) return;\n\n        let i = 0;\n        for (let it = size - 1;\n            (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n            carry += (base * b256[it]) >>> 0;\n            b256[it] = (carry % 256) >>> 0;\n            carry = (carry / 256) >>> 0;\n        }\n\n        if (carry !== 0) throw new Error('Non-zero carry');\n        length = i;\n        psz++;\n    }\n\n    // Skip trailing spaces.\n    if (source[psz] === ' ') return;\n\n    // Skip leading zeroes in b256.\n    let it = size - length;\n    while (it !== size && b256[it] === 0) {\n        it++;\n    }\n\n    let vch = Buffer.allocUnsafe(zeroes + (size - it));\n    vch.fill(0x00, 0, zeroes);\n\n    let j = zeroes;\n    while (it !== size) {\n        vch[j++] = b256[it++];\n    }\n\n    return vch;\n}\n\nfunction decode(string) {\n    let buffer = decodeUnsafe(string);\n    if (buffer) return buffer;\n    throw new Error('Non-base' + base + ' character');\n};\n\nfunction checkEncode(bytearrays, version) {\n    let res = new Uint8Array(bytearrays.length + 5);\n    if (!(Number(version) === version) || !(Number(version) < 256) || !(Number(version) >= 0)) {\n        throw new Error('CheckEncode: Wrong version!');\n    }\n    res[0] = version;\n    res.set(bytearrays, 1);\n    res.set(checkSumFirst4Bytes(res.slice(0, 1 + bytearrays.length)), 1 + bytearrays.length);\n    return encode(new Buffer.from(res));\n};\n\nfunction checkDecode(string) {\n    let dCode = new Uint8Array(decode(string));\n    let checkSum = checkSumFirst4Bytes(dCode.slice(0, dCode.length - 4));\n    let last4Bytes = dCode.slice(dCode.length - 4, dCode.length);\n    if (!(checkSum).equals(last4Bytes)) {\n        throw new Error(\"CheckDecode: Wrong checksum!\");\n    };\n    return {\n        version: dCode[0],\n        bytesDecoded: dCode.slice(1, dCode.length - 4)\n    };\n};\n\nfunction checkSumFirst4Bytes(data) {\n    let res = hashSha3BytesToBytes(data);\n    res = res.slice(0, 4);\n    return res;\n}\n\nexport {\n    checkEncode,\n    checkDecode,\n    checkSumFirst4Bytes\n}\n","import bn from 'bn.js';\nimport { P256 } from 'privacy-js-lib/lib/ec';\nimport { COMPRESS_POINT_SIZE, BIG_INT_SIZE } from 'privacy-js-lib/lib/constants';\nimport { addPaddingBigInt } from 'privacy-js-lib/lib/privacy_utils';\nimport { PedCom } from 'privacy-js-lib/lib/pedersen';\nimport { hybridEncrypt } from './hybridencryption';\nimport { getShardIDFromLastByte } from './common';\nimport { checkEncode} from './base58';\nimport { NUM_COIN_PROPERTIES, ENCODE_VERSION } from './constants';\n\nconst zeroPoint = P256.curve.point(0, 0);\n\nclass Coin {\n  constructor() {\n    this.publicKey = zeroPoint;\n    this.coinCommitment = zeroPoint;\n    this.snderivator = new bn(0);\n    this.serialNumber = zeroPoint;\n    this.randomness = new bn(0);\n    this.value = new bn(0);\n    this.info = new Uint8Array(0);\n    return this;\n  }\n\n  // convertCoinToEncodedObj(){\n  //   let res = {};\n  //   res.publicKey = checkEncode(this.publicKey.compress(), ENCODE_VERSION);\n  //   res.coinCommitment = checkEncode(this.coinCommitment.compress(), ENCODE_VERSION);\n  //   res.snderivator = checkEncode(this.snderivator.toArray(), ENCODE_VERSION );\n  //   res.serialNumber = checkEncode(this.serialNumber.compress(), ENCODE_VERSION);\n  //   res.randomness = checkEncode(this.randomness.toArray(), ENCODE_VERSION);\n  //   res.value = checkEncode(this.value.toArray(), ENCODE_VERSION);\n  //   res.info = checkEncode(this.info, ENCODE_VERSION )\n\n  //   return res;\n  // }\n\n  set(publicKey, coinCommitment, snd, serialNumber, randomness, value, info) {\n    this.publicKey = publicKey;\n    this.snderivator = snd;\n    this.serialNumber = serialNumber;\n    this.randomness = randomness;\n    this.value = value;\n    this.info = info;\n\n    if (coinCommitment !== null) {\n      this.coinCommitment = coinCommitment;\n    } else {\n      this.commitAll();\n    }\n\n    return this;\n  } \n\n  // hash hashes coin bytes to 32 bytes array\n  hash() {\n    return utils.hashSha3BytesToBytes(this.toBytes())\n  }\n\n  // toBytes converts coin to bytes array\n  toBytes() {\n    let partialBytes = new Array(NUM_COIN_PROPERTIES);\n    let totalSize = 0;\n\n    // Public key\n    if (this.publicKey !== null) {\n      partialBytes[0] = new Uint8Array(COMPRESS_POINT_SIZE + 1);\n      partialBytes[0].set([COMPRESS_POINT_SIZE], 0);\n      partialBytes[0].set(this.publicKey.compress(), 1);\n      totalSize += COMPRESS_POINT_SIZE + 1\n    } else {\n      partialBytes[0] = new Uint8Array(1);\n      partialBytes[0].set([0], 0);\n      totalSize += 1\n    }\n\n    // Coin commitment\n    if (this.coinCommitment !== null) {\n      partialBytes[1] = new Uint8Array(COMPRESS_POINT_SIZE + 1);\n      partialBytes[1].set([COMPRESS_POINT_SIZE], 0);\n      partialBytes[1].set(this.coinCommitment.compress(), 1);\n      totalSize += COMPRESS_POINT_SIZE + 1\n    } else {\n      partialBytes[1] = new Uint8Array(1);\n      partialBytes[1].set([0], 0);\n      totalSize += 1\n    }\n\n    // serial number derivator\n    if (this.snderivator !== null) {\n      partialBytes[2] = new Uint8Array(BIG_INT_SIZE + 1);\n      partialBytes[2].set([BIG_INT_SIZE], 0);\n      partialBytes[2].set(this.snderivator.toArray(), 1);\n      totalSize += BIG_INT_SIZE + 1\n    } else {\n      partialBytes[2] = new Uint8Array(1);\n      partialBytes[2].set([0], 0);\n      totalSize += 1\n    }\n\n    // Serial number\n    if (this.serialNumber !== null) {\n      partialBytes[3] = new Uint8Array(COMPRESS_POINT_SIZE + 1);\n      partialBytes[3].set([COMPRESS_POINT_SIZE], 0);\n      partialBytes[3].set(this.serialNumber.compress(), 1);\n      totalSize += COMPRESS_POINT_SIZE + 1\n    } else {\n      partialBytes[3] = new Uint8Array(1);\n      partialBytes[3].set([0], 0);\n      totalSize += 1\n    }\n\n    // randomness\n    if (this.randomness !== null) {\n      partialBytes[4] = new Uint8Array(BIG_INT_SIZE + 1);\n      partialBytes[4].set([BIG_INT_SIZE], 0);\n      partialBytes[4].set(this.randomness.toArray(), 1);\n      totalSize += BIG_INT_SIZE + 1\n    } else {\n      partialBytes[4] = new Uint8Array(1);\n      partialBytes[4].set([0], 0);\n      totalSize += 1\n    }\n\n    // value\n    if (this.value > 0) {\n      let valueBytes = this.value.toArray();\n      let valueBytesLen = valueBytes.length;\n\n      partialBytes[5] = new Uint8Array(1 + valueBytesLen);\n      partialBytes[5].set([valueBytesLen], 0);\n      partialBytes[5].set(valueBytes, 1);\n      totalSize = totalSize + 1 + valueBytesLen\n    } else {\n      partialBytes[5] = new Uint8Array(1);\n      partialBytes[5].set([0], 0);\n      totalSize += 1\n    }\n\n    // info\n    if (this.info.length > 0) {\n      let infoLen = this.info.length;\n\n      partialBytes[6] = new Uint8Array(1 + infoLen);\n      partialBytes[6].set([infoLen], 0);\n      partialBytes[6].set(this.info, 1);\n      totalSize = totalSize + 1 + infoLen\n    } else {\n      partialBytes[6] = new Uint8Array(1);\n      partialBytes[6].set([0], 0);\n      totalSize += 1\n    }\n\n    let bytes = new Uint8Array(totalSize);\n    let index = 0;\n    for (let i = 0; i < partialBytes.length; i++) {\n      bytes.set(partialBytes[i], index);\n      index += partialBytes[i].length;\n    }\n    return bytes;\n  }\n\n  // eq return true if this = targetCoin\n  eq(targetCoin) {\n    if (!this.publicKey.eq(targetCoin.publicKey)) {\n      return false;\n    }\n    if (!this.coinCommitment.eq(targetCoin.coinCommitment)) {\n      return false;\n    }\n    if (!this.snderivator.eq(targetCoin.snderivator)) {\n      return false;\n    }\n    if (!this.serialNumber.eq(targetCoin.serialNumber)) {\n      return false;\n    }\n    if (!this.randomness.eq(targetCoin.randomness)) {\n      return false;\n    }\n    return (this.value.eq(targetCoin.value));\n  }\n\n  commitAll() {\n    let shardId = getShardIDFromLastByte(this.getPubKeyLastByte());\n    this.coinCommitment = PedCom.commitAll([new bn(0), this.value, this.snderivator, new bn(shardId), this.randomness]);\n    this.coinCommitment = this.coinCommitment.add(this.publicKey)\n  }\n\n  getPubKeyLastByte() {\n    let pubKeyBytes = this.publicKey.compress();\n    return pubKeyBytes[pubKeyBytes.length - 1];\n  }\n}\n\nclass InputCoin {\n  constructor() {\n    this.coinDetails = new Coin();\n    return this;\n  }\n\n  // toBytes converts input coin to bytes array\n  toBytes() {\n    return this.coinDetails.toBytes();\n  }\n\n  // convertInputCoinToEncodedObj(){\n  //   let res = new InputCoin();\n  //   res.coinDetails = this.coinDetails;\n  //   res.coinDetails = res.coinDetails.convertCoinToEncodedObj();\n  //   return res;\n  // }\n}\n\nclass OutputCoin {\n  constructor() {\n    this.coinDetails = new Coin();\n    this.coinDetailsEncrypted = null;\n    return this;\n  }\n\n  // toBytes converts output coin to bytes array\n  toBytes() {\n    let coinDetailsEncryptedBytes;\n\n    if (this.coinDetailsEncrypted !== null ){\n      let ciphertextBytes = this.coinDetailsEncrypted.toBytes();\n      let ciphertextBytesLen = ciphertextBytes.length;\n\n      coinDetailsEncryptedBytes = new Uint8Array(ciphertextBytesLen + 1);\n      coinDetailsEncryptedBytes.set([ciphertextBytesLen], 0);\n      coinDetailsEncryptedBytes.set(ciphertextBytes, 1);\n    } else {\n      coinDetailsEncryptedBytes = new Uint8Array(1);\n      coinDetailsEncryptedBytes.set([0], 0);\n    }\n    let coinDetailsEncryptedBytesLen = coinDetailsEncryptedBytes.length;\n\n    let coinDetailBytes = this.coinDetails.toBytes();\n\n    let bytes = new Uint8Array(coinDetailsEncryptedBytesLen + coinDetailBytes.length + 1);\n    bytes.set(coinDetailsEncryptedBytes, 0);\n    bytes.set([coinDetailBytes.length], coinDetailsEncryptedBytesLen);\n    bytes.set(coinDetailBytes, coinDetailsEncryptedBytesLen + 1);\n\n    return bytes;\n  }\n\n  // encrypt encrypts output coins using recipient transmission key\n  encrypt(recipientTK) {\n    let valueBytes = this.coinDetails.value.toArray();\n    let randomnessBytes = addPaddingBigInt(this.coinDetails.randomness, BIG_INT_SIZE);\n\n    let msg = new Uint8Array(valueBytes.length + BIG_INT_SIZE);\n    msg.set(randomnessBytes, 0);\n    msg.set(valueBytes, BIG_INT_SIZE);\n\n    this.coinDetailsEncrypted = hybridEncrypt(msg, recipientTK)\n  }\n}\n\nexport { Coin, InputCoin, OutputCoin };\n\n\n\n\n\n\n","import { Wallet } from \"./wallet/wallet\";\nimport { HASH_SIZE } from \"./constants\";\n\n/**\n * @return {number}\n */\nfunction getShardIDFromLastByte(lastByte) {\n    return lastByte % Wallet.ShardNumber\n}\n\nfunction convertHashToStr(hash) {\n    let tmpHash = hash.slice();\n    for (let i = 0; i < tmpHash.length / 2; i++) {\n        let tmp = tmpHash[i];\n        tmpHash[i] = tmpHash[HASH_SIZE - 1 - i];\n        tmpHash[HASH_SIZE - 1 - i] = tmp;\n    }\n    return byteToHexString(tmpHash);\n}\n\nfunction byteToHexString(uint8arr) {\n    if (!uint8arr) {\n        return '';\n    }\n\n    var hexStr = '';\n    for (var i = 0; i < uint8arr.length; i++) {\n        var hex = (uint8arr[i] & 0xff).toString(16);\n        hex = (hex.length === 1) ? '0' + hex : hex;\n        hexStr += hex;\n    }\n\n    return hexStr.toLowerCase();\n}\n\nfunction hexStringToByte(str) {\n    if (!str) {\n        return new Uint8Array();\n    }\n\n    var a = [];\n    for (var i = 0, len = str.length; i < len; i += 2) {\n        a.push(parseInt(str.substr(i, 2), 16));\n    }\n\n    return new Uint8Array(a);\n}\n\nfunction newHashFromStr(str) {\n    let bytes = hexStringToByte(str);\n    for (let i = 0; i < bytes.length / 2; i++) {\n        let tmp = bytes[i];\n        bytes[i] = bytes[HASH_SIZE - 1 - i];\n        bytes[HASH_SIZE - 1 - i] = tmp;\n    }\n    return bytes;\n}\n\nexport {\n    getShardIDFromLastByte,\n    newHashFromStr,\n    convertHashToStr,\n    hexStringToByte,\n    byteToHexString\n};","const NUM_COIN_PROPERTIES = 7;\nconst NUM_PROOF_PROPERTIES = 14;\nconst ENCODE_VERSION = 0x00;\n\nconst SIG_PUB_KEY_SIZE = 33;\nconst SIG_NO_PRIVACY_SIZE = 64;\nconst SIG_PRIVACY_SIZE = 96;\n\nconst SPENDING_KEY_SIZE = 32;\nconst PUBLIC_KEY_SIZE = 33;\nconst PAYMENT_ADDR_SIZE = 66;\nconst TRANSMISSION_KEY_SIZE = 33;\nconst VIEWING_KEY_SIZE = 65;\n\nconst ENCRYPTED_RANDOMNESS_SIZE = 48; //bytes\nconst ENCRYPTED_SYM_KEY_SIZE = 66; //bytes\nconst ELGAMAL_CIPHERTEXT_SIZE = 66;\n\nconst AES_BLOCK_SIZE = 16;\nconst HASH_SIZE = 32; // bytes\n\nconst INPUT_COINS_PRIVACY_SIZE = 40;\nconst OUTPUT_COINS_CONSTANTS_SIZE = 223;\nconst INPUT_COINS_NO_PRIVACY_SIZE = 178; // PublicKey + coin commitment + SND + Serial number + Randomness + Value + 7 flag\nconst OUTPUT_COINS_NO_PRIVACY_SIZE = 147;\n\nexport {\n    NUM_COIN_PROPERTIES,\n    NUM_PROOF_PROPERTIES,\n    ENCODE_VERSION,\n    SIG_PUB_KEY_SIZE,\n    SIG_NO_PRIVACY_SIZE,\n    SIG_PRIVACY_SIZE,\n    SPENDING_KEY_SIZE,\n    PUBLIC_KEY_SIZE,\n    PAYMENT_ADDR_SIZE,\n    TRANSMISSION_KEY_SIZE,\n    VIEWING_KEY_SIZE,\n    ENCRYPTED_RANDOMNESS_SIZE,\n    ENCRYPTED_SYM_KEY_SIZE,\n    ELGAMAL_CIPHERTEXT_SIZE,\n    AES_BLOCK_SIZE,\n    HASH_SIZE,\n    INPUT_COINS_NO_PRIVACY_SIZE,\n    OUTPUT_COINS_NO_PRIVACY_SIZE,\n    INPUT_COINS_PRIVACY_SIZE,\n    OUTPUT_COINS_CONSTANTS_SIZE,\n};\n","import bn from 'bn.js';\nimport { P256 } from 'privacy-js-lib/lib/ec';\nimport { randScalar } from 'privacy-js-lib/lib/privacy_utils';\nimport { COMPRESS_POINT_SIZE } from 'privacy-js-lib/lib/constants';\nimport { ELGAMAL_CIPHERTEXT_SIZE } from './constants';\n\n// PrivateKey sk <-- Zn\n// Pk  pk <-- G*sk\n// Plaintext M is a EllipticPoint\n// Ciphertext contains 2 EllipticPoint C1, C2\n// C1 = G*k\n// C2 = pk*k + M\n// k <-- Zn is a secret random number\n\nfunction encrypt(publicKey, data) {\n    if (!data.isSafe()) {\n        throw new Error(\"Data is not safe on P256!\");\n    }\n\n    let k = randScalar();\n    let C1 = P256.g.mul(k);\n    let C2 = (publicKey.mul(k)).add(data);\n\n    let res = new Uint8Array(COMPRESS_POINT_SIZE * 2);\n    res.set(C1.compress(), 0);\n    res.set(C2.compress(), COMPRESS_POINT_SIZE);\n    return res;\n}\n\nfunction decrypt(privateKeyBytes, ciphertext) {\n    if (ciphertext.length != ELGAMAL_CIPHERTEXT_SIZE) {\n        throw new Error(\"Ciphertext in inputs is not Elgamal's ciphertext!\");\n    }\n\n    let privateKey = new bn(privateKeyBytes, 10, 'be');\n\n    try {\n        let C1 = P256.decompress(ciphertext.slice(0, COMPRESS_POINT_SIZE));\n        let C2 = P256.decompress(ciphertext.slice(COMPRESS_POINT_SIZE, 2 * COMPRESS_POINT_SIZE));\n        \n        return C2.sub(C1.mul(privateKey));\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport {\n    encrypt,\n    decrypt\n}","import { P256 } from 'privacy-js-lib/lib/ec';\nimport { addPaddingBigInt } from 'privacy-js-lib/lib/privacy_utils';\nimport { BIG_INT_SIZE } from 'privacy-js-lib/lib/constants';\nimport { AES } from './aes';\nimport { encrypt } from './elgamal';\n\nclass Ciphertext {\n  // constructor initializes a new empty ciphertext\n  constructor() {\n    this.msgEncrypted = [];\n    this.symKeyEncrypted = [];\n  }\n\n  // isNull returns true if msgEncrypted or symKeyEncrypted are empty, false otherwise\n  isNull() {\n    return this.msgEncrypted.length === 0 || this.symKeyEncrypted.length === 0;\n  }\n\n  // toBytes converts a ciphertext to a byte array\n  toBytes() {\n    let bytes = new Uint8Array(this.msgEncrypted.length + this.symKeyEncrypted.length);\n    bytes.set(this.symKeyEncrypted, 0);\n    bytes.set(this.msgEncrypted, this.symKeyEncrypted.length);\n    return bytes;\n  }\n}\n\n// hybridEncrypt encrypts msg with publicKey using ElGamal cryptosystem\nfunction hybridEncrypt(msg, publicKey) {\n  // Initialize a ciphertext\n  let ciphertext = new Ciphertext();\n\n  // Generate a AES key as the abscissa of a random elliptic point\n  let aesKeyPoint = P256.randomize();\n  let aesKeyByte = addPaddingBigInt(aesKeyPoint.getX(), BIG_INT_SIZE);\n\n  // Encrypt msg using aesKeyByte\n  let aesScheme = new AES(aesKeyByte);\n  ciphertext.msgEncrypted = aesScheme.encrypt(msg);\n\n  // Encrypt aesKeyByte using ElGamal cryptosystem\n  let publicKeyPoint = P256.decompress(publicKey);\n  ciphertext.symKeyEncrypted = encrypt(publicKeyPoint, aesKeyPoint);\n\n  return ciphertext\n}\n\nexport {\n  Ciphertext,\n  hybridEncrypt,\n};","import { hashSha3BytesToBytes } from 'privacy-js-lib/lib/privacy_utils';\nimport { P256 } from 'privacy-js-lib/lib/ec';\nimport { VIEWING_KEY_SIZE, PUBLIC_KEY_SIZE, PAYMENT_ADDR_SIZE } from './constants';\nimport bn from 'bn.js';\n\n// GenerateSpendingKey generates spending key from seed\nfunction GenerateSpendingKey(seed) {\n  let spendingKey = hashSha3BytesToBytes(seed);\n\n  // check if spendingKey is less than P256.n\n  while (new bn(spendingKey).gt(P256.n)) {\n    spendingKey = hashSha3BytesToBytes(spendingKey);\n  }\n\n  return spendingKey;\n}\n\n// GeneratePublicKey generates a public key (address) from spendingKey\nfunction GeneratePublicKey(spendingKey) {\n  return (P256.g.mul(new bn(spendingKey))).compress();\n}\n\n// GenerateReceivingKey generates a receiving key (ElGamal decryption key) from spendingKey\nfunction GenerateReceivingKey(spendingKey) {\n  let receivingKey = hashSha3BytesToBytes(spendingKey);\n\n  // check if spendingKey is less than P256.n\n  while (new bn(receivingKey).gt(P256.n)) {\n    receivingKey = hashSha3BytesToBytes(receivingKey);\n  }\n\n  return receivingKey;\n}\n\n// GenerateTransmissionKey generates a transmission key (ElGamal encryption key) from receivingKey\nfunction GenerateTransmissionKey(receivingKey) {\n  return (P256.g.mul(new bn(receivingKey))).compress();\n}\n\n// ViewingKey consists of publicKey and receivingKey\nclass ViewingKey {\n  constructor() {\n    this.Pk = [];\n    this.Rk = [];\n    return this;\n  }\n\n  // fromSpendingKey derives viewingKey from spendingKey\n  fromSpendingKey(spendingKey) {\n    this.Pk = GeneratePublicKey(spendingKey);\n    this.Rk = GenerateReceivingKey(spendingKey);\n    return this;\n  }\n\n  // toBytes converts viewingKey to a byte array\n  toBytes() {\n    let viewingKeyBytes = new Uint8Array(VIEWING_KEY_SIZE);\n    viewingKeyBytes.set(this.Pk, 0);\n    viewingKeyBytes.set(this.Rk, PUBLIC_KEY_SIZE);\n    return viewingKeyBytes;\n  }\n}\n\n// PaymentAddress consists of public key and transmission key\nclass PaymentAddress {\n  // fromSpendingKey derives a payment address corresponding to spendingKey\n  fromSpendingKey(spendingKey) {\n    this.Pk = GeneratePublicKey(spendingKey);\n    this.Tk = GenerateTransmissionKey(GenerateReceivingKey(spendingKey));\n    return this;\n  }\n\n  // toBytes converts payment address to a byte array\n  toBytes() {\n    let paymentAddrBytes = new Uint8Array(PAYMENT_ADDR_SIZE);\n    paymentAddrBytes.set(this.Pk);\n    paymentAddrBytes.set(this.Tk, PUBLIC_KEY_SIZE);\n    return paymentAddrBytes;\n  }\n}\n\nclass PaymentInfo {\n  constructor(paymentAddr, amount) {\n    this.PaymentAddress = paymentAddr;\n    this.Amount = amount;\n    return this;\n  }\n}\n\nexport  {\n  GenerateSpendingKey,\n  GeneratePublicKey,\n  GenerateTransmissionKey,\n  GenerateReceivingKey,\n  PaymentAddress,\n  ViewingKey,\n  PaymentInfo\n}\n","import { PaymentAddress, ViewingKey, GenerateSpendingKey } from './key';\nimport { SchnPrivKey } from './schnorr';\nimport { hashSha3BytesToBytes } from 'privacy-js-lib/lib/privacy_utils';\nimport bn from 'bn.js';\n\nclass KeySet {\n  constructor() {\n    this.PrivateKey = [];\n    this.PaymentAddress = new PaymentAddress();\n    this.ReadonlyKey = new ViewingKey();\n  }\n\n  importFromPrivateKey(privateKey) {\n    this.PrivateKey = privateKey;\n    this.PaymentAddress = new PaymentAddress().fromSpendingKey(privateKey);\n    this.ReadonlyKey = new ViewingKey().fromSpendingKey(privateKey);\n    return this;\n  }\n\n  generateKey(seed) {\n    this.PrivateKey = GenerateSpendingKey(seed);\n    this.PaymentAddress = new PaymentAddress();\n    this.PaymentAddress.fromSpendingKey(this.PrivateKey);\n    this.ReadonlyKey = new ViewingKey();\n    this.ReadonlyKey.fromSpendingKey(this.PrivateKey);\n  }\n\n  sign(data){\n    let hash = hashSha3BytesToBytes(data);\n    let privKeySig = new SchnPrivKey(new bn(this.PrivateKey), new bn(0));\n\n    return privKeySig.sign(hash);\n  }\n}\n\nexport { KeySet };\n","import bn from 'bn.js';\n\nfunction knapsack(value, target) {\n  let n = value.length;\n  let res = new Array(n);\n  let K = new Array(n + 1);\n  let i = 0;\n  let w = 0;\n  for (i = 0; i <= n; i++) {\n    res[i] = false;\n    let rowI = new Array(target + 1);\n    for (w = 0; w <= target; w++) {\n      rowI[w] = ((i * w) == 0) ? (0) : ((value[i - 1] <= w) ? (((1 + K[i - 1][w - value[i - 1]]) < K[i - 1][w]) ? (K[i - 1][w]) : (1 + K[i - 1][w - value[i - 1]])) : (K[i - 1][w]));\n    }\n    K[i] = rowI;\n  }\n  i = n;\n  w = target;\n  while ((i * w) > 0) {\n    if (K[i][w] != K[i - 1][w]) {\n      res[i - 1] = true;\n      w -= value[i - 1];\n    }\n    i--;\n  }\n  return res;\n}\n\nfunction greedy(inputCoins, target) {\n  let sum = new bn(0);\n  let i = 0;\n  for (; sum.cmp(target) < 0; i++) {\n    sum = sum.add(inputCoins[i].coinDetails.value);\n  }\n  return i - 1;\n}\n\nexport  {\n  knapsack,\n  greedy\n};","import bn from 'bn.js';\nimport { P256 } from 'privacy-js-lib/lib/ec';\nimport { AggregatedRangeWitness } from 'privacy-js-lib/lib/zkps/aggregatedrange';\nimport { SNNoPrivacyWitness } from 'privacy-js-lib/lib/zkps/snnoprivacy';\nimport { SNPrivacyWitness } from 'privacy-js-lib/lib/zkps/snprivacy';\nimport { OneOutOfManyWitness } from 'privacy-js-lib/lib/zkps/oneoutofmany';\nimport { estimateMultiRangeProofSize } from 'privacy-js-lib/lib/zkps/aggregatedrange_utils';\nimport { PedCom } from 'privacy-js-lib/lib/pedersen';\nimport { randScalar, intToByteArr, addPaddingBigInt } from 'privacy-js-lib/lib/privacy_utils';\nimport { getShardIDFromLastByte } from './common';\nimport { \n  NUM_PROOF_PROPERTIES,\n  INPUT_COINS_NO_PRIVACY_SIZE,\n  OUTPUT_COINS_NO_PRIVACY_SIZE,\n  INPUT_COINS_PRIVACY_SIZE,\n  OUTPUT_COINS_CONSTANTS_SIZE,\n} from './constants';\nimport {\n  SK, SHARD_ID, VALUE, SND, CM_RING_SIZE,\n  ONE_OF_MANY_PROOF_SIZE,\n  SN_PRIVACY_PROOF_SIZE,\n  SN_NO_PRIVACY_PROOF_SIZE,\n  COMPRESS_POINT_SIZE,\n  UINT64_SIZE\n} from 'privacy-js-lib/lib/constants';\n\nclass PaymentWitness {\n  constructor() {\n    this.spendingKey = new bn(0);\n    this.randSK = new bn(0);\n\n    this.inputCoins = []; // []*privacy.InputCoin\n    this.outputCoins = []; // []*privacy.OutputCoin\n\n    this.commitmentIndices = []; // []*bigint\n    this.myCommitmentIndices = []; // []uint64\n    this.oneOfManyWitness = []; // []*OneOutOfManyWitness\n    this.serialNumberWitness = []; // []*PKSNPrivacyWitness\n    this.snNoPrivacyWitness = []; // []*snNoPrivacyWitness\n    this.aggregatedRangeWitness = null;\n\n    this.comOutputValue = []; // []*privacy.EllipticPoint\n    this.comOutputSND = []; // []*privacy.EllipticPoint\n    this.comOutputShardID = []; // []*privacy.EllipticPoint\n\n    this.comInputSK = null;\n    this.comInputValue = []; // []*privacy.EllipticPoint\n    this.comInputSND = []; // []*privacy.EllipticPoint\n    this.comInputShardID = null;\n  }\n\n  init(hasPrivacy, spendingKey, inputCoins, outputCoins, pkLastByteSender, commitments, commitmentIndices, myCommitmentIndices) {\n    let numInputCoin = inputCoins.length;\n\n    // no privacy\n    if (!hasPrivacy) {\n      // random randomness and calculate coin commitments for output coins\n      for (let i = 0; i < outputCoins.length; i++) {\n        outputCoins[i].coinDetails.randomness = randScalar();\n        outputCoins[i].coinDetails.commitAll();\n      }\n\n      this.spendingKey = spendingKey;\n      this.inputCoins = inputCoins;\n      this.outputCoins = outputCoins;\n\n      let publicKey = inputCoins[0].coinDetails.publicKey;\n\n      /***** Build witness for proving that serial number is derived from the committed derivator for each input coins *****/\n      this.snNoPrivacyWitness = new Array(numInputCoin);\n      for (let i = 0; i < inputCoins.length; i++) {\n        this.snNoPrivacyWitness[i] = new SNNoPrivacyWitness();\n        this.snNoPrivacyWitness[i].set(inputCoins[i].coinDetails.serialNumber, publicKey, inputCoins[i].coinDetails.snderivator, this.spendingKey)\n      }\n      return null\n    }\n\n    // has privacy\n    this.spendingKey = spendingKey;\n    this.inputCoins = inputCoins;\n    this.outputCoins = outputCoins;\n    this.commitmentIndices = commitmentIndices;\n    this.myCommitmentIndices = myCommitmentIndices;\n\n    // save rand SK for Schnorr signature\n    this.randSK = randScalar();\n    // calculate sk commitment of input coins\n    this.comInputSK = PedCom.commitAtIndex(this.spendingKey, this.randSK, SK);\n\n    // calculate shard id commitment of input coins\n    let randInputShardID = randScalar();\n    let shardID = getShardIDFromLastByte(pkLastByteSender);\n    this.comInputShardID = PedCom.commitAtIndex(new bn(shardID), randInputShardID, SHARD_ID);\n\n    this.comInputValue = new Array(numInputCoin);\n    this.comInputSND = new Array(numInputCoin);\n    let randInputValue = new Array(numInputCoin);\n    let randInputSND = new Array(numInputCoin);\n\n    // cmInputValueAll is sum of all input coins' value commitments\n    let cmInputValueAll = P256.curve.point(0, 0);\n    let randInputValueAll = new bn(0);\n\n    // Summing all commitments of each input coin into one commitment and proving the knowledge of its Openings\n    let cmInputSum = new Array(numInputCoin);\n    let randInputSum = new Array(numInputCoin);\n\n    // randInputSumAll is sum of all randomess of coin commitments\n    let randInputSumAll = new bn(0);\n\n    let commitmentTemps = new Array(numInputCoin);\n    let randInputIsZero = new Array(numInputCoin);\n\n    this.oneOfManyWitness = new Array(numInputCoin);\n    this.serialNumberWitness = new Array(numInputCoin);\n\n    let preIndex = 0;\n    for (let i = 0; i < numInputCoin; i++) {\n      // commit each component of coin commitment\n      randInputValue[i] = randScalar();\n      randInputSND[i] = randScalar();\n\n      this.comInputValue[i] = PedCom.commitAtIndex(inputCoins[i].coinDetails.value, randInputValue[i], VALUE);\n      this.comInputSND[i] = PedCom.commitAtIndex(inputCoins[i].coinDetails.snderivator, randInputSND[i], SND);\n\n      cmInputValueAll = cmInputValueAll.add(this.comInputValue[i]);\n\n      randInputValueAll = randInputValueAll.add(randInputValue[i]);\n      randInputValueAll = randInputValueAll.umod(P256.n);\n\n      /***** Build witness for proving one-out-of-N commitments is a commitment to the coins being spent *****/\n      cmInputSum[i] = this.comInputSK.add(this.comInputValue[i]);\n      cmInputSum[i] = cmInputSum[i].add(this.comInputSND[i]);\n      cmInputSum[i] = cmInputSum[i].add(this.comInputShardID);\n\n      randInputSum[i] = this.randSK;\n      randInputSum[i] = randInputSum[i].add(randInputValue[i]);\n      randInputSum[i] = randInputSum[i].add(randInputSND[i]);\n      randInputSum[i] = randInputSum[i].add(randInputShardID);\n      randInputSum[i] = randInputSum[i].mod(P256.n);\n\n      randInputSumAll = randInputSumAll.add(randInputSum[i]);\n      randInputSumAll = randInputSumAll.umod(P256.n);\n\n      // commitmentTemps is a list of commitments for protocol one-out-of-N\n      commitmentTemps[i] = new Array(CM_RING_SIZE);\n\n      randInputIsZero[i] = inputCoins[i].coinDetails.randomness;\n      randInputIsZero[i] = randInputIsZero[i].sub(randInputSum[i]);\n      randInputIsZero[i] = randInputIsZero[i].umod(P256.n);\n\n      for (let j = 0; j < CM_RING_SIZE; j++) {\n        commitmentTemps[i][j] = commitments[preIndex + j].sub(cmInputSum[i]);\n      }\n\n      let indexIsZero = myCommitmentIndices[i] % CM_RING_SIZE;\n\n      this.oneOfManyWitness[i] = new OneOutOfManyWitness();\n      this.oneOfManyWitness[i].set(commitmentTemps[i], randInputIsZero[i], indexIsZero);\n      preIndex = CM_RING_SIZE * (i + 1);\n      // ---------------------------------------------------\n\n      /***** Build witness for proving that serial number is derived from the committed derivator *****/\n      this.serialNumberWitness[i] = new SNPrivacyWitness();\n      this.serialNumberWitness[i].set(inputCoins[i].coinDetails.serialNumber, this.comInputSK, this.comInputSND[i],\n        spendingKey, this.randSK, inputCoins[i].coinDetails.snderivator, randInputSND[i])\n\n      // ---------------------------------------------------\n    }\n\n    let numOutputCoin = this.outputCoins.length;\n\n    let randOutputValue = new Array(numOutputCoin);\n    let randOutputSND = new Array(numOutputCoin);\n    let randOutputShardID = new Array(numOutputCoin);\n    let cmOutputValue = new Array(numOutputCoin);\n    let cmOutputSND = new Array(numOutputCoin);\n    let cmOutputShardID = new Array(numOutputCoin);\n\n    let cmOutputSum = new Array(numOutputCoin);\n    let randOutputSum = new Array(numOutputCoin);\n\n    let cmOutputSumAll = P256.curve.point(0, 0);\n\n    // cmOutputValueAll is sum of all value coin commitments\n    let cmOutputValueAll = P256.curve.point(0, 0);\n    let randOutputValueAll = new bn(0);\n\n    for (let i = 0; i < numOutputCoin; i++) {\n      if (i === numOutputCoin - 1) {\n        randOutputValue[i] = randInputValueAll.sub(randOutputValueAll);\n        randOutputValue[i] = randOutputValue[i].umod(P256.n);\n      } else {\n        randOutputValue[i] = randScalar();\n      }\n\n      randOutputSND[i] = randScalar();\n      randOutputShardID[i] = randScalar();\n\n      cmOutputValue[i] = PedCom.commitAtIndex(outputCoins[i].coinDetails.value, randOutputValue[i], VALUE);\n      cmOutputSND[i] = PedCom.commitAtIndex(outputCoins[i].coinDetails.snderivator, randOutputSND[i], SND);\n\n      let shardID = getShardIDFromLastByte(outputCoins[i].coinDetails.getPubKeyLastByte());\n      cmOutputShardID[i] = PedCom.commitAtIndex(new bn(shardID), randOutputShardID[i], SHARD_ID);\n\n\n      randOutputSum[i] = randOutputValue[i].add(randOutputSND[i]);\n      randOutputSum[i] = randOutputSum[i].add(randOutputShardID[i]);\n      randOutputSum[i] = randOutputSum[i].umod(P256.n);\n\n      cmOutputSum[i] = cmOutputValue[i].add(cmOutputSND[i]);\n      cmOutputSum[i] = cmOutputSum[i].add(outputCoins[i].coinDetails.publicKey);\n      cmOutputSum[i] = cmOutputSum[i].add(cmOutputShardID[i]);\n\n      cmOutputValueAll = cmOutputValueAll.add(cmOutputValue[i]);\n      randOutputValueAll = randOutputValueAll.add(randOutputValue[i]);\n      randOutputValueAll = randOutputValueAll.umod(P256.n);\n      // calculate final commitment for output coins\n      outputCoins[i].coinDetails.coinCommitment = cmOutputSum[i];\n      outputCoins[i].coinDetails.randomness = randOutputSum[i];\n\n      cmOutputSumAll = cmOutputSumAll.add(cmOutputSum[i]);\n    }\n\n    // For aggregated range Protocol\n    // proving each output value is less than vmax\n    // proving sum of output values is less than vmax\n    let outputValue = new Array(numOutputCoin);\n    for (let i = 0; i < numOutputCoin; i++) {\n      outputValue[i] = outputCoins[i].coinDetails.value;\n    }\n    this.aggregatedRangeWitness = new AggregatedRangeWitness();\n    this.aggregatedRangeWitness.set(outputValue, randOutputValue);\n    // ---------------------------------------------------\n\n    // save partial commitments (value, input, shardID)\n    this.comOutputValue = cmOutputValue;\n    this.comOutputSND = cmOutputSND;\n    this.comOutputShardID = cmOutputShardID;\n    return null;\n  }\n\n  async prove(hasPrivacy) {\n    let proof = new PaymentProof();\n    proof.commitmentIndices = this.commitmentIndices;\n\n    proof.inputCoins = this.inputCoins;\n    proof.outputCoins = this.outputCoins;\n\n    proof.comOutputValue = this.comOutputValue;\n    proof.comOutputSND = this.comOutputSND;\n    proof.comOutputShardID = this.comOutputShardID;\n\n    proof.comInputSK = this.comInputSK;\n    proof.comInputValue = this.comInputValue;\n    proof.comInputSND = this.comInputSND;\n    proof.comInputShardID = this.comInputShardID;\n\n    let numInputCoins = this.inputCoins.length;\n\n    // if hasPrivacy == false, don't need to create the zero knowledge proof\n    // proving user has spending key corresponding with public key in input coins\n    // is proved by signing with spending key\n    if (!hasPrivacy) {\n      // Proving that serial number is derived from the committed derivator\n      proof.snNoPrivacyProof = new Array(numInputCoins);\n\n      for (let i = 0; i < numInputCoins; i++) {\n        proof.snNoPrivacyProof[i] = this.snNoPrivacyWitness[i].prove();\n      }\n      return proof;\n    }\n\n    // if hasPrivacy == true\n    proof.oneOfManyProof = new Array(numInputCoins);\n    proof.serialNumberProof = new Array(numInputCoins);\n\n    for (let i = 0; i < numInputCoins; i++) {\n      // Proving one-out-of-N commitments is a commitment to the coins being spent\n      let oneOfMany = this.oneOfManyWitness[i].prove();\n      if (oneOfMany.err === null) {\n        proof.oneOfManyProof[i] = oneOfMany.proof;\n      }\n      console.log(\"One of many done!!!!\");\n\n      // Proving that serial number is derived from the committed derivator\n      proof.serialNumberProof[i] = this.serialNumberWitness[i].prove();\n      console.log(\"serial number done!!!!\");\n    }\n\n    // Proving that each output values and sum of them does not exceed v_max\n    proof.aggregatedRangeProof = await this.aggregatedRangeWitness.prove();\n    console.log(\"Aggregated range done!!!!\");\n\n    return proof;\n  }\n}\n\nclass PaymentProof {\n  constructor() {\n    // for input coins\n    this.oneOfManyProof = []; //[]*OneOutOfManyProof\n    this.serialNumberProof = []; // []*PKSNPrivacyProof\n    // it is exits when tx has no privacy\n    this.snNoPrivacyProof = []; //[]*snNoPrivacyProof\n\n    // for output coins\n    // for proving each value and sum of them are less than a threshold value\n    this.aggregatedRangeProof = null;\n\n    this.inputCoins = []; //[]*privacy.InputCoin\n    this.outputCoins = []; //[]*privacy.OutputCoin\n\n    this.comOutputValue = []; //   []*privacy.EllipticPoint\n    this.comOutputSND = []; //    []*privacy.EllipticPoint\n    this.comOutputShardID = []; // []*privacy.EllipticPoint\n\n    this.comInputSK = null;\n    this.comInputValue = []; //  []*privacy.EllipticPoint\n    this.comInputSND = []; //   []*privacy.EllipticPoint\n    this.comInputShardID = null;\n\n    this.commitmentIndices = []; // big int array\n  }\n\n  toBytes() {\n    console.log(\"CONVERTING PAYMENT PROOF TO BYTE.....\");\n    console.time(\"CONVERTING PAYMENT PROOF TO BYTE\");\n    let hasPrivacy = this.oneOfManyProof.length > 0;\n    let paymentProofSize = 0;\n\n    let partialBytes = new Array(NUM_PROOF_PROPERTIES);\n\n    // OneOfManyProof\n    let oneOfManyArrLen = this.oneOfManyProof.length;\n    partialBytes[0] = new Uint8Array(1 + 2 * oneOfManyArrLen + oneOfManyArrLen * ONE_OF_MANY_PROOF_SIZE);\n    partialBytes[0].set([oneOfManyArrLen], 0);\n    let offset = 1;\n    for (let i = 0; i < oneOfManyArrLen; i++) {\n      partialBytes[0].set(intToByteArr(ONE_OF_MANY_PROOF_SIZE), offset);\n      offset += 2;\n      partialBytes[0].set(this.oneOfManyProof[i].toBytes(), offset);\n      offset += ONE_OF_MANY_PROOF_SIZE;\n    }\n    paymentProofSize += partialBytes[0].length;\n\n    // SerialNumberProofSize\n    let serialNumberArrLen = this.serialNumberProof.length;\n    partialBytes[1] = new Uint8Array(1 + 2 * serialNumberArrLen + serialNumberArrLen * SN_PRIVACY_PROOF_SIZE);\n    partialBytes[1].set([serialNumberArrLen], 0);\n    offset = 1;\n    for (let i = 0; i < serialNumberArrLen; i++) {\n      partialBytes[1].set(intToByteArr(SN_PRIVACY_PROOF_SIZE), offset);\n      offset += 2;\n      partialBytes[1].set(this.serialNumberProof[i].toBytes(), offset);\n      offset += SN_PRIVACY_PROOF_SIZE;\n    }\n    paymentProofSize += partialBytes[1].length;\n\n    // serialNumber NoPrivacy ProofSize\n    let snNoPrivacyArrLen = this.snNoPrivacyProof.length;\n    partialBytes[2] = new Uint8Array(1 + snNoPrivacyArrLen + snNoPrivacyArrLen * SN_NO_PRIVACY_PROOF_SIZE);\n    partialBytes[2].set([snNoPrivacyArrLen], 0);\n    offset = 1;\n    for (let i = 0; i < snNoPrivacyArrLen; i++) {\n      partialBytes[2].set([SN_NO_PRIVACY_PROOF_SIZE], offset);\n      offset += 1;\n      partialBytes[2].set(this.snNoPrivacyProof[i].toBytes(), offset);\n      offset += SN_NO_PRIVACY_PROOF_SIZE;\n    }\n    paymentProofSize += partialBytes[2].length;\n\n    // ComOutputMultiRangeProofSize\n    if (hasPrivacy) {\n      let comOutputMultiRangeProof = this.aggregatedRangeProof.toBytes();\n      partialBytes[3] = new Uint8Array(2 + comOutputMultiRangeProof.length);\n      partialBytes[3].set(intToByteArr(comOutputMultiRangeProof.length), 0);\n      partialBytes[3].set(comOutputMultiRangeProof, 2);\n    } else {\n      partialBytes[3] = new Uint8Array(2);\n      partialBytes[3].set([0, 0], 0);\n    }\n    paymentProofSize += partialBytes[3].length;\n\n    // InputCoins\n    let inputCoinArrLen = this.inputCoins.length;\n    console.log(\"inputCoinArrLen: \", inputCoinArrLen);\n    let inputCoinBytesTmp = new Array(inputCoinArrLen);\n    let inputCoinBytesSize = 0;\n    for (let i = 0; i < inputCoinArrLen; i++) {\n      inputCoinBytesTmp[i] = this.inputCoins[i].toBytes();\n      inputCoinBytesSize += inputCoinBytesTmp[i].length;\n    }\n\n    partialBytes[4] = new Uint8Array(1 + inputCoinArrLen + inputCoinBytesSize);\n    partialBytes[4].set([inputCoinArrLen], 0);\n    offset = 1;\n    for (let i = 0; i < inputCoinArrLen; i++) {\n      partialBytes[4].set([inputCoinBytesTmp[i].length], offset);\n      offset += 1;\n      partialBytes[4].set(inputCoinBytesTmp[i], offset);\n      offset += inputCoinBytesTmp[i].length;\n    }\n    paymentProofSize += partialBytes[4].length;\n\n    // OutputCoins\n    let outputCoinArr = this.outputCoins.length;\n    let outputCoinBytesTmp = new Array(outputCoinArr);\n    let outputCoinBytesSize = 0;\n    for (let i = 0; i < outputCoinArr; i++) {\n      outputCoinBytesTmp[i] = this.outputCoins[i].toBytes();\n      outputCoinBytesSize += outputCoinBytesTmp[i].length;\n    }\n\n    partialBytes[5] = new Uint8Array(1 + outputCoinArr + outputCoinBytesSize);\n    partialBytes[5].set([outputCoinArr], 0);\n    offset = 1;\n    for (let i = 0; i < outputCoinArr; i++) {\n      partialBytes[5].set([outputCoinBytesTmp[i].length], offset);\n      offset += 1;\n      partialBytes[5].set(outputCoinBytesTmp[i], offset);\n      offset += outputCoinBytesTmp[i].length;\n    }\n    paymentProofSize += partialBytes[5].length;\n\n    // ComOutputValue\n    let comOutputValueArrLen = this.comOutputValue.length;\n    partialBytes[6] = new Uint8Array(1 + comOutputValueArrLen + comOutputValueArrLen * COMPRESS_POINT_SIZE);\n    partialBytes[6].set([comOutputValueArrLen], 0);\n    offset = 1;\n    for (let i = 0; i < comOutputValueArrLen; i++) {\n      partialBytes[6].set([COMPRESS_POINT_SIZE], offset);\n      offset += 1;\n      partialBytes[6].set(this.comOutputValue[i].compress(), offset);\n      offset += COMPRESS_POINT_SIZE;\n    }\n    paymentProofSize += partialBytes[6].length;\n\n    // ComOutputSND\n    let comOutputSNDArr = this.comOutputSND.length;\n    partialBytes[7] = new Uint8Array(1 + comOutputSNDArr + comOutputSNDArr * COMPRESS_POINT_SIZE);\n    partialBytes[7].set([comOutputSNDArr], 0);\n    offset = 1;\n    for (let i = 0; i < comOutputSNDArr; i++) {\n      partialBytes[7].set([COMPRESS_POINT_SIZE], offset);\n      offset += 1;\n      partialBytes[7].set(this.comOutputSND[i].compress(), offset);\n      offset += COMPRESS_POINT_SIZE;\n    }\n    paymentProofSize += partialBytes[7].length;\n\n    // ComOutputShardID\n    let comOutputShardIDArrLen = this.comOutputShardID.length;\n    partialBytes[8] = new Uint8Array(1 + comOutputShardIDArrLen + comOutputShardIDArrLen * COMPRESS_POINT_SIZE);\n    partialBytes[8].set([comOutputShardIDArrLen], 0);\n    offset = 1;\n    for (let i = 0; i < comOutputShardIDArrLen; i++) {\n      partialBytes[8].set([COMPRESS_POINT_SIZE], offset);\n      offset += 1;\n      partialBytes[8].set(this.comOutputShardID[i].compress(), offset);\n      offset += COMPRESS_POINT_SIZE;\n    }\n    paymentProofSize += partialBytes[8].length;\n\n    // ComInputSK\n    if (this.comInputSK !== null) {\n      partialBytes[9] = new Uint8Array(1 + COMPRESS_POINT_SIZE);\n      partialBytes[9].set([COMPRESS_POINT_SIZE], 0);\n      partialBytes[9].set(this.comInputSK.compress(), 1);\n    } else {\n      partialBytes[9] = new Uint8Array(1);\n      partialBytes[9].set([0], 0);\n    }\n    paymentProofSize += partialBytes[9].length;\n\n    // ComInputValue\n    let comInputValueArrLen = this.comInputValue.length;\n    partialBytes[10] = new Uint8Array(1 + comInputValueArrLen + comInputValueArrLen * COMPRESS_POINT_SIZE);\n    partialBytes[10].set([comInputValueArrLen], 0);\n    offset = 1;\n    for (let i = 0; i < comInputValueArrLen; i++) {\n      partialBytes[10].set([COMPRESS_POINT_SIZE], offset);\n      offset += 1;\n      partialBytes[10].set(this.comInputValue[i].compress(), offset);\n      offset += COMPRESS_POINT_SIZE;\n    }\n    paymentProofSize += partialBytes[10].length;\n\n    // ComInputSND\n    let comInputSNDArrLen = this.comInputSND.length;\n    partialBytes[11] = new Uint8Array(1 + comInputSNDArrLen + comInputSNDArrLen * COMPRESS_POINT_SIZE);\n    partialBytes[11].set([comInputSNDArrLen], 0);\n    offset = 1;\n    for (let i = 0; i < comInputSNDArrLen; i++) {\n      partialBytes[11].set([COMPRESS_POINT_SIZE], offset);\n      offset += 1;\n      partialBytes[11].set(this.comInputSND[i].compress(), offset);\n      offset += COMPRESS_POINT_SIZE;\n    }\n    paymentProofSize += partialBytes[11].length;\n\n    // ComInputShardID\n    if (this.comInputShardID !== null) {\n      partialBytes[12] = new Uint8Array(1 + COMPRESS_POINT_SIZE);\n      partialBytes[12].set([COMPRESS_POINT_SIZE], 0);\n      partialBytes[12].set(this.comInputShardID.compress(), 1);\n    } else {\n      partialBytes[12] = new Uint8Array(1);\n      partialBytes[12].set([0], 0);\n    }\n    paymentProofSize += partialBytes[12].length;\n\n    // convert commitment index to bytes array\n    partialBytes[13] = new Uint8Array(this.commitmentIndices.length * UINT64_SIZE);\n    offset = 0;\n    for (let i = 0; i < this.commitmentIndices.length; i++) {\n      partialBytes[13].set(addPaddingBigInt(new bn(this.commitmentIndices[i]), UINT64_SIZE), offset);\n      offset += UINT64_SIZE;\n    }\n    paymentProofSize += partialBytes[13].length;\n\n    let bytes = new Uint8Array(paymentProofSize);\n    let index = 0;\n    for (let i = 0; i < NUM_PROOF_PROPERTIES; i++) {\n      bytes.set(partialBytes[i], index);\n      index += partialBytes[i].length;\n    }\n\n    // console.log(\"proof size: \", bytes.length);\n    // console.log(\"proof: \", [...bytes].join(', '));\n    console.timeEnd(\"CONVERTING PAYMENT PROOF TO BYTE\");\n    console.log(\"CONVERTING PAYMENT PROOF TO BYTE DONE!!!!\");\n\n    return bytes;\n  }\n\n  static estimateProofSize(nInput, nOutput, hasPrivacy) {\n    if (!hasPrivacy) {\n      let flagSize = 14 + 2 * nInput + nOutput;\n      let sizeSNNoconstantsProof = nInput * SN_NO_PRIVACY_PROOF_SIZE;\n      let sizeInputCoins = nInput * INPUT_COINS_NO_PRIVACY_SIZE;\n      let sizeOutputCoins = nOutput * OUTPUT_COINS_NO_PRIVACY_SIZE;\n      let sizeProof = flagSize + sizeSNNoconstantsProof + sizeInputCoins + sizeOutputCoins;\n      return sizeProof\n    }\n    let flagSize = 14 + 7 * nInput + 4 * nOutput;\n    let sizeOneOfManyProof = nInput * ONE_OF_MANY_PROOF_SIZE;\n    let sizeSNPrivacyProof = nInput * SN_PRIVACY_PROOF_SIZE;\n    let sizeComOutputMultiRangeProof = estimateMultiRangeProofSize(nOutput);\n\n    let sizeInputCoins = nInput * INPUT_COINS_PRIVACY_SIZE;\n    let sizeOutputCoins = nOutput * OUTPUT_COINS_CONSTANTS_SIZE;\n\n    let sizeComOutputValue = nOutput * COMPRESS_POINT_SIZE;\n    let sizeComOutputSND = nOutput * COMPRESS_POINT_SIZE;\n    let sizeComOutputShardID = nOutput * COMPRESS_POINT_SIZE;\n\n    let sizeComInputSK = COMPRESS_POINT_SIZE;\n    let sizeComInputValue = nInput * COMPRESS_POINT_SIZE;\n    let sizeComInputSND = nInput * COMPRESS_POINT_SIZE;\n    let sizeComInputShardID = COMPRESS_POINT_SIZE;\n\n    let sizeCommitmentIndices = nInput * CM_RING_SIZE * UINT64_SIZE;\n\n    let sizeProof = sizeOneOfManyProof + sizeSNPrivacyProof +\n      sizeComOutputMultiRangeProof + sizeInputCoins + sizeOutputCoins +\n      sizeComOutputValue + sizeComOutputSND + sizeComOutputShardID +\n      sizeComInputSK + sizeComInputValue + sizeComInputSND + sizeComInputShardID +\n      sizeCommitmentIndices + flagSize;\n    return sizeProof\n  }\n}\n\nexport {\n  PaymentWitness,\n  PaymentProof\n};\n","import json from 'circular-json';\nimport { RPCHttpService } from './rpchttpservice';\nimport { checkDecode, checkEncode } from \"../base58\";\nimport { P256 } from \"privacy-js-lib/lib/ec\";\nimport { stringToBytes } from 'privacy-js-lib/lib/privacy_utils';\nimport { ENCODE_VERSION } from \"../constants\";\n\nclass RpcClient {\n  constructor(url, user, password) {\n    this.rpcHttpService = new RPCHttpService(url, user, password)\n  }\n\n  getOutputCoin = async (paymentAdrr, viewingKey, tokenID = null) => {\n    let data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"listoutputcoins\",\n      \"params\": [\n        0,\n        999999,\n        [{\n          \"PaymentAddress\": paymentAdrr,\n          \"ReadonlyKey\": viewingKey,\n        }],\n      ],\n      \"id\": 1\n    };\n\n    if (tokenID != null) {\n      data[\"params\"][3] = tokenID;\n    }\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API get all output coins\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }\n\n    return {\n      outCoins: response.data.Result.Outputs[viewingKey]\n    }\n  };\n\n  // hasSerialNumber return true if serial number existed in database\n  hasSerialNumber = async (paymentAddr, serialNumberStrs, tokenID = null) => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"hasserialnumbers\",\n      \"params\": [\n        paymentAddr,\n        serialNumberStrs,\n      ],\n      \"id\": 1\n    };\n\n    if (tokenID != null) {\n      data[\"params\"][2] = tokenID;\n    }\n\n    let response;\n    try{\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n    \n    if (response.status !== 200) {\n      throw new Error(\"Can't request API check has serial number\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    } \n\n    return {\n      existed: response.data.Result\n    }\n  };\n\n  // hasSNDerivator return true if snd existed in database\n  hasSNDerivator = async (paymentAddr, snds, tokenID = null) => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"hassnderivators\",\n      \"params\": [\n        paymentAddr,\n        snds,\n      ],\n      \"id\": 1\n    };\n\n    if (tokenID != null) {\n      data[\"params\"][2] = tokenID;\n    }\n\n    let response;\n    try{\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API check has serial number derivator\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }  \n\n    return {\n      existed: response.data.Result,\n    }\n  };\n\n  // randomCommitmentsProcess randoms list commitment for proving\n  randomCommitmentsProcess = async (paymentAddr, inputCoinStrs, tokenID = null) => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"randomcommitments\",\n      \"params\": [\n        paymentAddr,\n        inputCoinStrs,\n      ],\n      \"id\": 1\n    };\n\n    if (tokenID != null) {\n      data[\"params\"][2] = tokenID;\n    } \n\n    let response;\n    try{\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API random commitments\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }  \n\n    let commitmentStrs = response.data.Result.Commitments;\n\n    // deserialize commitments\n    let commitments = new Array(commitmentStrs.length);\n    for (let i = 0; i < commitments.length; i++) {\n      let res = checkDecode(commitmentStrs[i]);\n\n      if (res.version !== ENCODE_VERSION) {\n        throw new Error(\"Base58 check decode wrong version\");\n      }\n\n      commitments[i] = P256.decompress(res.bytesDecoded);\n    }\n\n    return {\n      commitmentIndices: response.data.Result.CommitmentIndices,\n      commitments: commitments,\n      myCommitmentIndices: response.data.Result.MyCommitmentIndexs,\n    }\n  };\n\n  sendRawTx = async (tx) => {\n    console.log(\"SENDING TX ........\");\n    // hide private key for signing\n    delete tx.sigPrivKey;\n\n    // convert tx to json\n    let txJson = json.stringify(tx.convertTxToByte());\n\n    // base58 check encode tx json\n    console.log(\"base58 check encode tx json .....\");\n    let serializedTxJson = checkEncode(stringToBytes(txJson), ENCODE_VERSION);\n    // console.log(\"tx json serialize: \", serializedTxJson);\n\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"sendtransaction\",\n      \"params\": [\n        serializedTxJson,\n      ],\n      \"id\": 1\n    };\n\n    let response;\n    try{\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API send transaction\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    } \n\n    console.log(\"**** SENDING TX SUCCESS****\");\n    return {\n      txId: response.data.Result.TxID\n    }\n  };\n\n  // for tx custom token\n  sendRawTxCustomToken = async (tx) => {\n    // hide private key for signing\n    delete tx.sigPrivKey;\n\n    // convert tx to json\n    let txJson = JSON.stringify(tx.convertTxCustomTokenToByte());\n    console.log(\"txJson: \", txJson);\n\n    let txBytes = stringToBytes(txJson);\n    console.log('TxBytes: ', txBytes.join(', '));\n    console.log('TxBytes len : ', txBytes.length);\n\n    // base58 check encode tx json\n    let serializedTxJson = checkEncode(txBytes, ENCODE_VERSION);\n    // console.log(\"tx json serialize: \", serializedTxJson);\n\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"sendrawcustomtokentransaction\",\n      \"params\": [\n        serializedTxJson,\n      ],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n      console.log(\"response sendRawTxCustomToken\", response);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API send custom token transaction\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    } \n\n    console.log(\"**** SENDING TX SUCCESS****\");\n    return {\n      txId: response.data.Result\n    }\n  };\n\n  // for tx custom token\n  sendRawTxCustomTokenPrivacy = async (tx) => {\n    // hide private key for signing\n    delete tx.sigPrivKey;\n    delete tx.txTokenPrivacyData.txNormal.sigPrivKey;\n\n    // convert tx to json\n    let txJson = JSON.stringify(tx.convertTxCustomTokenPrivacyToByte());\n    console.log(\"txJson: \", txJson);\n\n    let txBytes = stringToBytes(txJson);\n    console.log('TxBytes: ', txBytes.join(', '));\n    console.log('TxBytes len : ', txBytes.length);\n\n    // base58 check encode tx json\n    let serializedTxJson = checkEncode(txBytes, ENCODE_VERSION);\n    // console.log(\"tx json serialize: \", serializedTxJson);\n\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"sendrawprivacycustomtokentransaction\",\n      \"params\": [\n        serializedTxJson,\n      ],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API send privacy custom token transaction\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    } \n\n    console.log(\"**** SENDING TX SUCCESS****\");\n    return {\n      txId: response.data.Result\n    }\n  };\n\n  listCustomTokens = async () => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"listcustomtoken\",\n      \"params\": [],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API get list of custom tokens\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }\n    \n    return {\n      listCustomToken: response.data.Result.ListCustomToken,\n    }\n  };\n\n  listPrivacyCustomTokens = async () => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"listprivacycustomtoken\",\n      \"params\": [],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API get list of privacy custom tokens\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }\n    \n    return {\n      listPrivacyToken: response.data.Result.ListCustomToken,\n    }\n  };\n\n  getUnspentCustomToken = async (paymentAddrSerialize, tokenIDStr) => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"listunspentcustomtoken\",\n      \"params\": [paymentAddrSerialize, tokenIDStr],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    //todo: \n    // if (response.status !== 200) {\n    //   throw new Error(\"Can't request API get list of unspent custom tokens\");\n    // } else if (response.data.Error) {\n    //   throw response.data.Error;\n    // }\n\n    if (response.data.Result){\n      return {\n        listUnspentCustomToken: response.data.Result,\n      }\n    }\n    \n    // return {\n    //   listUnspentCustomToken: response.data.Result,\n    // }\n  };\n\n  getEstimateFeePerKB = async (paymentAddrSerialize) => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"estimatefeewithestimator\",\n      \"params\": [-1, paymentAddrSerialize, 8],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API get estimate fee per kilibyte\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }\n    \n    return {\n      unitFee: parseInt(response.data.Result.EstimateFeeCoinPerKb)\n    }\n  }\n\n  getTransactionByHash = async (txHashStr) => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"gettransactionbyhash\",\n      \"params\": [\n        txHashStr,\n      ],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API get transaction by hash\");\n    } else if (response.data.Result === null && response.data.Error) {\n      return {\n        isInBlock: false,\n        isInMempool: false,\n        err: response.data.Error\n      }\n    }\n    \n    return {\n      isInBlock: response.data.Result.IsInBlock,\n      isInMempool: response.data.Result.IsInMempool,\n      err: null\n    }\n  }\n\n  getStakingAmount = async (type) => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"getstackingamount\",\n      \"params\": [type],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API get staking amount\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }\n    \n    return {\n      res: Number(response.data.Result)\n    }\n  }\n\n  getActiveShard = async () => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"getactiveshards\",\n      \"params\": [],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API get active shard nunber\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }\n    \n    return {\n      shardNumber: parseInt(response.data.Result)\n    }\n  }\n\n  getMaxShardNumber = async () => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"getmaxshardsnumber\",\n      \"params\": [],\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API get max shard number\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }\n    \n    return {\n      shardNumber: parseInt(response.data.Result)\n    }\n  }\n\n  hashToIdenticon = async (hashStrs) => {\n    const data = {\n      \"jsonrpc\": \"1.0\",\n      \"method\": \"hashtoidenticon\",\n      \"params\": hashStrs,\n      \"id\": 1\n    };\n\n    let response;\n    try {\n      response = await this.rpcHttpService.postRequest(data);\n    } catch(e){\n      throw e;\n    }\n\n    if (response.status !== 200) {\n      throw new Error(\"Can't request API get image from hash string\");\n    } else if (response.data.Error) {\n      throw response.data.Error;\n    }\n    \n    return {\n      images: response.data.Result\n    }\n  }\n}\n\nexport { RpcClient };\n","const axios = require('axios');\n\nclass RPCHttpService {\n  constructor(url = \"http://localhost:9334\", username, password) {\n    this.auth = {\n      username: username,\n      password: password,\n    }\n    this.url = url;\n  }\n\n  postRequest = async (data) => {\n    const response = await axios.post(this.url, data, {\n      auth: this.auth, headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        'Access-Control-Allow-Headers': 'Content-Type, Cache-Control, X-Requested-With, X-CSRF-Token, Discourse-Visible, User-Api-Key, User-Api-Client-Id, *',\n        'Access-Control-Allow-Credentials': 'true',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, PUT, GET, OPTIONS, DELETE',\n      }\n    });\n    return response;\n  }\n}\n\nexport { RPCHttpService };\n","import bn from 'bn.js';\nimport { N } from 'privacy-js-lib/lib/ec'\nimport { randScalar, hashSha3BytesToBytes } from 'privacy-js-lib/lib/privacy_utils'\nimport { PedCom } from 'privacy-js-lib/lib/pedersen'\nimport { SK, RAND, BIG_INT_SIZE} from 'privacy-js-lib/lib/constants'\nimport { HASH_SIZE } from './constants';\n\n// PK = G^SK + H^randomness\nclass SchnPrivKey {\n  constructor(sk, r) {\n    this.SK = sk;\n    this.R = r;\n    this.PK = new SchnPubKey();\n    this.PK.G = PedCom.G[SK];\n    this.PK.H = PedCom.G[RAND];\n    this.PK.PK = this.PK.G.mul(this.SK).add(this.PK.H.mul(this.R));\n  }\n\n  sign(data) {\n    console.log(\"SIGNING TX.....\");\n    if (data.length != HASH_SIZE) {\n      throw new Error(\"Hash length must be 32\");\n    }\n    let s1 = randScalar();\n    let s2 = randScalar();\n    let t = (this.R == 0) ? (this.PK.G.mul(s1.toRed(N).fromRed())) : (this.PK.G.mul(s1.toRed(N).fromRed())).add(this.PK.H.mul(s2.toRed(N).fromRed()));\n    let E = hash(t, data);\n\n    let Z1 = s1.toRed(N).redSub(this.SK.toRed(N).redMul(E.toRed(N))).fromRed();\n\n    if (this.R != 0) {\n      let Z2 = s2.toRed(N).redSub(this.R.toRed(N).redMul(E.toRed(N))).fromRed();\n      let res = new Uint8Array(BIG_INT_SIZE * 3);\n      res.set(E.toArray('be', BIG_INT_SIZE), 0);\n      res.set(Z1.toArray('be', BIG_INT_SIZE), BIG_INT_SIZE);\n      res.set(Z2.toArray('be', BIG_INT_SIZE), BIG_INT_SIZE * 2);\n      return res;\n    } else {\n      let res = new Uint8Array(BIG_INT_SIZE * 2);\n      res.set(E.toArray('be', BIG_INT_SIZE), 0);\n      res.set(Z1.toArray('be', BIG_INT_SIZE), BIG_INT_SIZE);\n      return res;\n    }\n  }\n}\n\nclass SchnPubKey {\n  constructor(PK, G, H) {\n    this.PK = PK;\n    this.G = G;\n    this.H = H;\n  }\n\n  verify(signaturesBytesArrays, data) {\n    let E = new bn(signaturesBytesArrays.slice(0, BIG_INT_SIZE), 10, 'be');\n    let S1 = new bn(signaturesBytesArrays.slice(BIG_INT_SIZE, 2 * BIG_INT_SIZE), 10, 'be');\n\n    if (signaturesBytesArrays.length == BIG_INT_SIZE * 2) {\n      let rv = (this.PK.mul(E)).add(this.G.mul(S1));\n      let ev = hash(rv, data);\n      return E.eq(ev);\n    }\n\n    let S2 = new bn(signaturesBytesArrays.slice(BIG_INT_SIZE * 2, 3 * BIG_INT_SIZE), 10, 'be');\n    let rv = (this.PK.mul(E)).add(this.H.mul(S2)).add(this.G.mul(S1));\n    let ev = hash(rv, data);\n    return E.eq(ev);\n  }\n}\n\n// hash hashes point (X, Y) and bytes array\nfunction hash(point, bytes) {\n  let b = new Uint8Array(BIG_INT_SIZE * 2 + bytes.length);\n  b.set(point.getX().toArray('be', BIG_INT_SIZE), 0);\n  b.set(point.getY().toArray('be', BIG_INT_SIZE), BIG_INT_SIZE);\n  b.set(bytes, BIG_INT_SIZE * 2);\n\n  return new bn(hashSha3BytesToBytes(b));\n}\n\nexport  {\n  SchnPrivKey,\n  SchnPubKey\n}\n","const TxNormalType             = \"n\";  // normal tx(send and receive coin)\nconst TxSalaryType             = \"s\";  // salary tx(gov pay salary for block producer)\nconst TxCustomTokenType        = \"t\";  // token  tx with no supporting privacy\nconst TxCustomTokenPrivacyType = \"tp\"; // token  tx with supporting privacy\n\nconst CustomTokenInit = 0;\nconst CustomTokenTransfer = 1;\nconst TxVersion = 1;\n\n// todo: 0xkraken\n// NumUTXO must be 255\n// because tx zise is exceed 100kb with NumUTXO = 255\nconst MaxInputNumberForDefragment = 50;\n\nexport {TxNormalType, TxSalaryType, TxCustomTokenType, TxCustomTokenPrivacyType, CustomTokenInit, CustomTokenTransfer, TxVersion, MaxInputNumberForDefragment};","import { Tx } from './txprivacy';\nimport { stringToBytes, hashSha3BytesToBytes } from 'privacy-js-lib/lib/privacy_utils';\n\nclass TxTokenPrivacyData {\n  constructor() {\n    this.txNormal = new Tx();       // used for privacy functionality\n\n    this.propertyID = [];           // hash of TxCustomTokenprivacy data\n    this.propertyName = '';\n    this.propertySymbol = '';\n\n    this.type = 0;                  // action type\n    this.mintable = false;          // default false\n    this.amount = 0;                // init amount\n  }\n\n  toString = () => {\n    let record = this.propertyName + this.propertySymbol + this.amount.toString();\n\n    if (this.txNormal.proof !== null) {\n      for (let i = 0; i < this.txNormal.proof.outputCoins.length; i++) {\n        let outCoin = this.txNormal.proof.outputCoins[i];\n        record += outCoin.coinDetails.publicKey.compress().toString();\n        record += outCoin.coinDetails.value.toString();\n      }\n\n      for (let i = 0; i < this.txNormal.proof.inputCoins.length; i++) {\n        let inCoin = this.txNormal.proof.inputCoins[i];\n        if (inCoin.coinDetails.publicKey !== null) {\n          record += inCoin.coinDetails.publicKey.compress().toString();\n        }\n\n        if (inCoin.coinDetails.value > 0) {\n          record += inCoin.coinDetails.value.toString();\n        }\n      }\n    }\n    return record\n  };\n\n  hash = () => {\n    return hashSha3BytesToBytes(stringToBytes(this.toString()));\n  };\n\n  set(txnormal, propertyID, propertyName, propertySymbol, type, mintable, amount) {\n    this.txNormal = txnormal;\n    this.propertyID = propertyID;\n    this.propertyName = propertyName;\n    this.propertySymbol = propertySymbol;\n\n    this.type = type;\n    this.mintable = mintable;\n    this.amount = amount;\n  }\n}\n\n// CustomTokenParamTx - use for rpc request json body\nclass CustomTokenPrivacyParamTx {\n  constructor() {\n    this.propertyID = '';\n    this.propertyName = '';\n    this.propertySymbol = '';\n    this.amount = 0;\n    this.tokenTxType = 0;\n    this.receivers = [];       // []*privacy.PaymentInfo\n    this.tokenInputs = [];     // []*privacy.InputCoin\n  }\n\n  set(propertyID, propertyName, propertySymbol, amount, tokenTxType, receivers, tokenInputs) {\n    this.propertyID = propertyID;\n    this.propertyName = propertyName;\n    this.propertySymbol = propertySymbol;\n    this.amount = amount;\n    this.tokenTxType = tokenTxType;\n    this.receivers = receivers;\n    this.tokenInputs = tokenInputs;\n  }\n}\n\nexport { TxTokenPrivacyData, CustomTokenPrivacyParamTx };\n","import { Tx } from './txprivacy';\nimport { TxTokenVout, TxTokenData } from './txcustomtokendata';\nimport { TxCustomTokenType, CustomTokenInit, CustomTokenTransfer } from './constants';\nimport { newHashFromStr, convertHashToStr } from '../common';\nimport { stringToBytes, hashSha3BytesToBytes } from 'privacy-js-lib/lib/privacy_utils';\n\nclass TxCustomToken extends Tx {\n  constructor(rpcClient) {\n    super(rpcClient);      // call constructor of Tx\n    this.txTokenData = new TxTokenData();\n  }\n\n  toString() {\n    let normalTxHash = super.hash();\n    let record = normalTxHash.toString();\n    record += this.txTokenData.hash().toString();\n\n    if (this.metadata !== null) {\n      record += this.metadata.hash().toString();\n    }\n    return record;\n  }\n\n  hash() {\n    return hashSha3BytesToBytes(stringToBytes(this.toString()));\n  }\n\n  convertTxCustomTokenToByte() {\n    super.convertTxToByte();\n    this.txTokenData.propertyID = convertHashToStr(this.txTokenData.propertyID);\n\n    for (let i = 0; i < this.txTokenData.vouts.length; i++) {\n      this.txTokenData.vouts[i] = this.txTokenData.vouts[i].convertToByte();\n      delete this.txTokenData.vouts[i].index;\n      delete this.txTokenData.vouts[i].txCustomTokenID;\n    }\n\n    if (this.txTokenData.vins !== null) {\n      for (let i = 0; i < this.txTokenData.vins.length; i++) {\n        this.txTokenData.vins[i] = this.txTokenData.vins[i].convertToByte();\n      }\n    }\n\n    return this;\n  };\n\n  async init(senderSK, paymentAddressStr, paymentInfo, inputCoins, inputCoinStrs, fee, tokenParams, listCustomTokens, metaData, hasPrivacy) {\n    console.log(\"Creating tx custom token ....\");\n    // create normal tx for fee\n    await super.init(senderSK, paymentAddressStr, paymentInfo, inputCoins, inputCoinStrs, fee, hasPrivacy, null, metaData);\n\n    // override txCustomToken type\n    this.type = TxCustomTokenType;\n\n    this.txTokenData = new TxTokenData();\n\n    let handled = false;\n    switch (tokenParams.tokenTxType) {\n      case CustomTokenInit: {\n        handled = true;\n        // create vouts for txTokenData on tokenParam's receivers\n        let receiver = tokenParams.receivers[0];\n        let vouts = new Array(1);\n        vouts[0] = new TxTokenVout();\n        vouts[0].set(receiver.paymentAddress, receiver.value);\n\n        // console.log(\"Token param amount: \", tokenParams.amount);\n        this.txTokenData.set(tokenParams.tokenTxType, tokenParams.propertyName, tokenParams.propertySymbol, null, vouts, tokenParams.amount);\n\n        // hash tx token data\n        let { data, err } = this.txTokenData.hash();\n        if (err !== null) {\n          throw err;\n        }\n        let hashTxTokenData = data;\n        hashTxTokenData.push(this.pubKeyLastByteSender);\n        hashTxTokenData = hashSha3BytesToBytes(hashTxTokenData);\n\n        // convert hash to string\n        let hashStr = convertHashToStr(hashTxTokenData).toLowerCase();\n\n        // validate PropertyID is the only one\n        for (let i = 0; i < listCustomTokens.length; i++) {\n          if (hashStr === listCustomTokens[i].ID.toLowerCase()) {\n            throw new Error(\"Custom token is existed\");\n          }\n        }\n\n        // assign txTokenData's propertyId\n        this.txTokenData.propertyID = hashTxTokenData;\n        break;\n      }\n      case CustomTokenTransfer: {\n        handled = true;\n\n        let paymentTokenAmount = 0;\n        for (let i = 0; i < tokenParams.receivers.length; i++) {\n          paymentTokenAmount += tokenParams.receivers[i].value;\n        }\n        // console.log(\"vinsAmount: \", tokenParams.vinsAmount);\n        // console.log(\"paymentTokenAmount: \", paymentTokenAmount);\n\n        let refundTokenAmount = tokenParams.vinsAmount - paymentTokenAmount;\n        if (refundTokenAmount < 0) {\n          throw new Error(\"Not enough token for transferring\")\n        }\n\n        this.txTokenData = new TxTokenData();\n        this.txTokenData.set(tokenParams.tokenTxType, tokenParams.propertyName, tokenParams.propertySymbol, tokenParams.vins, null, null);\n\n        this.txTokenData.propertyID = newHashFromStr(tokenParams.propertyID);\n\n        let vouts = [];\n        if (refundTokenAmount > 0) {\n          vouts = new Array(tokenParams.receivers.length + 1);\n          vouts[vouts.length - 1] = new TxTokenVout();\n          vouts[vouts.length - 1].set(tokenParams.vins[0].paymentAddress, refundTokenAmount);\n        } else {\n          vouts = new Array(tokenParams.receivers.length);\n        }\n\n        for (let i = 0; i < tokenParams.receivers.length; i++) {\n          vouts[i] = new TxTokenVout();\n          vouts[i].set(tokenParams.receivers[i].paymentAddress, tokenParams.receivers[i].value)\n        }\n\n        this.txTokenData.vouts = vouts;\n      }\n    }\n    if (!handled) {\n      throw new Error(\"Wrong token tx type\");\n    }\n\n    return null;\n  }\n}\n\nexport { TxCustomToken };\n","import { PaymentAddress } from '../key';\nimport { checkEncode } from '../base58';\nimport { stringToBytes, hashSha3BytesToBytes, convertUint8ArrayToArray } from 'privacy-js-lib/lib/privacy_utils';\nimport { KeyWallet } from '../wallet/hdwallet';\nimport { convertHashToStr } from \"../common\";\nimport { ENCODE_VERSION } from \"../constants\";\n\n// TxTokenVin - vin format for custom token data\n// It look like vin format of bitcoin\nclass TxTokenVin {\n    constructor() {\n        this.txCustomTokenID = [];                      // TxNormal-id(or hash) of before tx, which is used as a input for current tx as a pre-utxo\n        this.voutIndex = 0;                             // index in vouts array of before TxNormal-id\n        this.signature = '';                            // Signature to verify owning before tx(pre-utxo)\n        this.paymentAddress = new PaymentAddress(); // use to verify signature of pre-utxo of token\n    }\n\n    // string convert TxTokenVin to string\n    toString() {\n        let record = this.txCustomTokenID.toString();\n        record += this.voutIndex.toString();\n        record += this.signature;\n        record += checkEncode(this.paymentAddress.Pk, ENCODE_VERSION);\n        return record;\n    }\n\n    convertToByte(){\n        this.txCustomTokenID = convertHashToStr(this.txCustomTokenID);\n        this.paymentAddress.Pk = convertUint8ArrayToArray(this.paymentAddress.Pk);\n        this.paymentAddress.Tk = convertUint8ArrayToArray(this.paymentAddress.Tk);\n        return this;\n    }\n\n    hash() {\n        return hashSha3BytesToBytes(stringToBytes(this.toString()));\n    }\n}\n\n// TxTokenVout - vout format for custom token data\n// It look like vout format of bitcoin\nclass TxTokenVout {\n    constructor() {\n        this.value = 0;                                     // Amount to transfer\n        this.paymentAddress = new PaymentAddress();     // payment address of receivers\n\n        // temp variable to determine position of itself in vouts arrays of tx which contain this\n        this.index = 0;\n        // temp variable to know what is id of tx which contain itself\n        this.txCustomTokenID = [];\n    }\n\n    set(paymentAddress, value) {\n        this.paymentAddress = paymentAddress;\n        this.value = value;\n    }\n\n    // string convert TxTokenVout to string\n    toString() {\n        let record = this.value.toString();\n        record += checkEncode(this.paymentAddress.Pk, ENCODE_VERSION);\n        return record;\n    }\n\n    hash() {\n        return hashSha3BytesToBytes(stringToBytes(this.toString()));\n    }\n\n    convertToByte(){\n        this.txCustomTokenID = convertHashToStr(this.txCustomTokenID);\n        this.paymentAddress.Pk = convertUint8ArrayToArray(this.paymentAddress.Pk);\n        this.paymentAddress.Tk = convertUint8ArrayToArray(this.paymentAddress.Tk);\n        return this;\n    }\n}\n\n\n// TxTokenData - main struct which contain vin and vout array for transferring or issuing custom token\n// of course, it also contain token metadata: name, symbol, id(hash of token data)\nclass TxTokenData {\n    constructor() {\n        this.propertyID = [];       // = hash of TxTokenData data\n        this.propertyName = '';\n        this.propertySymbol = '';\n\n        this.type = 0;          // action type [init, transfer]\n        this.mintable = false;  // can mine, default false\n        this.amount = 0;        // init amount\n        this.vins = [];         // []TxTokenVin\n        this.vouts = [];        //[]TxTokenVout\n    }\n\n    set(type, name, symbol, vins, vouts, amount){\n        this.type = type;\n        this.propertyName = name;\n        this.propertySymbol = symbol;\n        this.vins = vins;\n        this.vouts = vouts;\n        this.amount = amount;\n    }\n\n    toString()  {\n        let record = this.propertyName + this.propertySymbol + this.amount.toString();\n        if (this.vins !== null){\n            for (let i = 0; i < this.vins.length; i++) {\n                record += this.vins[i].toString();\n            }\n        }\n\n        for (let i = 0; i < this.vouts.length; i++) {\n            record += this.vouts[i].toString();\n        }\n        return record;\n    };\n\n    hash = () => {\n        if (this.vouts === null) {\n            return {\n                data: null,\n                err: new Error(\"Vout is empty\")\n            }\n        }\n\n        let hash = hashSha3BytesToBytes(stringToBytes(this.toString()));\n        return {\n            data: hash,\n            err: null\n        }\n    }\n}\n\n// CustomTokenParamTx - use for rpc request json body\nclass CustomTokenParamTx {\n    constructor() {\n        this.propertyID = '';\n        this.propertyName = '';\n        this.propertySymbol = '';\n\n        this.amount = 0;\n        this.tokenTxType = 0;\n        this.receivers = [];          //       []TxTokenVout `json:\"TokenReceiver\"`\n\n        // temp variable to process coding\n        this.vins = [];        //[]TxTokenVin\n        this.vinsAmount = 0;\n    }\n\n    set(propertyID, propertyName, propertySymbol, amount, tokenTxType, receivers, vins, vinsAmount){\n        this.propertyID = propertyID;\n        this.propertyName = propertyName;\n        this.propertySymbol = propertySymbol;\n        this.amount = amount;\n        this.tokenTxType = tokenTxType;\n        this.receivers = receivers;\n        this.vins = vins;\n        this.vinsAmount = vinsAmount;\n    }\n}\n\nexport { TxTokenVin, TxTokenVout, TxTokenData, CustomTokenParamTx };\n","import bn from 'bn.js';\nimport { stringToBytes, hashSha3BytesToBytes, randScalar } from \"privacy-js-lib/lib/privacy_utils\";\nimport { P256 } from 'privacy-js-lib/lib/ec';\nimport { Tx } from './txprivacy';\nimport { TxCustomTokenPrivacyType, CustomTokenInit, CustomTokenTransfer } from './constants';\nimport { convertHashToStr} from \"../common\";\nimport { TxTokenPrivacyData } from './txcustomkenprivacydata';\nimport { PaymentProof } from '../payment';\nimport { Coin, OutputCoin } from '../coin';\nimport { parseInputCoinToEncodedObject } from './utils';\n\nclass TxCustomTokenPrivacy extends Tx {\n  constructor(rpcClient) {\n    super(rpcClient);      // call constructor of Tx\n    this.txTokenPrivacyData = new TxTokenPrivacyData();\n  }\n\n  toString() {\n    let normalTxHash = super.hash();\n    let record = normalTxHash.toString();\n\n    record += this.txTokenPrivacyData.hash().toString();\n\n    if (this.metadata !== null) {\n      record += this.metadata.hash().toString();\n    }\n    return record;\n  }\n\n  hash() {\n    return hashSha3BytesToBytes(stringToBytes(this.toString()));\n  }\n\n  convertTxCustomTokenPrivacyToByte() {\n    super.convertTxToByte();\n    this.txTokenPrivacyData.txNormal = this.txTokenPrivacyData.txNormal.convertTxToByte();\n    // this.txTokenPrivacyData.propertyID = convertHashToStr(this.txTokenPrivacyData.propertyID);\n\n    return this;\n  };\n\n  async init(senderSK, paymentAddressStr, paymentInfo, inputCoins, inputCoinStrs, feePRV, feeToken, tokenParams, listCustomTokens, metaData, hasPrivacyForToken) {\n    // create normal tx for fee\n    await super.init(senderSK, paymentAddressStr, paymentInfo, inputCoins, inputCoinStrs, feePRV, false, null, metaData);\n\n    // override txCustomTokenPrivacy type\n    this.type = TxCustomTokenPrivacyType; \n\n    // create txTokenPrivacyData\n    this.txTokenPrivacyData = new TxTokenPrivacyData();\n\n    let handled = false;\n    switch (tokenParams.tokenTxType) {\n      case CustomTokenInit: {\n        handled = true;\n\n        // create tx normal for tx custom token privacy data\n        // issue token with data of privacy\n        let txNormal = new Tx();\n        txNormal.proof = new PaymentProof();\n        txNormal.fee = new bn(0);\n        txNormal.proof.outputCoins = new Array(1);\n\n        txNormal.proof.outputCoins[0] = new OutputCoin();\n        txNormal.proof.outputCoins[0].coinDetails = new Coin();\n        txNormal.proof.outputCoins[0].coinDetails.value = new bn(tokenParams.amount);\n        txNormal.proof.outputCoins[0].coinDetails.publicKey = P256.decompress(tokenParams.receivers[0].PaymentAddress.Pk);\n        txNormal.proof.outputCoins[0].coinDetails.randomness = randScalar();\n        txNormal.proof.outputCoins[0].coinDetails.snderivator = randScalar();\n\n        // create coin commitment\n        txNormal.proof.outputCoins[0].coinDetails.commitAll();\n        // get last byte\n        txNormal.pubKeyLastByteSender = tokenParams.receivers[0].PaymentAddress.Pk[tokenParams.receivers[0].PaymentAddress.Pk.length - 1];\n\n        // sign Tx\n        txNormal.SigPubKey = tokenParams.receivers[0].PaymentAddress.Pk;\n        txNormal.sigPrivKey = senderSK;\n        let err = txNormal.sign();\n        if (err !== null) {\n          throw new Error(\"Can not sign tx nornal in tx custom token data\");\n        }\n\n        // this.txTokenPrivacyData.txNormal = txNormal;\n        this.txTokenPrivacyData.set(txNormal, null, tokenParams.propertyName, tokenParams.propertySymbol, tokenParams.tokenTxType, false, tokenParams.amount);\n\n        let hashTxTokenPrivacyData = this.txTokenPrivacyData.hash();\n        hashTxTokenPrivacyData.push(this.pubKeyLastByteSender);\n        hashTxTokenPrivacyData = hashSha3BytesToBytes(hashTxTokenPrivacyData);\n\n        let tokenIDStr = convertHashToStr(hashTxTokenPrivacyData).toLowerCase();\n\n        // validate PropertyID is the only one\n        for (let i = 0; i < listCustomTokens.length; i++) {\n          if (tokenIDStr === listCustomTokens[i].ID.toLowerCase()) {\n            throw new Error(\"Custom token privacy is existed\");\n          }\n        }\n\n        this.txTokenPrivacyData.propertyID = tokenIDStr;\n        console.log(\"Token ID: \", this.txTokenPrivacyData.propertyID);\n        break;\n      }\n      case CustomTokenTransfer: {\n        handled = true;\n        // make a transfering for privacy custom token\n        // fee always 0 and reuse function of normal tx for custom token ID\n\n        // check propertyId is existed or not\n        let i = 0;\n        for (i = 0; i < listCustomTokens.length; i++) {\n          if (listCustomTokens[i].ID.toLowerCase() === tokenParams.propertyID.toLowerCase()) {\n            break;\n          }\n        }\n        if (i === listCustomTokens.length) {\n          throw new Error(\"invalid token ID\")\n        }\n\n        // create tx normal for txCustomTokenPrivacyData\n        let txNormal = new Tx(this.rpcClient);\n        txNormal.fee = 0\n\n        let tokenInputsStr = parseInputCoinToEncodedObject(tokenParams.tokenInputs);\n\n        let err = await txNormal.init(senderSK, paymentAddressStr, tokenParams.receivers, tokenParams.tokenInputs, tokenInputsStr, new bn(feeToken), hasPrivacyForToken, tokenParams.propertyID, null);\n        if (err !== null) {\n          throw new Error(\"Can not create normal tx for tx custom token privacy data\")\n        }\n\n        this.txTokenPrivacyData.set(txNormal, tokenParams.propertyID, tokenParams.propertyName, tokenParams.propertySymbol, tokenParams.tokenTxType, false, 0);\n      }\n    }\n    if (!handled) {\n      throw new Error(\"Wrong token tx type\");\n    }\n\n    return null;\n  }\n}\n\nexport { TxCustomTokenPrivacy };\n","import bn from 'bn.js';\nimport { P256 } from 'privacy-js-lib/lib/ec';\nimport { BIG_INT_SIZE, CM_RING_SIZE } from 'privacy-js-lib/lib/constants';\nimport { stringToBytes, hashSha3BytesToBytes, randScalar, checkDuplicateBigIntArray, convertUint8ArrayToArray } from \"privacy-js-lib/lib/privacy_utils\";\nimport { PaymentInfo } from '../key';\nimport { KeySet } from '../keySet';\nimport { PaymentWitness, PaymentProof } from '../payment';\nimport { SchnPrivKey } from '../schnorr';\nimport { encrypt } from '../elgamal';\nimport { checkEncode } from '../base58';\nimport { OutputCoin } from '../coin';\nimport { convertHashToStr } from '../common';\nimport { ENCODE_VERSION } from '../constants';\nimport { TxNormalType, TxVersion } from './constants';\nimport { MaxTxSize } from '../wallet/constants';\n\nconst ConstantID = new Uint8Array(32);\nConstantID[0] = 4;\n\nclass Tx {\n  constructor(rpcClient) {\n    // Basic data\n    this.version = 0;\n    this.type = '';\n    this.lockTime = 0;\n    this.fee = 0;\n    this.info = [];\n\n    // Sign and Privacy proof\n    this.sigPubKey = [];\n    this.sig = [];\n    this.proof = null;\n\n    this.pubKeyLastByteSender = 0x00;\n\n    // metadata\n    this.metadata = null;\n\n    this.sigPrivKey = [];   // is ALWAYS private property of struct, if privacy: 64 bytes, and otherwise, 32 bytes\n    this.rpcClient = rpcClient;\n\n    this.hashValue = null;  // temp to store hash of tx\n  }\n\n  async init(senderSK, paymentAddressStr, paymentInfo, inputCoins, inputCoinStrs, fee, hasPrivacy, tokenID, metaData) {\n    let start = new Date().getTime();\n    let i;\n    // set version tx\n    this.version = TxVersion;\n\n    // set lock time in second\n    if (this.lockTime === 0) {\n      this.lockTime = parseInt(new Date().getTime() / 1000);\n    }\n\n    // generate sender's key set from senderSK\n    let senderKeySet = new KeySet().importFromPrivateKey(senderSK);\n\n    // get public key's last byte of sender\n    let senderPK = senderKeySet.PaymentAddress.Pk;\n    let pkLastByteSender = senderPK[senderPK.length - 1];\n\n    // init info of tx\n    let pubKeyData = P256.decompress(senderKeySet.PaymentAddress.Pk);\n    let transmissionKeyPoint = P256.decompress(senderKeySet.PaymentAddress.Tk);\n    this.info = encrypt(transmissionKeyPoint, pubKeyData);\n\n    //set meta data\n    this.metadata = metaData;\n\n    // check whether tx is custom token tx or not\n    if (inputCoins.length === 0 && fee.cmp(new bn(0)) === 0) {\n      console.log(\"CREATE TX CUSTOM TOKEN\");\n      this.fee = fee;\n      this.sigPrivKey = senderSK;\n      this.pubKeyLastByteSender = pkLastByteSender;\n\n      this.sign(hasPrivacy);\n      return;\n    }\n\n    // set type tx\n    this.type = TxNormalType;\n\n    // set shard id\n    // let shardID = getShardIDFromLastByte(pkLastByteSender);\n\n    // Calculate sum of all output coins' value\n    let sumOutputValue = new bn(0);\n    for (i = 0; i < paymentInfo.length; i++) {\n      if (paymentInfo[i].Amount.cmp(new bn(0)) === -1) {\n        throw new Error(\"output coin's value is less than 0\");\n      }\n      sumOutputValue = sumOutputValue.add(paymentInfo[i].Amount);\n    }\n\n    // Calculate sum of all input coins' value\n    let sumInputValue = new bn(0);\n    // console.log(\"CREATING TX: ------ INPUT COIN LEN\",   inputCoins.length);\n    for (i = 0; i < inputCoins.length; i++) {\n      sumInputValue = sumInputValue.add(inputCoins[i].coinDetails.value);\n    }\n\n    // Calculate over balance, it will be returned to sender\n    let overBalance = sumInputValue.sub(sumOutputValue);\n    overBalance = overBalance.sub(fee);\n\n    if (overBalance.lt(new bn(0))) {\n      throw new Error(\"Input value less than output value\");\n    }\n\n    console.log(\"Check balance ok!!!!!\");\n\n    let commitmentIndices = []; // array index random of commitments in db\n    let myCommitmentIndices = []; // index in array index random of commitment in db\n    let commitmentProving = [];\n\n    // get commitment list from db for proving\n    // call api to random commitments list\n    if (hasPrivacy) {\n      let response;\n      try{\n        response = await this.rpcClient.randomCommitmentsProcess(paymentAddressStr, inputCoinStrs, tokenID);\n      } catch(e){\n        throw e;\n      }\n      \n      commitmentIndices = response.commitmentIndices; // array index random of commitments in db\n      myCommitmentIndices = response.myCommitmentIndices; // index in array index random of commitment in db\n      commitmentProving = response.commitments;\n\n      console.log(\"Random commitment ok!!!!!\");\n\n      // Check number of list of random commitments, list of random commitment indices\n      if (commitmentIndices.length !== inputCoins.length * CM_RING_SIZE) {\n        throw new Error(\"Invalid random commitments\");\n      }\n\n      if (myCommitmentIndices.length !== inputCoins.length) {\n        throw new Error(\"Number of list my commitment indices must be equal to number of input coins\");\n      }\n    }\n\n    // set tokenID for constant\n    if (tokenID === null) {\n      tokenID = ConstantID;\n    }\n\n    // if overBalance > 0, create a new payment info with pk is sender's pk and amount is overBalance\n    if (overBalance.gt(0)) {\n      let changePaymentInfo = new PaymentInfo();\n      changePaymentInfo.Amount = overBalance;\n      changePaymentInfo.PaymentAddress = senderKeySet.PaymentAddress;\n      paymentInfo.push(changePaymentInfo);\n    }\n\n    // create new output coins\n    let outputCoins = new Array(paymentInfo.length);\n\n    // generates SNDs for output coins\n    let ok = true;\n    let sndOuts = new Array(paymentInfo.length);\n    // let sndOutStrs = new Array(paymentInfo.length);\n\n    while (ok) {\n      let sndOut = new bn(0);\n      for (i = 0; i < paymentInfo.length; i++) {\n        sndOut = randScalar();\n        let sndOutStrs = checkEncode(sndOut.toArray(), ENCODE_VERSION);\n\n        while (true) {\n          // call api to check SND existence\n          let res;\n          try {\n            res = await this.rpcClient.hasSNDerivator(paymentAddressStr, [sndOutStrs]);\n          } catch(e){\n            throw e;\n          }\n          \n          // if sndOut existed, then re-random it\n          if (res.existed[0]) {\n            sndOut = randScalar();\n            sndOutStrs = checkEncode(sndOut.toArray(), ENCODE_VERSION);\n          } else {\n            break\n          }\n        }\n        sndOuts[i] = sndOut;\n      }\n\n      // if sndOuts has two elements that have same value, then re-generates it\n      ok = checkDuplicateBigIntArray(sndOuts);\n      if (ok) {\n        sndOuts = new Array(paymentInfo.length);\n      }\n    }\n\n    console.log(\"Create new output coins ok!!!!!\");\n\n    // create new output coins with info: Pk, value, last byte of pk, snd\n    for (i = 0; i < paymentInfo.length; i++) {\n      outputCoins[i] = new OutputCoin();\n      outputCoins[i].coinDetails.value = paymentInfo[i].Amount;\n      outputCoins[i].coinDetails.publicKey = P256.decompress(paymentInfo[i].PaymentAddress.Pk);\n      outputCoins[i].coinDetails.snderivator = sndOuts[i];\n    }\n\n    // assign fee tx\n    this.fee = fee;\n\n    // create zero knowledge proof of payment\n    this.proof = new PaymentProof();\n\n    // prepare witness for proving\n    let witness = new PaymentWitness();\n    witness.init(hasPrivacy, new bn(senderSK, 'be', BIG_INT_SIZE), inputCoins, outputCoins, pkLastByteSender, commitmentProving, commitmentIndices, myCommitmentIndices);\n\n    console.log(\"Init witness ok!!!!!\");\n    console.time(\"Proving:\");\n    this.proof = await witness.prove(hasPrivacy);\n    console.timeEnd(\"Proving:\");\n    console.log(\"Proving ok!!!!!\");\n\n    // set private key for signing tx\n    if (hasPrivacy) {\n      this.sigPrivKey = new Uint8Array(2 * BIG_INT_SIZE);\n      this.sigPrivKey.set(senderSK, 0);\n      this.sigPrivKey.set(witness.randSK.toArray('be', BIG_INT_SIZE), senderSK.length);\n\n      // encrypt coin details (randomness)\n      // hide information of output coins except coin commitments, public key, snDerivators\n      for (i = 0; i < this.proof.outputCoins.length; i++) {\n        this.proof.outputCoins[i].encrypt(paymentInfo[i].PaymentAddress.Tk);\n        this.proof.outputCoins[i].coinDetails.serialNumber = null;\n        this.proof.outputCoins[i].coinDetails.value = 0;\n        this.proof.outputCoins[i].coinDetails.randomness = null;\n      }\n\n      // hide information of input coins except serial number of input coins\n      for (i = 0; i < this.proof.inputCoins.length; i++) {\n        this.proof.inputCoins[i].coinDetails.coinCommitment = null;\n        this.proof.inputCoins[i].coinDetails.value = 0;\n        this.proof.inputCoins[i].coinDetails.snderivator = null;\n        this.proof.inputCoins[i].coinDetails.publicKey = null;\n        this.proof.inputCoins[i].coinDetails.randomness = null;\n      }\n\n    } else {\n      this.sigPrivKey = new Uint8Array(BIG_INT_SIZE + 1);\n      this.sigPrivKey.set(senderSK, 0);\n      this.sigPrivKey.set(new bn(0).toArray(), senderSK.length);\n    }\n\n    // sign tx\n    console.log(\"signing ......\");\n    this.pubKeyLastByteSender = pkLastByteSender;\n    this.sign();\n    console.log(\"TX normal: \", this.proof);\n\n    console.log(\"signing ok!!!!!\");\n\n    let end = new Date().getTime();\n    console.log(\"Creating tx time: \", end - start);\n    console.log(\"**** DONE CREATING TX ****\");\n\n    let txSize = this.getTxActualSize(); \n    console.log(\"TX actual size when create tx: \", txSize);\n\n    // check tx size \n    if (txSize > MaxTxSize){\n      throw new Error(\"Tx size is too large!\")\n    }\n    return null;\n  }\n\n  // convertTxToByte converts tx to bytes array before sending tx\n  convertTxToByte() {\n    this.info = convertUint8ArrayToArray(this.info);\n    this.sigPubKey = convertUint8ArrayToArray(this.sigPubKey);\n    this.sig = convertUint8ArrayToArray(this.sig);\n\n    if (this.proof) {\n      this.proof = checkEncode(this.proof.toBytes(), ENCODE_VERSION);\n    }\n\n    if (this.fee) {\n      this.fee = this.fee.toNumber();\n    }\n\n    this.hashValue = \"\";\n    return this;\n  };\n\n  sign = () => {\n    console.time(\"Sign time:\");\n    //Check input transaction\n\n    if (this.sig.length !== 0) {\n      throw new Error(\"input transaction must be an unsigned one\")\n    }\n\n    /****** using Schnorr signature *******/\n      // sign with sigPrivKey\n      // prepare private key for Schnorr\n    let sk = new bn(this.sigPrivKey.slice(0, BIG_INT_SIZE));\n    let r = new bn(this.sigPrivKey.slice(BIG_INT_SIZE));\n\n    let sigKey = new SchnPrivKey(sk, r);\n\n    // save public key for verification signature tx\n    this.sigPubKey = sigKey.PK.PK.compress();\n\n    // signing\n    // console.log(\"HASH tx: \", this.hash().join(', '));\n    let hashTx = this.hash();\n    console.log(\"Hash normal tx when signing: \", hashTx);\n    console.log(\"HASH TX DONE!!!!!!\");\n\n    this.sig = sigKey.sign(hashTx);\n    console.log(\"SIGNING OK!!!!!!\");\n    console.timeEnd(\"Sign time:\");\n\n    return null\n  };\n\n  // toString converts tx to string\n  toString = () => {\n    console.log(\"CONVERTING TX TO STRING FOR HASHING.....\");\n    let record = this.version.toString();\n    record += this.lockTime.toString();\n\n    if (this.fee == null) {\n      record += \"0\";\n    } else {\n      record += this.fee.toString();\n    }\n\n    if (this.proof != null) {\n      let proofBytes = this.proof.toBytes();\n      let proofBytesEncoded = checkEncode(proofBytes, ENCODE_VERSION);\n      record += proofBytesEncoded;\n    }\n\n    console.log(\"CONVERTING TX TO STRING FOR HASHING DONE!!!!!!!\");\n\n    if (this.metadata != null) {\n      let tmp = this.metadata.Type.toString();\n      tmp = hashSha3BytesToBytes(stringToBytes(tmp));\n      console.log(\"Meta data after hashing: \", tmp);\n      record += convertHashToStr(tmp);\n    }\n    return record;\n  };\n\n  // hash hashes tx string to 32-byte hashing value\n  hash = () => {\n    let hash = null;\n\n    if (this.hashValue == null) {\n      let str = this.toString();\n      let bytes = stringToBytes(str);\n\n      hash = hashSha3BytesToBytes(bytes);\n      this.hashValue = hash;\n    } else {\n      hash = this.hashValue;\n    }\n\n    return hash;\n  };\n\n  // getTxActualSize computes the actual size of a given transaction in kilobyte\n  getTxActualSize() {\n    let sizeTx = 1 + this.type.length + this.lockTime.toString().length + (this.fee ? this.fee.toString().length : 1) + this.info.length;\n    sizeTx += this.sigPubKey.length + this.sig.length;\n\n    if (this.proof !== null) {\n      sizeTx += this.proof.toBytes().length;\n    }\n\n    sizeTx += 1;\n\n    if (this.metadata) {\n      if (this.metadata.Type){\n        sizeTx += this.metadata.Type.toString().length;\n      }\n    }\n\n    return Math.ceil(sizeTx / 1024);\n  };\n}\n\nexport { Tx };\n","import bn from 'bn.js';\nimport { checkDecode, checkEncode } from \"../base58\";\nimport { KeyWallet as keyWallet } from \"../wallet/hdwallet\";\nimport { knapsack, greedy } from '../knapsack';\nimport { InputCoin } from '../coin';\nimport { P256 } from \"privacy-js-lib/lib/ec\";\nimport { PaymentProof } from '../payment';\nimport { TxTokenVin, TxTokenVout, CustomTokenParamTx } from \"../tx/txcustomtokendata\";\nimport { newHashFromStr } from \"../common\";\nimport { CustomTokenPrivacyParamTx, Wallet } from \"../wallet/wallet\";\nimport { PaymentInfo } from \"../key\";\nimport {\n  ENCODE_VERSION, \n  SIG_PUB_KEY_SIZE,\n  SIG_NO_PRIVACY_SIZE,\n  SIG_PRIVACY_SIZE,\n} from \"../constants\";\nimport { PaymentAddressType, ReadonlyKeyType, MaxTxSize} from '../wallet/constants';\nimport { CustomTokenInit, CustomTokenTransfer, MaxInputNumberForDefragment } from '../tx/constants';\n\n// prepareInputForTx prepare inputs for constant tx\nconst prepareInputForTx = async (spendingKeyStr, paymentInfos, fee, account, rpcClient) => {\n  // deserialize spending key string to key wallet\n  let myKeyWallet = keyWallet.base58CheckDeserialize(spendingKeyStr);\n  // import key set\n  myKeyWallet.KeySet.importFromPrivateKey(myKeyWallet.KeySet.PrivateKey);\n\n  // serialize payment address, readonlyKey\n  let paymentAddrSerialize = myKeyWallet.base58CheckSerialize(PaymentAddressType);\n  let readOnlyKeySerialize = myKeyWallet.base58CheckSerialize(ReadonlyKeyType);\n\n  // get all output coins of spendingKey\n  let response;\n  try{\n    response = await rpcClient.getOutputCoin(paymentAddrSerialize, readOnlyKeySerialize);\n  } catch(e){\n    throw e;\n  }\n  \n  let allOutputCoinStrs = response.outCoins;\n  // if (allOutputCoinStrs.length == 0) {\n  //   throw new Error('Balance is zero');\n  // }\n\n  // devide all of output coins into uncached and cached out put coins list\n  const { uncachedOutputCoinStrs, cachedOutputCoinStrs, cachedInputCoins } = account.analyzeOutputCoinFromCached(allOutputCoinStrs);\n  let inputCoins = cachedInputCoins\n  // console.log(\"Input coin cached: analyzeOutputCoinFromCached : \", inputCoins);\n\n  // parse input coins from input coins string (encoded) and cache\n  if (uncachedOutputCoinStrs.length > 0) {\n    let uncachedInputCoins = parseInputCoinFromEncodedObject(uncachedOutputCoinStrs, account.key, account.derivatorPointCached);\n    // merge derivator cached point with derivator cached json\n    account.mergeDerivatorCached(); \n    account.mergeInputCoinJsonCached(uncachedOutputCoinStrs, uncachedInputCoins);\n    inputCoins = inputCoins.concat(uncachedInputCoins);\n    allOutputCoinStrs = cachedOutputCoinStrs.concat(uncachedOutputCoinStrs);\n  }\n\n  // get unspent coin from cache\n  let { unspentInputCoinsFromCached, unspentInputCoinsFromCachedStrs } = account.analyzeSpentCoinFromCached(inputCoins, allOutputCoinStrs);\n\n  // check whether unspent coin from cache is spent or not\n  let { unspentCoins } = await getUnspentCoin(unspentInputCoinsFromCached, paymentAddrSerialize, unspentInputCoinsFromCachedStrs, null, rpcClient);\n\n  // remove spending coins from list of unspent coins\n  let unspentCoinExceptSpendingCoin = getUnspentCoinExceptSpendingCoin(unspentCoins, account);\n  // console.log(\"unspentCoinExceptSpeningCoin: \", unspentCoinExceptSpeningCoin);\n\n  // calculate amount which need to be spent\n  let amount = new bn(0);\n  for (let i = 0; i < paymentInfos.length; i++) {\n    amount = amount.add(paymentInfos[i].Amount);\n  }\n  amount = amount.add(fee);\n\n  let respChooseBestCoin;\n  try {\n    respChooseBestCoin = chooseBestCoinToSpent(unspentCoinExceptSpendingCoin, amount);\n  } catch (e) {\n    console.log(\"Error when chooseBestCoinToSpent\", e)\n    throw e;\n  }\n\n  let inputCoinsToSpent = respChooseBestCoin.resultInputCoins;\n\n  if (inputCoinsToSpent.length == 0 && amount.cmp(new bn(0)) != 0) {\n    throw new Error(\"Not enough coin\")\n  }\n\n  // parse inputCoinsToSpent to encoded objects \n  let inputCoinsToSpentStr = parseInputCoinToEncodedObject(inputCoinsToSpent);\n\n  return {\n    senderKeySet: myKeyWallet.KeySet,\n    paymentAddrSerialize: paymentAddrSerialize,\n    inputCoins: inputCoinsToSpent,\n    inputCoinStrs: inputCoinsToSpentStr\n  };\n};\n\nconst prepareInputForCustomTokenTx = async (spendingKeyStr, tokenParams, rpcClient) => {\n  let senderKeyWallet = keyWallet.base58CheckDeserialize(spendingKeyStr);\n  senderKeyWallet.KeySet.importFromPrivateKey(senderKeyWallet.KeySet.PrivateKey);\n\n  let response;\n  try {\n    response = await rpcClient.listCustomTokens();\n  } catch (e) {\n    throw e;\n  }\n\n  let listCustomToken = response.listCustomToken;\n\n  switch (tokenParams.tokenTxType) {\n    case CustomTokenInit: {\n      return {\n        listCustomToken: listCustomToken,\n        tokenVins: null,\n      }\n    }\n    case CustomTokenTransfer: {\n      // sum of custom tokens' value in tokenParams.receivers\n      let vOutAmount = 0;\n      for (let i = 0; i < tokenParams.receivers.length; i++) {\n        vOutAmount += tokenParams.receivers[i].value;\n      }\n\n      // gêt unspent custom token with propertyID\n      try {\n        response = await rpcClient.getUnspentCustomToken(\n          senderKeyWallet.base58CheckSerialize(PaymentAddressType),\n          tokenParams.propertyID\n        );\n      } catch(e){\n        throw e;\n      }\n\n      let listUnspentCustomToken = response.listUnspentCustomToken;\n      \n      if (listUnspentCustomToken.length === 0) {\n        throw new Error(\"Balance of token is zero\");\n      }\n\n      // get enough cutsom token for spending\n      let tokenVins = new Array(0);\n      let vinAmount = 0;\n\n      for (let i = 0; i < listUnspentCustomToken.length; i++) {\n        vinAmount += listUnspentCustomToken[i].Value;\n\n        let tokenVoutsTmp = new TxTokenVout();\n        tokenVoutsTmp.set(senderKeyWallet.KeySet.PaymentAddress, listUnspentCustomToken[i].Value);\n\n        let tokenVinTmp = new TxTokenVin();\n        tokenVinTmp.txCustomTokenID = newHashFromStr(listUnspentCustomToken[i].TxCustomTokenID);\n        tokenVinTmp.voutIndex = listUnspentCustomToken[i].Index;\n        tokenVinTmp.paymentAddress = senderKeyWallet.KeySet.PaymentAddress;\n        // console.log(\":senderKeyWallet1.KeySet.PaymentAddress: \", senderKeyWallet.KeySet.PaymentAddress);\n\n        let signature = senderKeyWallet.KeySet.sign(tokenVoutsTmp.hash());\n        tokenVinTmp.signature = checkEncode(signature, ENCODE_VERSION);\n\n        tokenVins.push(tokenVinTmp);\n\n        vOutAmount -= listUnspentCustomToken[i].Value;\n        if (vOutAmount <= 0) {\n          break;\n        }\n      }\n\n      return {\n        listCustomToken: listCustomToken,\n        tokenVins: tokenVins,\n        vinsAmount: vinAmount,\n      }\n    }\n  }\n};\n\nconst prepareInputForTxCustomTokenPrivacy = async (spendingKeyStr, tokenParams, account, rpcClient, feeToken) => {\n  console.log(\"Token param when preparing: \", tokenParams);\n  let response;\n  try {\n    response = await rpcClient.listPrivacyCustomTokens();\n  } catch(e){\n    throw e;\n  }\n  let listPrivacyToken = response.listPrivacyToken;\n\n  // paymentInfo for tx normal\n  // tokenParams for tx custom token privacy data, but haven't tokenParam's tokenInputs\n  switch (tokenParams.tokenTxType) {\n    case CustomTokenInit: {\n      return {\n        tokenInputs: null,\n        listPrivacyToken: listPrivacyToken\n      }\n    }\n    case CustomTokenTransfer: {\n      // deserialize spending key string to key wallet\n      let myKeyWallet = keyWallet.base58CheckDeserialize(spendingKeyStr);\n\n      // import key set\n      myKeyWallet.KeySet.importFromPrivateKey(myKeyWallet.KeySet.PrivateKey);\n\n      // serialize payment address, readonlyKey\n      let paymentAddrSerialize = myKeyWallet.base58CheckSerialize(PaymentAddressType);\n      let readOnlyKeySerialize = myKeyWallet.base58CheckSerialize(ReadonlyKeyType);\n\n      // prepare tokenParams' tokenInputs for tx custom token privacy\n      let amountTokenPrivacyOutput = new bn(0);\n      for (let i = 0; i < tokenParams.receivers.length; i++) {\n        amountTokenPrivacyOutput = amountTokenPrivacyOutput.add(tokenParams.receivers[i].Amount);\n      }   \n      amountTokenPrivacyOutput.add(feeToken);   \n\n      let response;\n      try{\n        response = await rpcClient.getOutputCoin(paymentAddrSerialize, readOnlyKeySerialize, tokenParams.propertyID.toLowerCase());\n      } catch(e){\n        throw e;\n      }\n      let allOutputCoinStrs = response.outCoins;\n      if (allOutputCoinStrs.length == 0) {\n        throw new Error(\"Token's amount is zero\");\n      }\n\n      // parse input coin from string\n      // leftOutputCoinStrs: is not cached\n      const { uncachedOutputCoinStrs, cachedOutputCoinStrs, cachedInputCoins } = account.analyzeOutputCoinFromCached(allOutputCoinStrs, tokenParams.propertyID.toLowerCase());\n      let inputCoins = cachedInputCoins\n\n      // console.log(\"Input coin cached: analyzeOutputCoinFromCached : \", inputCoins);\n\n      // cache leftOutputCoinStrs\n      if (uncachedOutputCoinStrs.length > 0) {\n        let uncachedInputCoins = Wallet.RpcClient.parseInputCoinFromEncodedObject(uncachedOutputCoinStrs, account.key, account.derivatorPointCached);\n        account.mergeDerivatorCached();\n        account.mergeInputCoinJsonCached(uncachedOutputCoinStrs, uncachedInputCoins);\n        inputCoins = inputCoins.concat(uncachedInputCoins);\n        allOutputCoinStrs = cachedOutputCoinStrs.concat(uncachedOutputCoinStrs);\n      }\n\n      // get unspent coin from cache\n      let { unspentInputCoinsFromCached, unspentInputCoinsFromCachedStrs } = account.analyzeSpentCoinFromCached(inputCoins, allOutputCoinStrs, tokenParams.propertyID.toLowerCase());\n\n      // get list unspent coins from all of output coins\n      let unspentOutputCoins;\n      try {\n        unspentOutputCoins = await getUnspentPrivacyCustomToken(unspentInputCoinsFromCached, paymentAddrSerialize, unspentInputCoinsFromCachedStrs, tokenParams.propertyID.toLowerCase(), rpcClient);\n      } catch (e) {\n        throw e;\n      }\n\n      // get coin to spent using Knapsack\n      let tokenInputs;\n      try {\n        tokenInputs = chooseBestCoinToSpent(unspentOutputCoins.unspentCoin, amountTokenPrivacyOutput).resultInputCoins;\n      } catch (e) {\n        throw e;\n      }\n\n      return {\n        tokenInputs: tokenInputs,\n        listPrivacyToken: listPrivacyToken,\n      };\n    }\n  }\n\n};\n\n// parseInputCoinFromEncodedObject convert encoded input coins object to struct and calculate serial number\nconst parseInputCoinFromEncodedObject = (encodedCoinObjects, keyWallet, derivatorCached = {}, tokenID = 'constant') => {\n  console.time(\"parseInputCoinFromEncodedObject: \")\n  let inputCoins = new Array(encodedCoinObjects.length);\n  const spendingKeyBN = new bn(keyWallet.KeySet.PrivateKey);\n\n  for (let i = 0; i < encodedCoinObjects.length; i++) {\n    // decode object coins\n    let publicKeyDecode = checkDecode(encodedCoinObjects[i].PublicKey).bytesDecoded;\n    let commitmentDecode = checkDecode(encodedCoinObjects[i].CoinCommitment).bytesDecoded;\n    let sndDecode = checkDecode(encodedCoinObjects[i].SNDerivator).bytesDecoded;\n    let randDecode = checkDecode(encodedCoinObjects[i].Randomness).bytesDecoded;\n\n    inputCoins[i] = new InputCoin();\n    inputCoins[i].coinDetails.publicKey = P256.decompress(publicKeyDecode);\n    inputCoins[i].coinDetails.coinCommitment = P256.decompress(commitmentDecode);\n    inputCoins[i].coinDetails.snderivator = new bn(sndDecode);\n    inputCoins[i].coinDetails.randomness = new bn(randDecode);\n    inputCoins[i].coinDetails.value = new bn(encodedCoinObjects[i].Value);\n    inputCoins[i].coinDetails.info = checkDecode(encodedCoinObjects[i].Info).bytesDecoded;\n\n    // calculate serial number for each coins\n    // check whether each coin's snd is existed in derivatorCached or not\n    const sndStr = `${tokenID}_${inputCoins[i].coinDetails.snderivator}`;\n    let serialNumber = {};\n\n    if (derivatorCached[sndStr] != undefined) {\n      serialNumber = derivatorCached[sndStr];\n    } else {\n      serialNumber = P256.g.derive(spendingKeyBN, inputCoins[i].coinDetails.snderivator);\n      derivatorCached[sndStr] = serialNumber;\n    }\n\n    inputCoins[i].coinDetails.serialNumber = serialNumber;\n  }\n  console.timeEnd(\"parseInputCoinFromEncodedObject: \")\n  return inputCoins;\n};\n\n// parseInputCoinToEncodedObject convert input coin to encoded object\nconst parseInputCoinToEncodedObject = (coins) => {\n  let encodedCoins = new Array(coins.length);\n\n  for (let i = 0; i < encodedCoins.length; i++) {\n    encodedCoins[i] = new Object();\n    encodedCoins[i].PublicKey = checkEncode(coins[i].coinDetails.publicKey.compress(), ENCODE_VERSION);\n    encodedCoins[i].CoinCommitment = checkEncode(coins[i].coinDetails.coinCommitment.compress(), ENCODE_VERSION);\n    encodedCoins[i].SNDerivator = checkEncode(coins[i].coinDetails.snderivator.toArray(), ENCODE_VERSION);\n    encodedCoins[i].Randomness = checkEncode(coins[i].coinDetails.randomness.toArray(), ENCODE_VERSION);\n    encodedCoins[i].SerialNumber = null;\n    encodedCoins[i].Value = coins[i].coinDetails.value.toNumber();\n    encodedCoins[i].Info = checkEncode(coins[i].coinDetails.info, ENCODE_VERSION);\n  }\n\n  return encodedCoins;\n};\n\n// chooseBestCoinToSpent return list of coins to spent using Knapsack and Greedy algorithm\nconst chooseBestCoinToSpent = (inputCoins, amount) => {\n  console.log(\"HHHHHH amount: \", amount);\n  console.log(\"HHHHHH inputCoins: \", inputCoins);\n\n  console.time(\"chooseBestCoinToSpent\")\n\n  if (amount.cmp(new bn(0)) === 0) {\n    return {\n      resultInputCoins: [],\n      remainInputCoins: cloneInputCoinArray(inputCoins),\n      totalResultInputCoinAmount: new bn(0)\n    }\n  }\n\n  let resultInputCoins = [];\n\tlet remainInputCoins = [];\n\tlet totalResultInputCoinAmount = new bn(0);\n\n\t// either take the smallest coins, or a single largest one\n\tlet inCoinOverAmount = null;\n  let inCoinsUnderAmount = [];\n\n\tfor (let i = 0; i< inputCoins.length; i++) {\n\t\tif (inputCoins[i].coinDetails.value.cmp(amount) === -1) {\n\t\t\tinCoinsUnderAmount.push(inputCoins[i]);\n\t\t} else if (inCoinOverAmount === null) {\n\t\t\tinCoinOverAmount = inputCoins[i];\n\t\t} else if (inCoinOverAmount.coinDetails.value.cmp(inputCoins[i].coinDetails.value) === 1) {\n\t\t\tremainInputCoins.push(inputCoins[i]);\n\t\t} else {\n\t\t\tremainInputCoins.push(inCoinOverAmount);\n\t\t\tinCoinOverAmount = inputCoins[i];\n\t\t}\n  }\n  \n  inCoinsUnderAmount.sort(function (a, b) {\n    return a.coinDetails.value.cmp(b.coinDetails.value);\n  });\n\n\tfor (let i = 0; i < inCoinsUnderAmount.length; i++) {\n\t\tif (totalResultInputCoinAmount.cmp(amount) === -1) {\n\t\t\ttotalResultInputCoinAmount = totalResultInputCoinAmount.add(inCoinsUnderAmount[i].coinDetails.value);\n\t\t\tresultInputCoins.push(inCoinsUnderAmount[i]);\n\t\t} else {\n\t\t\tremainInputCoins.push(inCoinsUnderAmount[i]);\n\t\t}\n  }\n  \n  console.log(\"inCoinOverAmount: \", inCoinOverAmount);\n  \n\tif (inCoinOverAmount != null && (inCoinOverAmount.coinDetails.value.cmp(amount.mul(new bn(2))) === 1 || totalResultInputCoinAmount.cmp(amount) === -1)) {\n\t\tremainInputCoins.push(resultInputCoins);\n\t\tresultInputCoins = [inCoinOverAmount];\n\t\ttotalResultInputCoinAmount = inCoinOverAmount.coinDetails.value;\n\t} else if (inCoinOverAmount != null) {\n\t\tremainInputCoins.push(inCoinOverAmount);\n\t}\n\n\tif (totalResultInputCoinAmount.cmp(amount) === -1) {\n    throw new Error(\"Not enough coin\");\n\t} else {\n    console.timeEnd(\"chooseBestCoinToSpent\")\n    return {\n      resultInputCoins: resultInputCoins,\n      remainInputCoins: remainInputCoins,\n      totalResultInputCoinAmount: totalResultInputCoinAmount\n    };\n\t}\n};\n\n// cloneInputCoinArray clone array of input coins to new array\nconst cloneInputCoinArray = (inputCoins) => {\n  let inputCoinsClone = new Array(inputCoins.length);\n\n  for (let i = 0; i < inputCoinsClone.length; i++) {\n    inputCoinsClone[i] = new InputCoin()\n    inputCoinsClone[i].coinDetails.set(inputCoins[i].coinDetails.publicKey, inputCoins[i].coinDetails.coinCommitment,\n      inputCoins[i].coinDetails.snderivator, inputCoins[i].coinDetails.serialNumber, inputCoins[i].coinDetails.randomness,\n      inputCoins[i].coinDetails.value, inputCoins[i].coinDetails.info);\n  }\n  return inputCoinsClone;\n}\n\n// paymentAddrSerialize, inputCoins, payments, hasPrivacy, metadata, customTokenParams, privacyCustomTokenParams\nconst estimateFee = async (paymentAddrSerialize, inputCoins, payments, hasPrivacy, metadata, rpcClient, customTokenParams = null, privacyCustomTokenParams = null) => {\n  let unitFee;\n  try{\n    unitFee = await rpcClient.getEstimateFeePerKB(paymentAddrSerialize);\n  } catch(e){\n    throw e;\n  }\n\n  let txSize = estimateTxSize(inputCoins, payments, hasPrivacy, metadata, customTokenParams, privacyCustomTokenParams);\n  console.log(\"TX size when estimate fee: \", txSize);\n\n  // check tx size\n  if (txSize > MaxTxSize) {\n    throw new Error(\"Tx size is too large!\")\n  }\n\n  console.log(\"++++++++++++++++++++++ Estimate Fee +++++++++++++++++++++\")\n  console.log(\"--------- inputCoins:\", inputCoins)\n  console.log(\"--------- payments:\", payments)\n  console.log(\"--------- hasPrivacy:\", hasPrivacy)\n  console.log(\"--------- customTokenParams:\", customTokenParams)\n  console.log(\"--------- privacyCustomTokenParams:\", privacyCustomTokenParams)\n  console.log(\"--------- txSize in Kb:\", txSize)\n  console.log(\"--------- unitFee:\", unitFee.unitFee)\n  console.log(\"++++++++++++++++++++++ End Estimate Fee +++++++++++++++++++++\")\n\n  return txSize * unitFee.unitFee; // mili constant\n};\n\nconst getEstimateFee = async (from, to, amount, privatekeyStr, account, isPrivacy, rpcClient, customTokenParams = null, privacyCustomTokenParams = null) => {\n  let receiverKeyWallet = keyWallet.base58CheckDeserialize(to);\n  let paymentInfos = [];\n  if (customTokenParams == null && privacyCustomTokenParams == null) {\n    paymentInfos = new Array(1);\n    paymentInfos[0] = new PaymentInfo(receiverKeyWallet.KeySet.PaymentAddress, new bn(amount));\n  }\n  // console.log(\"Amount when getEstimateFee: \", amount);\n  // console.log(\"Amount BigInt when getEstimateFee: \", new bn(amount));\n  // console.log(\"Payment info when getEstimateFee: \", paymentInfos);\n\n  let inputForTx;\n  try {\n    inputForTx = await prepareInputForTx(privatekeyStr, paymentInfos, new bn(0), account, rpcClient);\n  } catch (e) {\n    throw e;\n  }\n\n  let fee;\n  try {\n    fee = await estimateFee(from, inputForTx.inputCoins, paymentInfos, isPrivacy, null, rpcClient, customTokenParams, privacyCustomTokenParams);\n  } catch (e) {\n    throw e;\n  }\n\n  return fee;\n};\n\n/**\n *\n * @param {string} from\n * @param {string} to\n * @param {number} amount\n * @param {{Privacy: boolean, TokenID: string, TokenName: string, TokenSymbol: string, TokenTxType: number TokenAmount: number, TokenReceivers: {[string]: number}}} tokenObject\n * @param {string} privateKeyStr\n */\nconst getEstimateFeeForSendingToken = async (from, to, amount, tokenObject, privatekeyStr, account, rpcClient, isPrivacyForPrivateToken, feeToken) => {\n  let id = \"\";\n  let name = \"\";\n  let symbol = \"\";\n  if (tokenObject.TokenID !== null) {\n    id = tokenObject.TokenID;\n  }\n  if (tokenObject.TokenName !== null) {\n    name = tokenObject.TokenName;\n  }\n  if (tokenObject.TokenSymbol !== null) {\n    symbol = tokenObject.TokenSymbol;\n  }\n\n  if (tokenObject.Privacy === false) {\n    let receivers = new TxTokenVout();\n    receivers.set(\n      keyWallet.base58CheckDeserialize(tokenObject.TokenReceivers.PaymentAddress).KeySet.PaymentAddress, \n      tokenObject.TokenReceivers.Amount\n    );\n\n    let customTokenParams = new CustomTokenParamTx();\n    customTokenParams.set(id, name, symbol,\n      amount, tokenObject.TokenTxType, [receivers],\n      [], tokenObject.TokenAmount);\n\n    let inputForCustomTx;\n    try {\n      inputForCustomTx = await prepareInputForCustomTokenTx(privatekeyStr, customTokenParams, rpcClient);\n      customTokenParams.vins = inputForCustomTx.tokenVins;\n    } catch (e) {\n      throw e;\n    }\n\n    let fee;\n    try {\n      fee = await getEstimateFee(from, to, amount, privatekeyStr, account, false, rpcClient, customTokenParams);\n    } catch (e) {\n      throw e;\n    }\n\n    return fee;\n  } else if (tokenObject.Privacy === true) {\n    let receivers = new PaymentInfo(\n      keyWallet.base58CheckDeserialize(tokenObject.TokenReceivers.PaymentAddress).KeySet.PaymentAddress, \n      new bn(tokenObject.TokenReceivers.Amount)\n    );\n\n    let privacyCustomTokenParams = new CustomTokenPrivacyParamTx();\n    privacyCustomTokenParams.set(id, name, symbol, amount, tokenObject.TokenTxType, [receivers], []);\n\n    let inputForPrivacyCustomToken;\n    try {\n      inputForPrivacyCustomToken = await prepareInputForTxCustomTokenPrivacy(privatekeyStr, privacyCustomTokenParams, account, rpcClient, new bn(feeToken));\n      privacyCustomTokenParams.tokenInputs = inputForPrivacyCustomToken.tokenInputs;\n    } catch (e) {\n      throw e;\n    }\n\n    let fee;\n    try {\n      fee = await getEstimateFee(from, to, amount, privatekeyStr, account, isPrivacyForPrivateToken, rpcClient, null, privacyCustomTokenParams);\n    } catch (e) {\n      throw e;\n    }\n    return fee;\n  }\n}\n\nconst getEstimateFeeToDefragment = async (from, amount, privatekeyStr, account, isPrivacy, rpcClient) => {\n  amount = new bn(amount);\n\n  let senderPaymentAddress = keyWallet.base58CheckDeserialize(from);\n\n  // totalAmount was paid for fee\n  let defragmentUTXO, totalAmount;\n  console.time(\"getUTXOsToDefragment\")\n  try {\n    let result = await getUTXOsToDefragment(privatekeyStr, new bn(0), account, amount, rpcClient);\n    console.log(\"getUTXOsToDefragment Done\");\n    defragmentUTXO = result.defragmentUTXO;\n    totalAmount = result.totalAmount;\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n\n  console.timeEnd(\"getUTXOsToDefragment\")\n  console.log(\"defragmentUTXO len: \", defragmentUTXO.length);\n\n  // create paymentInfos\n  let paymentInfos = new Array(1);\n  paymentInfos[0] = new PaymentInfo(\n    senderPaymentAddress,\n    totalAmount\n  );\n\n  let fee;\n  try {\n    fee = await estimateFee(from, defragmentUTXO, paymentInfos, isPrivacy, null, rpcClient);\n  } catch (e) {\n    throw e;\n  }\n  return fee;\n};\n\nconst estimateTxSize = (inputCoins, payments, hasPrivacy, metadata, customTokenParams, privacyCustomTokenParams) => {\n  let sizeVersion = 1; // int8\n  let sizeType = 5;    // string, max : 5\n  let sizeLockTime = 8; // int64\n  let sizeFee = 8;      // uint64\n\n  let sizeInfo = 0;\n  if (hasPrivacy) {\n    sizeInfo = 64;\n  }\n  let sizeSigPubKey = SIG_PUB_KEY_SIZE;\n  let sizeSig = SIG_NO_PRIVACY_SIZE;\n  if (hasPrivacy) {\n    sizeSig = SIG_PRIVACY_SIZE;\n  }\n\n  let sizeProof = PaymentProof.estimateProofSize(inputCoins.length, payments.length, hasPrivacy);\n\n  let sizePubKeyLastByte = 1;\n\n  let sizeMetadata = 0;\n  // if (metadata != null || typeof metadata !== \"undefined\"){\n  //   sizeMetadata += metadata.CalculateSize()\n  // }\n  let sizeTx = sizeVersion + sizeType + sizeLockTime + sizeFee + sizeInfo + sizeSigPubKey + sizeSig + sizeProof + sizePubKeyLastByte + sizeMetadata;\n  if (customTokenParams !== null && typeof customTokenParams !== \"undefined\") {\n    let customTokenDataSize = 0;\n    customTokenDataSize += customTokenParams.propertyID.length;\n    customTokenDataSize += customTokenParams.propertySymbol.length;\n    customTokenDataSize += customTokenParams.propertyName.length;\n    customTokenDataSize += 8;\n    customTokenDataSize += 4;\n    console.log(\"************* customTokenParams.receivers: \", customTokenParams.receivers);\n    console.log(\"************* customTokenParams.vins: \", customTokenParams.vins);\n\n    for (let i = 0; i < customTokenParams.receivers.length; i++) {\n      customTokenDataSize += customTokenParams.receivers[i].paymentAddress.toBytes().length;\n      customTokenDataSize += 8;\n    }\n\n    if (customTokenParams.vins !== null) {\n      for (let i = 0; i < customTokenParams.vins.length; i++) {\n        customTokenDataSize += customTokenParams.vins[i].paymentAddress.toBytes().length;\n        customTokenDataSize += customTokenParams.vins[i].txCustomTokenID.slice(0).length;\n        customTokenDataSize += customTokenParams.vins[i].signature.length;\n        customTokenDataSize += 4;\n      }\n      sizeTx += customTokenDataSize;\n    }\n  }\n  if (privacyCustomTokenParams !== null && typeof privacyCustomTokenParams !== \"undefined\") {\n    let customTokenDataSize = 0;\n\n    customTokenDataSize += privacyCustomTokenParams.propertyID.length;\n    customTokenDataSize += privacyCustomTokenParams.propertySymbol.length;\n    customTokenDataSize += privacyCustomTokenParams.propertyName.length;\n\n    customTokenDataSize += 8; // for amount\n    customTokenDataSize += 4; // for TokenTxType\n    customTokenDataSize += 1; // int8 version\n    customTokenDataSize += 5; // string, max : 5 type\n    customTokenDataSize += 8; // int64 locktime\n    customTokenDataSize += 8; // uint64 fee\n\n    customTokenDataSize += 64; // info\n\n    customTokenDataSize += SIG_PUB_KEY_SIZE; // sig pubkey\n    customTokenDataSize += SIG_PRIVACY_SIZE; // sig\n\n    // Proof\n    if (privacyCustomTokenParams.tokenInputs !== null) {\n      customTokenDataSize += PaymentProof.estimateProofSize(privacyCustomTokenParams.tokenInputs.length, privacyCustomTokenParams.receivers.length, true);\n    }\n    customTokenDataSize += 1; //PubKeyLastByte\n    sizeTx += customTokenDataSize\n\n  }\n  return Math.ceil(sizeTx / 1024.0) + 2; // buffer more 2 kb on tx size\n};\n\nconst getUTXOsToDefragment = async (spendingKeyStr, fee, account, amount, rpcClient) => {\n  // deserialize spending key string to key wallet\n  let myKeyWallet = keyWallet.base58CheckDeserialize(spendingKeyStr);\n\n  // import key set\n  myKeyWallet.KeySet.importFromPrivateKey(myKeyWallet.KeySet.PrivateKey);\n\n  // serialize payment address, readonlyKey\n  let paymentAddrSerialize = myKeyWallet.base58CheckSerialize(PaymentAddressType);\n  let readOnlyKeySerialize = myKeyWallet.base58CheckSerialize(ReadonlyKeyType);\n\n  // get all output coins of spendingKey\n  let response;\n  try{\n    response = await rpcClient.getOutputCoin(paymentAddrSerialize, readOnlyKeySerialize);\n  } catch(e){\n    throw e;\n  }\n  \n  let allOutputCoinStrs = response.outCoins;\n\n  if (allOutputCoinStrs.length == 0) {\n    throw new Error('Have no item in list output coins');\n  }\n\n  // parse input coin from string\n  // leftOutputCoinStrs: is not cached\n  const { uncachedOutputCoinStrs, cachedOutputCoinStrs, cachedInputCoins } = account.analyzeOutputCoinFromCached(allOutputCoinStrs);\n  let inputCoins = cachedInputCoins\n\n  // console.log(\"Input coin cached: analyzeOutputCoinFromCached : \", inputCoins);\n\n  // cache leftOutputCoinStrs\n  if (uncachedOutputCoinStrs.length > 0) {\n    let uncachedInputCoins = parseInputCoinFromEncodedObject(uncachedOutputCoinStrs, account.key, account.derivatorPointCached);\n    account.mergeDerivatorCached();\n    account.mergeInputCoinJsonCached(uncachedOutputCoinStrs, uncachedInputCoins);\n    inputCoins = inputCoins.concat(uncachedInputCoins);\n    allOutputCoinStrs = cachedOutputCoinStrs.concat(uncachedOutputCoinStrs);\n  }\n\n  // get unspent coin from cache\n  let { unspentInputCoinsFromCached, unspentInputCoinsFromCachedStrs } = account.analyzeSpentCoinFromCached(inputCoins, allOutputCoinStrs);\n\n  let { unspentCoins, unspentCoinStrs } = await getUnspentCoin(unspentInputCoinsFromCached, paymentAddrSerialize, unspentInputCoinsFromCachedStrs, null, rpcClient);\n\n  // get list of spending coins, which in tx in membool\n  let { UTXOExceptSpeningCoin, UTXOExceptSpeningCoinStrs } = getUTXOsExceptSpendingCoin(unspentCoins, unspentCoinStrs, account);\n  // console.log(\"UTXOExceptSpeningCoin: \", UTXOExceptSpeningCoin);\n\n  // get UTXO less than amount\n  let defragmentUTXO = [];\n  let defragmentUTXOStr = [];\n  let totalAmount = new bn(0);\n  let numUTXO = 0;\n\n  for (let i = 0; i < UTXOExceptSpeningCoin.length; i++) {\n    if (UTXOExceptSpeningCoin[i].coinDetails.value.cmp(amount) != 1) {\n      defragmentUTXO.push(UTXOExceptSpeningCoin[i]);\n      defragmentUTXOStr.push(UTXOExceptSpeningCoinStrs[i]);\n      totalAmount = totalAmount.add(UTXOExceptSpeningCoin[i].coinDetails.value);\n      numUTXO++;\n      if (numUTXO >= MaxInputNumberForDefragment) {\n        break;\n      }\n    }\n  }\n  console.log(\"defragmentUTXO: \", defragmentUTXO.length)\n  console.log(\"Get unspent input coin less than amount done!\");\n\n  totalAmount = totalAmount.sub(fee);\n\n  if (totalAmount.cmp(new bn(0)) == -1) {\n    console.log(\"You shouldn't defragment wallet now beacause the number of UTXO need to be defragmented is so small!!! \")\n    throw new Error(\"the number of UTXO need to be defragmented is so small\");\n  }\n\n  console.log(\"Get UTXO done!\");\n\n  return {\n    defragmentUTXO: defragmentUTXO,\n    defragmentUTXOStr: defragmentUTXOStr,\n    totalAmount: totalAmount,\n  };\n};\n\nconst getUTXOsExceptSpendingCoin = (unspentCoins, unspentCoinStrs, account) => {\n  if (account.spendingCoins){\n    if (account.spendingCoins.length) {\n      let UTXOExceptSpeningCoin = cloneInputCoinArray(unspentCoins);\n      let UTXOExceptSpeningCoinStrs = unspentCoinStrs;\n\n      for (let i = 0; i < account.spendingCoins.length; i++) {\n        for (let j = 0; j < account.spendingCoins[i].spendingSNs.length; j++) {\n          // console.log(\"Spending coin : \", account.spendingCoins)\n          for (let k = 0; k < UTXOExceptSpeningCoin.length; k++) {\n            if (account.spendingCoins[i].spendingSNs[j].toString() === UTXOExceptSpeningCoin[k].coinDetails.serialNumber.compress().toString()) {\n              UTXOExceptSpeningCoin.splice(k, 1);\n              UTXOExceptSpeningCoinStrs.splice(k, 1);\n            }\n          }\n        }\n      }\n      // console.log(\"UTXOExceptSpeningCoin getUnspentCoinExceptSpendingCoin after : \", UTXOExceptSpeningCoin);\n      return {\n        UTXOExceptSpeningCoin: UTXOExceptSpeningCoin,\n        UTXOExceptSpeningCoinStrs: UTXOExceptSpeningCoinStrs\n      }\n    }\n  } \n\n  return {\n    UTXOExceptSpeningCoin: unspentCoins,\n    UTXOExceptSpeningCoinStrs: unspentCoinStrs\n  }\n};\n\nconst getUnspentCoinExceptSpendingCoin = (unspentCoins, account) => {\n  // console.log(\"unspentCoinExceptSpeningCoin getUnspentCoinExceptSpendingCoin before: \", unspentCoinExceptSpeningCoin);\n  // console.log(\" AAAA account.spendingCoins: \", account.spendingCoins);\n\n  if (account.spendingCoins){\n    if (account.spendingCoins.length){\n      let unspentCoinExceptSpendingCoin = cloneInputCoinArray(unspentCoins);\n      for (let i = 0; i < account.spendingCoins.length; i++) {\n        for (let j = 0; j < account.spendingCoins[i].spendingSNs.length; j++) {\n          for (let k = 0; k < unspentCoinExceptSpendingCoin.length; k++) {\n            // console.log(\"FFF account.spendingCoins[i].spendingCoins[j].toString(): \", account.spendingCoins[i].spendingSNs[j].toString());\n            // console.log(\"FFF unspentCoinExceptSpeningCoin[k].coinDetails.serialNumber.compress().toString(): \", unspentCoinExceptSpeningCoin[k].coinDetails.serialNumber.compress().toString());\n            if (account.spendingCoins[i].spendingSNs[j].toString() === unspentCoinExceptSpendingCoin[k].coinDetails.serialNumber.compress().toString()) {\n              unspentCoinExceptSpendingCoin.splice(k, 1);\n            }\n          }\n        }\n      }\n      console.log(\"unspentCoinExceptSpeningCoin getUnspentCoinExceptSpendingCoin after : \", unspentCoinExceptSpendingCoin);\n      return unspentCoinExceptSpendingCoin;\n    } \n  }\n\n  return unspentCoins;\n}\n\n\n// getUnspentCoin returns unspent coins\nconst getUnspentCoin = async (inputCoins, paymentAddrSerialize, inCoinStrs, tokenID, rpcClient) => {\n  console.time(\"Getunspent coin:\")\n  let unspentCoins = new Array();\n  let unspentCoinStrs = new Array();\n\n  let serialNumberStrs = new Array(inputCoins.length);\n\n  for (let i = 0; i < inputCoins.length; i++) {\n    serialNumberStrs[i] = checkEncode(inputCoins[i].coinDetails.serialNumber.compress(), ENCODE_VERSION);\n  }\n\n  // check whether each input coin is spent or not\n  let response;\n  try{\n    response = await rpcClient.hasSerialNumber(paymentAddrSerialize, serialNumberStrs, tokenID);\n  } catch(e){\n    throw e;\n  }\n\n  let existed = response.existed;\n  if (existed.length != inputCoins.length) {\n    throw new Error(\"Wrong response when check has serial number\");\n  }\n\n  for (let i = 0; i < existed.length; i++) {\n    if (!existed[i]) {\n      unspentCoins.push(inputCoins[i]);\n      unspentCoinStrs.push(inCoinStrs[i]);\n    }\n  }\n  // console.log(\"unspent input coin: \", unspentCoin);\n  // console.log(\"unspent input coin len : \", unspentCoin.length);\n  console.timeEnd(\"Getunspent coin:\")\n  return {\n    unspentCoins: unspentCoins,\n    unspentCoinStrs: unspentCoinStrs\n  };\n};\n\n// getUnspentPrivacyCustomToken returns unspent privacy custom token\nconst getUnspentPrivacyCustomToken = async (inputCoins, paymentAddrSerialize, inCoinStrs, tokenID = null, rpcClient) => {\n  let unspentCoin = new Array();\n  let unspentCoinStrs = new Array();\n\n  let serialNumberStrs = new Array(inputCoins.length);\n\n  for (let i = 0; i < inputCoins.length; i++) {\n    serialNumberStrs[i] = checkEncode(inputCoins[i].coinDetails.serialNumber.compress(), ENCODE_VERSION);\n  }\n\n  // check whether each input coin is spent or not\n  let response;\n  try{\n    response = await rpcClient.hasSerialNumber(paymentAddrSerialize, serialNumberStrs, tokenID);\n  } catch(e){\n    throw e;\n  }\n\n  let existed = response.existed;\n\n  for (let i = 0; i < existed.length; i++) {\n    if (!existed[i]) {\n      unspentCoin.push(inputCoins[i]);\n      unspentCoinStrs.push(inCoinStrs[i]);\n    }\n  }\n  // console.log(\"unspent input coin: \", unspentCoin);\n  // console.log(\"unspent input coin len : \", unspentCoin.length);\n  return {\n    unspentCoin: unspentCoin,\n    unspentCoinStrs: unspentCoinStrs\n  };\n};\n\n\nexport { \n  prepareInputForTx,\n  prepareInputForCustomTokenTx,\n  prepareInputForTxCustomTokenPrivacy,\n  parseInputCoinFromEncodedObject,\n  parseInputCoinToEncodedObject,\n  chooseBestCoinToSpent,\n  cloneInputCoinArray,\n  estimateFee,\n  getEstimateFee,\n  getEstimateFeeForSendingToken,\n  getEstimateFeeToDefragment,\n  estimateTxSize,\n  getUTXOsToDefragment,\n  getUTXOsExceptSpendingCoin,\n  getUnspentCoinExceptSpendingCoin,\n  getUnspentCoin,\n  getUnspentPrivacyCustomToken,\n };","import bn from 'bn.js';\nimport { CustomTokenInit } from '../tx/constants';\nimport { KeyWallet } from \"./hdwallet\";\nimport { PaymentInfo } from '../key';\nimport { Tx } from \"../tx/txprivacy\";\nimport { TxCustomToken } from \"../tx/txcustomtoken\";\nimport { TxCustomTokenPrivacy } from \"../tx/txcustomtokenprivacy\";\nimport { CustomTokenPrivacyParamTx } from \"../tx/txcustomkenprivacydata\";\nimport {\n  FailedTx,\n  SuccessTx,\n  MetaStakingBeacon,\n  MetaStakingShard,\n  PaymentAddressType,\n  ReadonlyKeyType,\n  PriKeyType\n} from \"./constants\";\nimport { toConstant } from \"./utils\";\nimport { checkEncode, checkDecode } from \"../base58\";\nimport { P256 } from \"privacy-js-lib/lib/ec\";\nimport { InputCoin } from '../coin';\nimport { \n  prepareInputForTx, \n  prepareInputForCustomTokenTx, \n  prepareInputForTxCustomTokenPrivacy,\n  getUnspentCoin,\n  parseInputCoinFromEncodedObject,\n  getUTXOsToDefragment\n } from \"../tx/utils\";\n import { ENCODE_VERSION } from \"../constants\";\n import { Wallet } from \"./wallet\";\n import { TxHistoryInfo } from \"./history\";\n import CryptoJS from \"crypto-js\";\nimport JSON from \"circular-json\";\n\nclass AccountWallet {\n    constructor() {\n      this.name = \"\";\n      this.key = new KeyWallet();\n      this.child = [];\n      this.isImport = false;\n      this.followingTokens = [\n        {ID: 'ffd8d42dc40a8d166ea4848baf8b5f6e912ad79875f4373070b59392b1756c8f', Image: '', Name: 'pETH', Symbol: 'pETH', Amount: 0, IsPrivacy: true, isInit: false},\n        {ID: 'b832e5d3b1f01a4f0623f7fe91d6673461e1f5d37d91fe78c5c2e6183ff39696', Image: '', Name: 'pBTC', Symbol: 'pBTC', Amount: 0, IsPrivacy: true, isInit: false}\n      ];\n      \n      this.txHistory = { NormalTx: [], CustomTokenTx: [], PrivacyCustomTokenTx: [] };\n  \n      // derivatorPointCached is used for saving derivator (encoded) with corresponding serial number in elliptic point that was calculated before\n      this.derivatorPointCached = {}\n      // derivatorPointCached is used for saving derivator (encoded) with corresponding encoded serial number in bytes array that was calculated before\n      this.derivatorJsonCached = {}\n  \n      // spentCoinCached is used for saving derivator \n      this.spentCoinCached = {}\n  \n      // inputCoinCached is used for saving derivator (encoded) with corresponding input coin in struct that was calculated before\n      this.inputCoinCached = {}\n      // inputCoinCached is used for saving derivator (encoded) with corresponding encoded input coin that was calculated before\n      this.inputCoinJsonCached = {}\n  \n      // list of serial number of coins in tx in mempool\n      this.spendingCoins = [];\n      this.getBalance = this.getBalance.bind(this);\n      this.mergeDerivatorCached = this.mergeDerivatorCached.bind(this);\n      this.analyzeOutputCoinFromCached = this.analyzeOutputCoinFromCached.bind(this);\n      this.loadInputCoinCached = this.loadInputCoinCached.bind(this);\n      this.loadDerivatorCached = this.loadDerivatorCached.bind(this);\n      this.removeObjectFromSpendingCoins = this.removeObjectFromSpendingCoins.bind(this);\n      this.mergeInputCoinJsonCached = this.mergeInputCoinJsonCached.bind(this);\n      this.analyzeSpentCoinFromCached = this.analyzeSpentCoinFromCached.bind(this);\n      this.mergeSpentCoinCached = this.mergeSpentCoinCached.bind(this);\n\n      this.createAndSendConstant = this.createAndSendConstant.bind(this);\n      this.createAndSendCustomToken = this.createAndSendCustomToken.bind(this);\n      this.createAndSendPrivacyCustomToken = this.createAndSendPrivacyCustomToken.bind(this);\n      this.getCustomTokenBalance = this.getCustomTokenBalance.bind(this);\n      this.getPrivacyCustomTokenBalance = this.getPrivacyCustomTokenBalance.bind(this);\n      this.listFollowingTokens = this.listFollowingTokens.bind(this);\n      this.addFollowingToken = this.addFollowingToken.bind(this);\n      this.removeFollowingToken = this.removeFollowingToken.bind(this);\n      this.getPrivacyCustomTokenTx = this.getPrivacyCustomTokenTx.bind(this);\n      this.getCustomTokenTx = this.getCustomTokenTx.bind(this);\n      this.getPrivacyCustomTokenTxByTokenID = this.getPrivacyCustomTokenTxByTokenID.bind(this);\n      this.defragment = this.defragment.bind(this);\n    };\n\n    /**\n     * @param {txID: string, spendingSNs: array} spendingCoinObj \n     */\n    addSpendingCoins(spendingCoinObj) {\n      if (!this.spendingCoins) {\n        this.spendingCoins = [];\n      }\n\n      this.spendingCoins.push(spendingCoinObj);\n    }\n  \n    removeObjectFromSpendingCoins(txId) {\n      for (let i = 0; i < this.spendingCoins.length; i++) {\n        if (this.spendingCoins[i].txID === txId) {\n          console.log(\"Remove spending list\");\n          this.spendingCoins.splice(i, 1);\n          break;\n        }\n      }\n    }\n  \n    clearCached(){\n      this.derivatorPointCached = {};\n      this.derivatorJsonCached = {};\n      this.spentCoinCached = {};\n      this.inputCoinCached = {};\n      this.inputCoinJsonCached = {};\n    }\n\n    // saveAccountCached saving derivatorJsonCached, inputCoinJsonCached and spentCoinCached\n    saveAccountCached(password, storage){\n      console.log(\"Saving account cached ....\")\n      if (password == \"\") {\n        throw new Error(\"Password is required\");\n      }\n\n      let cacheObject = {};\n      cacheObject.derivatorJsonCached = this.derivatorJsonCached;\n      cacheObject.inputCoinJsonCached = this.inputCoinJsonCached;\n      cacheObject.spentCoinCached = this.spentCoinCached;\n\n      console.log(\"cacheObject.derivatorJsonCached: \", cacheObject.derivatorJsonCached);\n      console.log(\"cacheObject.inputCoinJsonCached: \", cacheObject.inputCoinJsonCached);\n      console.log(\"cacheObject.spentCoinCached: \", cacheObject.spentCoinCached);\n\n      let data = JSON.stringify(cacheObject);\n\n      // console.log(\"Data wallet after JSON.stringify: \", data);\n      // encrypt\n      let cipherText = CryptoJS.AES.encrypt(data, password)\n\n      // console.log('cipherText wallet when saving', cipherText)\n      // console.log(\"this.Storage: \", this.Storage);\n      // storage\n      if (storage != null) {\n        console.log(\"this.Storage: \", storage);\n        return storage.setItem(`${this.name}-cached`, cipherText.toString());\n      }\n    }\n\n    async loadAccountCached(password, storage){\n      if (storage != null) {\n        let cipherText = await storage.getItem(`${this.name}-cached`);\n        console.log(\"Ciphertext: \", cipherText);\n        if (!cipherText) return false;\n\n        let data = CryptoJS.AES.decrypt(cipherText, password);\n        let jsonStr = data.toString(CryptoJS.enc.Utf8);\n        console.log(\"jsonStr: \", jsonStr);\n        // const tasks = [];\n  \n        try {\n          let cacheObject = JSON.parse(jsonStr);\n          this.derivatorJsonCached = cacheObject.derivatorJsonCached;\n          this.inputCoinJsonCached = cacheObject.inputCoinJsonCached;\n          this.spentCoinCached  = cacheObject.spentCoinCached;\n\n          console.log(\"this.derivatorJsonCached: \", this.derivatorJsonCached);\n          console.log(\"this.inputCoinJsonCached: \", this.inputCoinJsonCached);\n          console.log(\"this.spentCoinCached: \", this.spentCoinCached);\n\n          await this.loadDerivatorCached(),\n          await this.loadInputCoinCached()\n\n          // tasks.push(Promise.all([\n            \n          // ]).then(() => {\n          //   return Promise.resolve();\n          // }));\n        } catch (e) {\n          throw e;\n        }\n      }\n    }\n  \n    listFollowingTokens(){\n      return this.followingTokens;\n    };\n  \n    /**\n     * @param {...{ID: string, Image: string, Name: string, Symbol: string, Amount: number, IsPrivacy: boolean, isInit: boolean}} tokenData - tokens to follow\n     */\n    addFollowingToken(...tokenData){\n      this.followingTokens.unshift(...tokenData);\n    };\n  \n    removeFollowingToken(tokenId) {\n      const removedIndex = this.followingTokens.findIndex(token => token.ID === tokenId);\n      this.followingTokens.splice(removedIndex, 1);\n    }\n  \n    saveNormalTx(tx, amount, receivers, status, isIn, isPrivacy){\n      let txHistory = new TxHistoryInfo();\n      txHistory.setHistoryInfo(tx.txId, tx.type, amount, toConstant(tx.fee), receivers, tx.lockTime * 1000, isIn, isPrivacy);\n      txHistory.updateStatus(status);\n      this.txHistory.NormalTx.unshift(txHistory);\n    };\n  \n    saveCustomTokenTx(tx, receivers, status, isIn, amount){\n      let txHistory = new TxHistoryInfo();\n      txHistory.setHistoryInfo(tx.txId, tx.type, amount, toConstant(tx.fee), receivers, tx.lockTime * 1000, isIn, false, \n        tx.txTokenData.propertyName, tx.txTokenData.propertyID, tx.txTokenData.propertySymbol\n      );\n      txHistory.updateStatus(status);\n      this.txHistory.CustomTokenTx.unshift(txHistory);\n    };\n  \n    savePrivacyCustomTokenTx(tx, receivers, status, isIn, amount) {\n      let txHistory = new TxHistoryInfo();\n      txHistory.setHistoryInfo(tx.txId, tx.type, amount, toConstant(tx.fee), receivers, tx.lockTime * 1000, isIn, true, \n        tx.txTokenPrivacyData.propertyName, tx.txTokenPrivacyData.propertyID, tx.txTokenPrivacyData.propertySymbol\n      );\n      txHistory.updateStatus(status);\n      this.txHistory.PrivacyCustomTokenTx.unshift(txHistory);\n    };\n  \n    getNormalTx() {\n      return this.txHistory.NormalTx;\n    };\n  \n    getPrivacyCustomTokenTx() {\n      return this.txHistory.PrivacyCustomTokenTx;\n    };\n  \n    getCustomTokenTx() {\n      return this.txHistory.CustomTokenTx;\n    };\n  \n    getPrivacyCustomTokenTxByTokenID(id){\n      let queryResult = new Array();\n      for (let i = 0; i < this.txHistory.PrivacyCustomTokenTx.length; i++) {\n        if (this.txHistory.PrivacyCustomTokenTx[i].tokenID === id)\n          queryResult.push(this.txHistory.PrivacyCustomTokenTx[i]);\n      }\n      return queryResult;\n    }\n  \n    getCustomTokenTxByTokenID(id) {\n      let queryResult = new Array();\n      for (let i = 0; i < this.txHistory.CustomTokenTx.length; i++) {\n        if (this.txHistory.CustomTokenTx[i].tokenID === id)\n          queryResult.push(this.txHistory.CustomTokenTx[i]);\n      }\n      return queryResult;\n    }\n  \n    // mergeDerivatorCached encode derivator cached in elliptic point to json\n    mergeDerivatorCached () {\n      this.derivatorJsonCached = this.derivatorJsonCached == undefined ? {} : this.derivatorJsonCached;\n      this.derivatorPointCached = this.derivatorPointCached == undefined ? {} : this.derivatorPointCached;\n\n      for (let k in this.derivatorPointCached) {\n        if (k != undefined && this.derivatorJsonCached[k] == undefined) {\n          this.derivatorJsonCached[k] = checkEncode(this.derivatorPointCached[k].compress(), ENCODE_VERSION);\n        }\n      }\n    }\n  \n    async loadDerivatorCached () {\n      const tasks = [];\n      this.derivatorJsonCached = this.derivatorJsonCached == undefined ? {} : this.derivatorJsonCached;\n      this.derivatorPointCached = this.derivatorPointCached == undefined ? {} : this.derivatorPointCached;\n      for (let k in this.derivatorJsonCached) {\n        if (k != undefined && this.derivatorPointCached[k] == undefined) {\n          tasks.push(new Promise(resolve => {\n            setTimeout(() => {\n              this.derivatorPointCached[k] = P256.decompress(checkDecode(this.derivatorJsonCached[k]).bytesDecoded);\n              resolve();\n            }, 0);\n          }));\n        }\n      }\n  \n      return Promise.all(tasks);\n    }\n  \n    async mergeInputCoinJsonCached(allOutputCoinStrs, inputCoins, tokenID = 'constant') {\n      // console.log(`${this.name} mergeInputCoinJsonCached allOutputCoinStrs`, allOutputCoinStrs);\n      // console.log(`${this.name} mergeInputCoinJsonCached inputCoins`, inputCoins);\n      // console.log(`${this.name} mergeInputCoinJsonCached tokenID`, tokenID);\n      this.inputCoinCached = this.inputCoinCached == undefined ? {} : this.inputCoinCached;\n      this.inputCoinJsonCached = this.inputCoinJsonCached == undefined ? {} : this.inputCoinJsonCached;\n  \n      for (let i = 0; i < allOutputCoinStrs.length; i++) {\n        const sndStr = `${tokenID}_${allOutputCoinStrs[i].SNDerivator}`;\n        const inputCoinTmp = inputCoins[i];\n  \n        if (this.inputCoinCached[sndStr] == undefined) {\n          this.inputCoinCached[sndStr] = inputCoinTmp;\n  \n          const encodedCoin = {};\n          encodedCoin.publicKey = checkEncode(inputCoinTmp.coinDetails.publicKey.compress(), ENCODE_VERSION);\n          encodedCoin.coinCommitment = checkEncode(inputCoinTmp.coinDetails.coinCommitment.compress(), ENCODE_VERSION);\n          encodedCoin.snderivator = inputCoinTmp.coinDetails.snderivator.toString();\n          encodedCoin.randomness = inputCoinTmp.coinDetails.randomness.toString();\n          encodedCoin.value = inputCoinTmp.coinDetails.value.toString();\n          encodedCoin.info = checkEncode(inputCoinTmp.coinDetails.info, ENCODE_VERSION);\n          encodedCoin.serialNumber = checkEncode(inputCoinTmp.coinDetails.serialNumber.compress(), ENCODE_VERSION);\n          this.inputCoinJsonCached[sndStr] = encodedCoin;\n        }\n      }\n      // console.log(`${this.name} mergeInputCoinJsonCached`, this.inputCoinCached);\n    }\n  \n    async loadInputCoinCached () {\n      this.inputCoinCached = this.inputCoinCached == undefined ? {} : this.inputCoinCached\n      this.inputCoinJsonCached = this.inputCoinJsonCached == undefined ? {} : this.inputCoinJsonCached\n  \n      const tasks = [];\n      for (let sndStr in this.inputCoinJsonCached) {\n        if (sndStr != undefined && this.inputCoinCached[sndStr] == undefined) {\n          tasks.push(new Promise(resolve => {\n            setTimeout(() => {\n              const jsonObject = this.inputCoinJsonCached[sndStr];\n  \n              const oObject = new InputCoin();\n              oObject.coinDetails.publicKey = P256.decompress(checkDecode(jsonObject.publicKey).bytesDecoded);\n              oObject.coinDetails.coinCommitment = P256.decompress(checkDecode(jsonObject.coinCommitment).bytesDecoded);\n              oObject.coinDetails.snderivator = new bn(jsonObject.snderivator);\n              oObject.coinDetails.randomness = new bn(jsonObject.randomness);\n              oObject.coinDetails.value = new bn(jsonObject.value);\n              oObject.coinDetails.info = checkDecode(jsonObject.info).bytesDecoded;\n              oObject.coinDetails.serialNumber = P256.decompress(checkDecode(jsonObject.serialNumber).bytesDecoded);\n  \n              this.inputCoinCached[sndStr] = oObject\n              resolve();\n            }, 0);\n          }))\n        }\n      }\n      console.log(`${this.name} loadInputCoinCached`, this.inputCoinCached);\n  \n      return Promise.all(tasks);\n    }\n  \n    // analyzeOutputCoinFromCached devides allOutputCoinStrs into list of cached output coins and list of uncached output coins\n    analyzeOutputCoinFromCached(allOutputCoinStrs, tokenID = 'constant') {\n      this.inputCoinCached = this.inputCoinCached === undefined ? {} : this.inputCoinCached\n      // console.log(`${this.name} analyzeOutputCoinFromCached allOutputCoinStrs`, allOutputCoinStrs);\n      // console.log(`${this.name} analyzeOutputCoinFromCached tokenID`, tokenID);\n      let uncachedOutputCoinStrs = [];\n      let cachedOutputCoinStrs = [];\n      let cachedInputCoins = [];\n  \n      for (let i = 0; i < allOutputCoinStrs.length; i++) {\n        const sndStr = `${tokenID}_${allOutputCoinStrs[i].SNDerivator}`;\n  \n        if (this.inputCoinCached[sndStr] !== undefined) {\n          cachedOutputCoinStrs.push(allOutputCoinStrs[i]);\n          cachedInputCoins.push(this.inputCoinCached[sndStr]);\n        } else {\n          uncachedOutputCoinStrs.push(allOutputCoinStrs[i]);\n        }\n      }\n      // console.log(`${this.name} analyzeOutputCoinFromCached leftOutputCoinStrs`, leftOutputCoinStrs);\n      // console.log(`${this.name} analyzeOutputCoinFromCached cachedOutputCoinStrs`, cachedOutputCoinStrs);\n      // console.log(`${this.name} analyzeOutputCoinFromCached cachedInputCoins`, cachedInputCoins);\n      return {\n        uncachedOutputCoinStrs: uncachedOutputCoinStrs,\n        cachedOutputCoinStrs: cachedOutputCoinStrs,\n        cachedInputCoins: cachedInputCoins,\n      }\n    }\n  \n    async mergeSpentCoinCached (unspentCoinStrs, inputCoins, tokenID = 'constant') {\n      this.spentCoinCached = this.spentCoinCached == undefined ? {} : this.spentCoinCached\n      // console.log(`${this.name} mergeSpentCoinCached unspentCoinStrs`, unspentCoinStrs);\n      // console.log(`${this.name} mergeSpentCoinCached inputCoins`, inputCoins);\n      // console.log(`${this.name} merge tokenID`, tokenID);\n      let chkAll = {};\n      for (let i = 0; i < inputCoins.length; i++) {\n        const sndStr = `${tokenID}_${inputCoins[i].coinDetails.snderivator}`;\n        chkAll[sndStr] = true\n      }\n      for (let i = 0; i < unspentCoinStrs.length; i++) {\n        let sndDecode = checkDecode(unspentCoinStrs[i].SNDerivator).bytesDecoded;\n        let snderivator = new bn(sndDecode);\n        const sndStr = `${tokenID}_${snderivator}`;\n        chkAll[sndStr] = false\n      }\n      for (let sndStr in chkAll) {\n        if (sndStr != undefined && chkAll[sndStr] == true) {\n          this.spentCoinCached[sndStr] = true\n        }\n      }\n      // console.log(`${this.name} mergeSpentCoinCached spentCoinCached`, this.spentCoinCached);\n    }\n  \n    // analyzeSpentCoinFromCached returns input coins which it not existed in list of cached spent input coins\n    analyzeSpentCoinFromCached(inputCoins, allOutputCoinStrs, tokenID = 'constant') {\n      // console.log(`${this.name} analyzeSpentCoinFromCached inputCoins`, inputCoins);\n      // console.log(`${this.name} analyzeSpentCoinFromCached allOutputCoinStrs`, allOutputCoinStrs);\n      // console.log(`${this.name} analyzeSpentCoinFromCached tokenID`, tokenID);\n      this.spentCoinCached = this.spentCoinCached == undefined ? {} : this.spentCoinCached;\n      let unspentInputCoinsFromCached = [];\n      let unspentInputCoinsFromCachedStrs = [];\n  \n      for (let i = 0; i < inputCoins.length; i++) {\n        const sndStr = `${tokenID}_${inputCoins[i].coinDetails.snderivator}`;\n        if (this.spentCoinCached[sndStr] == undefined) {\n          unspentInputCoinsFromCached.push(inputCoins[i]);\n          unspentInputCoinsFromCachedStrs.push(allOutputCoinStrs[i]);\n        }\n      }\n      // console.log(`${this.name} analyzeSpentCoinFromCached inputCoinsRet`, inputCoinsRet);\n      // console.log(`${this.name} analyzeSpentCoinFromCached allOutputCoinStrsRet`, allOutputCoinStrsRet);\n      return {\n        unspentInputCoinsFromCached: unspentInputCoinsFromCached,\n        unspentInputCoinsFromCachedStrs: unspentInputCoinsFromCachedStrs,\n      };\n    }\n  \n    async getBalance (){\n      console.time(\"Get balance: \");\n      let paymentAddrSerialize = this.key.base58CheckSerialize(PaymentAddressType);\n      let readOnlyKeySerialize = this.key.base58CheckSerialize(ReadonlyKeyType);\n\n      let response;\n      try{\n        response = await Wallet.RpcClient.getOutputCoin(paymentAddrSerialize, readOnlyKeySerialize);\n      } catch(e){\n        throw e;\n      }\n      \n      let allOutputCoinStrs = response.outCoins;\n      if (allOutputCoinStrs.length == 0) {\n        return 0;\n      }\n  \n      // parse input coin from encoded object\n      const { uncachedOutputCoinStrs, cachedOutputCoinStrs, cachedInputCoins } = this.analyzeOutputCoinFromCached(allOutputCoinStrs);\n      let inputCoins = cachedInputCoins;\n      if (uncachedOutputCoinStrs.length > 0) {\n        let uncachedInputCoins = parseInputCoinFromEncodedObject(uncachedOutputCoinStrs, this.key, this.derivatorPointCached);\n        this.mergeDerivatorCached();\n        this.mergeInputCoinJsonCached(uncachedOutputCoinStrs, uncachedInputCoins);\n        inputCoins = inputCoins.concat(uncachedInputCoins);\n        allOutputCoinStrs = cachedOutputCoinStrs.concat(uncachedOutputCoinStrs);\n      }\n\n      // analyze from cache\n      let { unspentInputCoinsFromCached, unspentInputCoinsFromCachedStrs } = this.analyzeSpentCoinFromCached(inputCoins, allOutputCoinStrs);\n      let { unspentCoins, unspentCoinStrs } = await getUnspentCoin(unspentInputCoinsFromCached, paymentAddrSerialize, unspentInputCoinsFromCachedStrs, null, Wallet.RpcClient);\n  \n      // update cache\n      this.mergeSpentCoinCached(unspentCoinStrs, inputCoins);\n  \n      let accountBalance = 0;\n      for (let i = 0; i < unspentCoinStrs.length; i++) {\n        accountBalance += parseInt(unspentCoinStrs[i].Value)\n      }\n  \n      // console.log(this.name , \" inputCoinCached after getbalance : \", this.inputCoinCached);\n      console.timeEnd(\"Get balance: \");\n      console.log(\"Balance: \", accountBalance);\n      return accountBalance\n    }\n  \n    async getPrivacyCustomTokenBalance(privacyCustomTokenID){\n      let paymentAddrSerialize = this.key.base58CheckSerialize(PaymentAddressType);\n      let readOnlyKeySerialize = this.key.base58CheckSerialize(ReadonlyKeyType);\n\n      let response;\n      try{\n        response = await Wallet.RpcClient.getOutputCoin(paymentAddrSerialize, readOnlyKeySerialize, privacyCustomTokenID);\n      } catch(e){\n        throw e;\n      }\n      \n      let allOutputCoinStrs = response.outCoins;\n      if (allOutputCoinStrs.length == 0) {\n        return 0;\n      }\n\n      // parse input coin from string\n      const { uncachedOutputCoinStrs, cachedOutputCoinStrs, cachedInputCoins } = this.analyzeOutputCoinFromCached(allOutputCoinStrs, privacyCustomTokenID);\n      let inputCoins = cachedInputCoins;\n      if (uncachedOutputCoinStrs.length > 0) {\n        let uncachedInputCoins = parseInputCoinFromEncodedObject(uncachedOutputCoinStrs, this.key, this.derivatorPointCached, privacyCustomTokenID);\n        this.mergeDerivatorCached();\n        this.mergeInputCoinJsonCached(uncachedOutputCoinStrs, uncachedInputCoins, privacyCustomTokenID);\n        inputCoins = inputCoins.concat(uncachedInputCoins);\n        allOutputCoinStrs = cachedOutputCoinStrs.concat(uncachedOutputCoinStrs);\n      }\n\n      let { unspentInputCoinsFromCached, unspentInputCoinsFromCachedStrs } = this.analyzeSpentCoinFromCached(inputCoins, allOutputCoinStrs, privacyCustomTokenID);\n      let unspentCoinList = await getUnspentCoin(unspentInputCoinsFromCached, paymentAddrSerialize, unspentInputCoinsFromCachedStrs, privacyCustomTokenID, Wallet.RpcClient);\n      this.mergeSpentCoinCached(unspentCoinList.unspentCoinStrs, inputCoins, privacyCustomTokenID);\n      var unspentCoinString = unspentCoinList.unspentCoinStrs;\n      let accountBalance = 0;\n      for (let i = 0; i < unspentCoinString.length; i++) {\n        accountBalance += parseInt(unspentCoinString[i].Value)\n      }\n      return accountBalance\n    }\n  \n    async getCustomTokenBalance (customTokenIDStr) {\n      let res;\n      try{\n        res = await Wallet.RpcClient.getUnspentCustomToken(\n          this.key.base58CheckSerialize(PaymentAddressType),\n          customTokenIDStr\n        );\n      } catch(e){\n        throw e;\n      }\n      \n      let vins = res.listUnspentCustomToken;\n      let accountBalance = 0;\n      for (let i = 0; i < vins.length; i++) {\n        accountBalance += parseInt(vins[i].Value)\n      }\n      // console.log('\\t accountBalance', accountBalance)\n      return accountBalance\n    };\n  \n    async createAndSendConstant(param, fee, isPrivacy){\n      await Wallet.updateProgressTx(10)\n      // create paymentInfos\n      let paymentInfos = new Array(param.length);\n      let receiverPaymentAddrStr = new Array(param.length);\n  \n      for (let i = 0; i < paymentInfos.length; i++) {\n        let keyWallet = KeyWallet.base58CheckDeserialize(\n          param[i].paymentAddressStr\n        );\n        receiverPaymentAddrStr[i] = param[i].paymentAddressStr;\n        paymentInfos[i] = new PaymentInfo(\n          keyWallet.KeySet.PaymentAddress,\n          new bn(param[i].amount)\n        );\n      }\n\n      let amount = new bn(0);\n        for (let i = 0; i < paymentInfos.length; i++) {\n          amount = amount.add(paymentInfos[i].Amount);\n        }\n  \n      let senderSkStr = this.key.base58CheckSerialize(PriKeyType);\n      let paymentAddressStr = this.key.base58CheckSerialize(PaymentAddressType);\n  \n      console.time(\"Time for create and send tx\");\n      try {\n        // prepare input for tx\n        console.time(\"Time for preparing input for constant tx\");\n        // console.log(\"Wallet: \", Wallet.RpcClient);\n        let inputForTx;\n        try {\n          inputForTx = await prepareInputForTx(senderSkStr, paymentInfos, new bn(fee), this, Wallet.RpcClient);\n          console.log(\"input after prepare: \", inputForTx);\n        } catch (e) {\n          throw e;\n        }\n        console.timeEnd(\"Time for preparing input for constant tx\");\n  \n        await Wallet.updateProgressTx(30)\n  \n        // init tx\n        let tx = new Tx(Wallet.RpcClient);\n        try {\n          console.time(\"Time for creating tx\");\n          await tx.init(this.key.KeySet.PrivateKey, paymentAddressStr, paymentInfos,\n            inputForTx.inputCoins, inputForTx.inputCoinStrs, new bn(fee), isPrivacy, null, null);\n          console.timeEnd(\"Time for creating tx\");\n        } catch (e) {\n          console.log(\"ERR when creating tx: \", e);\n          throw e;\n        }\n  \n        await Wallet.updateProgressTx(60)\n  \n        // console.log(\"*************** CONSTANT TX: \", tx);\n        let response;\n        try{\n          response = await Wallet.RpcClient.sendRawTx(tx);\n        } catch(e){\n          throw e;\n        }\n        await Wallet.updateProgressTx(90)\n  \n        console.log(\"SENDING CONSTANT DONE!!!!\");\n        console.timeEnd(\"Time for create and send tx\");\n  \n        // saving history tx\n        console.log(\"Saving tx history.....\");\n        console.time(\"Saving tx history: \");\n  \n        // check status of tx and add coins to spending coins\n        let status = FailedTx;\n        if (response.txId) {\n          tx.txId = response.txId\n          status = SuccessTx;\n  \n          response.type = tx.type;\n          response.fee = tx.fee;\n          response.lockTime = tx.lockTime;\n          response.amount = amount;\n          response.txStatus = status;\n  \n          let spendingSNs = [];\n          for (let i = 0; i < inputForTx.inputCoins.length; i++) {\n            spendingSNs.push(inputForTx.inputCoins[i].coinDetails.serialNumber.compress())\n          }\n          this.addSpendingCoins({ txID: response.txId, spendingSNs: spendingSNs});\n        }\n  \n        console.log(\"Amount number when saving: \", amount.toNumber());\n        this.saveNormalTx(tx, amount.toNumber(), receiverPaymentAddrStr, status, false, isPrivacy);\n        console.log(\"history after saving: \", this.txHistory);\n  \n        console.timeEnd(\"Saving tx history: \");\n  \n        await Wallet.updateProgressTx(100)\n        console.log(\"Progress Tx: \", Wallet.ProgressTx);\n  \n        return response;\n      } catch (e) {\n        await Wallet.updateProgressTx(0)\n        console.log(e);\n        throw e;\n      }\n    };\n  \n  \n    // staking tx always send constant to burning address\n    // param.type: 0 : shard, 1: beacon\n    // param.burningAddress: burningAddress\n    // fee in Number\n    async createAndSendStakingTx (param, fee) {\n      await Wallet.updateProgressTx(10)\n\n      // get amount staking\n      let amount;\n      try {\n        let response = await Wallet.RpcClient.getStakingAmount(param.type);\n        // console.log(\"response getStakingAmount: \", response);\n        amount = response.res;\n      } catch (e) {\n        throw e;\n      }\n  \n      let meta;\n      if (param.type == ShardStakingType) {\n        meta = { Type: MetaStakingShard };\n      } else {\n        meta = { Type: MetaStakingBeacon };\n      }\n  \n      // create paymentInfos\n      let paymentInfos = new Array(1);\n      let receiverPaymentAddrStr = new Array(1);\n      receiverPaymentAddrStr[0] = param.burningAddress;\n  \n      let keyWallet = KeyWallet.base58CheckDeserialize(\n        receiverPaymentAddrStr[0]\n      );\n      paymentInfos[0] = new PaymentInfo(\n        keyWallet.KeySet.PaymentAddress,\n        new bn(amount)\n      );\n  \n      console.log(\"LIB: spending key when sending constant: \", this.key.KeySet.PrivateKey);\n  \n      console.log(\"Payment info when create staking tx: \", paymentInfos);\n      let senderSkStr = this.key.base58CheckSerialize(PriKeyType);\n      let paymentAddressStr = this.key.base58CheckSerialize(PaymentAddressType);\n  \n      console.time(\"Time for create and send tx\");\n      try {\n        // prepare input for tx\n        console.time(\"Time for preparing input for staking tx\");\n        let inputForTx;\n        try {\n          inputForTx = await prepareInputForTx(senderSkStr, paymentInfos, new bn(fee), this, Wallet.RpcClient);\n          console.log(\"input after prepare: \", inputForTx);\n        } catch (e) {\n          throw e;\n        }\n        console.timeEnd(\"Time for preparing input for staking tx\");\n  \n        await Wallet.updateProgressTx(30)\n  \n        // init txs\n        let tx = new Tx(Wallet.RpcClient);\n  \n        let amountToSpent = new bn(0);\n        for (let i = 0; i < paymentInfos.length; i++) {\n          amountToSpent = amountToSpent.add(paymentInfos[i].Amount);\n        }\n  \n        try {\n          console.time(\"Time for creating tx\");\n          await tx.init(this.key.KeySet.PrivateKey, paymentAddressStr, paymentInfos,\n            inputForTx.inputCoins, inputForTx.inputCoinStrs, new bn(fee), false, null, meta);\n          console.timeEnd(\"Time for creating tx\");\n        } catch (e) {\n          console.timeEnd(\"Time for creating tx\");\n          console.log(\"ERR when creating tx: \", e);\n          throw e;\n        }\n        await Wallet.updateProgressTx(60);\n\n        let response;\n        try{\n          response = await Wallet.RpcClient.sendRawTx(tx);\n        } catch(e){\n          throw e;\n        }\n  \n        await Wallet.updateProgressTx(90)\n  \n        console.log(\"SENDING STAKING TX DONE!!!!\");\n        console.timeEnd(\"Time for create and send tx\");\n  \n        // saving history tx\n        console.log(\"Saving tx history.....\");\n        console.time(\"Saving tx history: \");\n  \n        // check status of tx\n        let status = FailedTx;\n        if (response.txId) {\n          tx.txId = response.txId\n          status = SuccessTx;\n  \n          response.type = tx.type;\n          response.fee = tx.fee;\n          response.lockTime = tx.lockTime;\n          response.amount = amountToSpent;\n          response.txStatus = status;\n  \n          let spendingSNs = [];\n          for (let i = 0; i < inputForTx.inputCoins.length; i++) {\n            spendingSNs.push(inputForTx.inputCoins[i].coinDetails.serialNumber.compress())\n          }\n  \n          // console.log(\"spendingSNs: \", spendingSNs);\n          let object = {};\n          object.txID = response.txId;\n          object.spendingSNs = spendingSNs;\n  \n          this.addSpendingCoins({ txID: response.txId, spendingSNs: spendingSNs });\n        }\n  \n        // console.log(\"Amount number when saving: \", amountToSpent.toNumber());\n        // console.log(\"Amount number when saving: \", amountToSpent.toNumber() / 100);\n        this.saveNormalTx(tx, amountToSpent.toNumber() / 100, receiverPaymentAddrStr, status, false, false);\n        console.log(\"history after saving: \", this.txHistory);\n  \n        console.timeEnd(\"Saving tx history: \");\n  \n        await Wallet.updateProgressTx(100)\n        console.log(\"Progress Tx: \", Wallet.ProgressTx);\n  \n        return response;\n      } catch (e) {\n        await Wallet.updateProgressTx(0)\n        console.log(e);\n        throw e;\n      }\n    };\n  \n    async createAndSendCustomToken(paymentInfos = null, tokenParams, receiverPaymentAddrStr, fee){\n      await Wallet.updateProgressTx(10);\n      let senderSkStr = this.key.base58CheckSerialize(PriKeyType);\n      let paymentAddressStr = this.key.base58CheckSerialize(PaymentAddressType);\n  \n      try {\n        console.log(\"Preparing input for nomal tx ....\")\n        let inputForTx\n        try {\n          console.time(\"Time for preparing input for custom token tx\");\n          inputForTx = await prepareInputForTx(senderSkStr, paymentInfos, new bn(fee), this, Wallet.RpcClient);\n          await Wallet.updateProgressTx(30);\n          console.log(\"Input for fee: \", inputForTx);\n          console.timeEnd(\"Time for preparing input for custom token tx\");\n        } catch (e) {\n          throw e;\n        }\n  \n        let inputForCustomTokenTx;\n        try {\n          console.log(\"Preparing input for custom token tx ....\")\n          inputForCustomTokenTx = await prepareInputForCustomTokenTx(senderSkStr, tokenParams, Wallet.RpcClient);\n        } catch (e) {\n          throw e;\n        }\n        await Wallet.updateProgressTx(50);\n  \n        tokenParams.vins = inputForCustomTokenTx.tokenVins;\n        tokenParams.vinsAmount = inputForCustomTokenTx.vinsAmount;\n  \n        // console.log(\"Prepare: token vins: \", inputForCustomTokenTx.tokenVins);\n        // console.log(\"Prepare: list custom token: \", inputForCustomTokenTx.listCustomToken);\n  \n        let tx = new TxCustomToken(Wallet.RpcClient);\n  \n        try {\n          await tx.init(this.key.KeySet.PrivateKey, paymentAddressStr, paymentInfos, inputForTx.inputCoins, inputForTx.inputCoinStrs, new bn(fee), tokenParams, inputForCustomTokenTx.listCustomToken, null, false);\n        } catch (e) {\n          console.log(\"ERR when creating custom token tx: \", e)\n          throw e;\n        }\n        await Wallet.updateProgressTx(80);\n  \n        // console.log(\"Token ID:  \", convertHashToStr(tx.txTokenData.propertyID));\n  \n        console.log(\"Sending custom token tx ....\")\n\n        let response;\n        try {\n          response = await Wallet.RpcClient.sendRawTxCustomToken(tx);\n        } catch(e){\n          throw e;\n        }\n\n        console.log(\"SENDING CUSTOM TOKEN DONE!!!!\")\n        await Wallet.updateProgressTx(90);\n  \n        // saving history tx\n        // check status of tx\n        console.log(\"Saving custom token tx ....\")\n        let status = FailedTx;\n        if (response.txId) {\n          tx.txId = response.txId\n          status = SuccessTx;\n  \n          response.type = tx.type;\n          response.fee = tx.fee;\n          response.lockTime = tx.lockTime;\n          response.amount = tx.txTokenData.amount;\n          response.txStatus = status;\n  \n          response.propertyName = tx.txTokenData.propertyName;\n          response.propertyID = tx.txTokenData.propertyID;\n          response.propertySymbol = tx.txTokenData.propertySymbol;\n  \n          // add to following token list if tx is init token\n          if (tx.txTokenData.type == CustomTokenInit) {\n            let identicon = await Wallet.RpcClient.hashToIdenticon([tx.txTokenData.propertyID]);\n            const { txTokenData } = tx\n            const followingToken = {\n              ID: txTokenData.propertyID,\n              Image: identicon.images[0],\n              Name: txTokenData.propertyName,\n              Symbol: txTokenData.propertySymbol,\n              Amount: txTokenData.amount,\n              IsPrivacy: false,\n              isInit: true\n            };\n            this.addFollowingToken(followingToken);\n            // console.log(\"List following token after adding: \", this.followingTokens);\n          }\n  \n          let spendingSNs = [];\n          for (let i = 0; i < inputForTx.inputCoins.length; i++) {\n            spendingSNs.push(inputForTx.inputCoins[i].coinDetails.serialNumber.compress())\n          }\n          this.addSpendingCoins({ txID: response.txId, spendingSNs: spendingSNs});\n        }\n\n        // check is init or transfer token\n        let isIn;\n        let amount = 0;\n        if (tx.txTokenData.type == CustomTokenInit) {\n          isIn = true;\n          amount = tx.txTokenData.amount;\n        } else {\n          isIn = false;\n  \n          for (let i = 0; i < tokenParams.receivers.length; i++) {\n            amount += tokenParams.receivers[i].value;\n          }\n        }\n  \n        this.saveCustomTokenTx(tx, receiverPaymentAddrStr, status, isIn, amount);\n        await Wallet.updateProgressTx(100); \n  \n        return response;\n      } catch (e) {\n        throw e\n      }\n    };\n  \n    async createAndSendPrivacyCustomToken (paymentInfos = [], submitParam, feePRV, feeToken, hasPrivacyForToken) {\n      await Wallet.updateProgressTx(10);\n\n      let paymentInfoForPRV = new Array(paymentInfos.length);\n      for (let i = 0; i < paymentInfoForPRV.length; i++){\n        paymentInfoForPRV[i] = new PaymentInfo(\n          KeyWallet.base58CheckDeserialize(\n            paymentInfos[i].paymentAddressStr\n          ).KeySet.PaymentAddress,\n          new bn(paymentInfos[i].amount)\n        );\n      }\n  \n      // token param\n      // get current token to get token param\n      let tokenParams = new CustomTokenPrivacyParamTx();\n      tokenParams.propertyID = submitParam.TokenID;\n      tokenParams.propertyName = submitParam.TokenName;\n      tokenParams.propertySymbol = submitParam.TokenSymbol;\n      tokenParams.amount = submitParam.TokenAmount;\n      tokenParams.tokenTxType = submitParam.TokenTxType;\n  \n      let receiverPaymentAddrStr = new Array(1);\n      receiverPaymentAddrStr[0] = submitParam.TokenReceivers.PaymentAddress;\n  \n      tokenParams.receivers = new Array(1);\n      tokenParams.receivers[0] = new PaymentInfo(\n        KeyWallet.base58CheckDeserialize(\n          submitParam.TokenReceivers.PaymentAddress\n        ).KeySet.PaymentAddress,\n        new bn(submitParam.TokenReceivers.Amount)\n      );\n  \n      let senderSkStr = this.key.base58CheckSerialize(PriKeyType);\n      let paymentAddressStr = this.key.base58CheckSerialize(PaymentAddressType);\n  \n      try {\n        console.log(\"Preparing input for normal tx ....\")\n        let inputForTx;\n        try {\n          console.time(\"Time for preparing input for custom token tx\");\n          inputForTx = await prepareInputForTx(senderSkStr, paymentInfoForPRV, new bn(feePRV), this, Wallet.RpcClient);\n          console.timeEnd(\"Time for preparing input for custom token tx\");\n        } catch (e) {\n          throw e;\n        }\n        await Wallet.updateProgressTx(30);\n  \n        let inputForPrivacyCustomTokenTx;\n        try {\n          console.log(\"Preparing input for privacy custom token tx ....\")\n          inputForPrivacyCustomTokenTx = await prepareInputForTxCustomTokenPrivacy(senderSkStr, tokenParams, this, Wallet.RpcClient, new bn(feeToken));\n        } catch (e) {\n          throw e;\n        }\n        await Wallet.updateProgressTx(50);\n  \n        tokenParams.tokenInputs = inputForPrivacyCustomTokenTx.tokenInputs;\n  \n        // console.log(\"Prepare: vins: \", inputForPrivacyCustomTokenTx.tokenInputs);\n        // console.log(\"Prepare: list custom token: \", inputForPrivacyCustomTokenTx.listCustomToken);\n  \n        let tx = new TxCustomTokenPrivacy(Wallet.RpcClient);\n        try {\n          console.log(\"Creating privacy custom token tx ....\")\n          await tx.init(this.key.KeySet.PrivateKey, \n            paymentAddressStr, paymentInfoForPRV, \n            inputForTx.inputCoins, inputForTx.inputCoinStrs, \n            new bn(feePRV), \n            new bn(feeToken),\n            tokenParams, inputForPrivacyCustomTokenTx.listPrivacyToken, null, \n            hasPrivacyForToken\n          );\n        } catch (e) {\n          throw e;\n        }\n        await Wallet.updateProgressTx(80);\n        \n        let response;\n        try{\n          response = await Wallet.RpcClient.sendRawTxCustomTokenPrivacy(tx);\n        } catch(e){\n          throw e;\n        }\n  \n        await Wallet.updateProgressTx(90);\n        // saving history tx\n        // check status of tx\n  \n        console.log(\"Saving privacy custom token tx ....\")\n        let status = FailedTx;\n        if (response.txId) {\n          tx.txId = response.txId\n          status = SuccessTx;\n  \n          response.type = tx.type;\n          response.fee = tx.fee;\n          response.lockTime = tx.lockTime;\n          response.txStatus = status;\n  \n          response.propertyName = tx.txTokenPrivacyData.propertyName;\n          response.propertyID = tx.txTokenPrivacyData.propertyID;\n          response.propertySymbol = tx.txTokenPrivacyData.propertySymbol;\n  \n          // add to following token list if tx is init token\n          if (tx.txTokenPrivacyData.type == CustomTokenInit) {\n            let identicon = await Wallet.RpcClient.hashToIdenticon([tx.txTokenPrivacyData.propertyID]);\n            const { txTokenPrivacyData } = tx\n            this.addFollowingToken({\n              ID: txTokenPrivacyData.propertyID,\n              Image: identicon.images[0],\n              Name: txTokenPrivacyData.propertyName,\n              Symbol: txTokenPrivacyData.propertySymbol,\n              Amount: txTokenPrivacyData.amount,\n              IsPrivacy: true,\n              isInit: true\n            });\n            console.log(\"List following token after adding: \", this.followingTokens);\n          }\n  \n          let spendingSNs = [];\n          for (let i = 0; i < inputForTx.inputCoins.length; i++) {\n            spendingSNs.push(inputForTx.inputCoins[i].coinDetails.serialNumber.compress())\n          }\n  \n          // console.log(\"spendingSNs: \", spendingSNs);\n          let object = {};\n          object.txID = response.txId;\n          object.spendingSNs = spendingSNs;\n  \n          this.addSpendingCoins(object);\n        }\n  \n        // check is init or transfer token\n        let isIn;\n        let amount;\n        if (tx.txTokenPrivacyData.type == CustomTokenInit) {\n          isIn = true;\n          amount = tx.txTokenPrivacyData.amount;\n        } else {\n          isIn = false;\n          amount = tokenParams.amount;\n        }\n  \n        this.savePrivacyCustomTokenTx(tx, receiverPaymentAddrStr, status, isIn, amount);\n        await Wallet.updateProgressTx(100);\n        return response;\n      } catch (e) {\n        throw e\n      }\n    };\n  \n    // collect UTXOs have value that less than {amount} mili constant to one UTXO\n    async defragment(amount, fee, isPrivacy){\n      await Wallet.updateProgressTx(10);\n      amount = new bn(amount);\n      fee = new bn(fee);\n  \n      let senderSkStr = this.key.base58CheckSerialize(PriKeyType);\n      let senderPaymentAddressStr = this.key.base58CheckSerialize(PaymentAddressType);\n  \n      // totalAmount was paid for fee\n      let defragmentUTXO, defragmentUTXOStr, totalAmount;\n      console.time(\"getUTXOsToDefragment\")\n      try {\n        let result = await getUTXOsToDefragment(senderSkStr, fee, this, amount, Wallet.RpcClient);\n        console.log(\"getUTXOsToDefragment Done\");\n        defragmentUTXO = result.defragmentUTXO;\n        defragmentUTXOStr = result.defragmentUTXOStr;\n        totalAmount = result.totalAmount;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n      console.timeEnd(\"getUTXOsToDefragment\");\n      console.log(\"defragmentUTXO len: \", defragmentUTXO.length);\n      console.log(\"defragmentUTXO len: \", defragmentUTXO);\n  \n      await Wallet.updateProgressTx(40);\n  \n      // create paymentInfos\n      let paymentInfos = new Array(1);\n      paymentInfos[0] = new PaymentInfo(\n        this.key.KeySet.PaymentAddress,\n        totalAmount\n      );\n      let receiverPaymentAddrStr = new Array(1);\n      receiverPaymentAddrStr[0] = senderPaymentAddressStr;\n  \n      // init tx\n      let tx = new Tx(Wallet.RpcClient);\n      try {\n        console.time(\"Time for creating tx\");\n        await tx.init(this.key.KeySet.PrivateKey, senderPaymentAddressStr, paymentInfos,\n          defragmentUTXO, defragmentUTXOStr, fee, isPrivacy, null, null);\n        console.timeEnd(\"Time for creating tx\");\n      } catch (e) {\n        console.timeEnd(\"Time for creating tx\");\n        console.log(\"ERR when creating tx: \", e);\n        throw e;\n      }\n  \n      await Wallet.updateProgressTx(70);\n\n      let response;\n      try {\n        response = await Wallet.RpcClient.sendRawTx(tx);\n      } catch(e){\n        throw e;\n      }\n\n      await Wallet.updateProgressTx(90)\n  \n      console.log(\"SENDING CONSTANT DONE!!!!\");\n      console.timeEnd(\"Time for create and send tx\");\n  \n      // check status of tx\n      let status = FailedTx;\n      if (response.txId) {\n        tx.txId = response.txId\n        status = SuccessTx;\n  \n        response.type = tx.type;\n        response.fee = tx.fee;\n        response.lockTime = tx.lockTime;\n        response.amount = amount;\n        response.txStatus = status;\n  \n        let spendingSNs = [];\n        for (let i = 0; i < defragmentUTXO.length; i++) {\n          spendingSNs.push(defragmentUTXO[i].coinDetails.serialNumber.compress())\n        }\n        this.addSpendingCoins({ txID: response.txId, spendingSNs: spendingSNs});\n      }\n  \n      // console.log(\"Amount number when saving: \", amount.toNumber());\n      // this.saveNormalTx(tx, amount.toNumber() / 100, receiverPaymentAddrStr, null, null, null, status, false);\n      // console.log(\"history after saving: \", this.txHistory);\n  \n      // console.timeEnd(\"Saving tx history: \");\n  \n      await Wallet.updateProgressTx(100)\n  \n      return response;\n    }\n}\n\nexport { AccountWallet };\n\n\n","const PriKeyType = 0x0; // Serialize wallet account key into string with only PRIVATE KEY of account KeySet\nconst PaymentAddressType = 0x1; // Serialize wallet account key into string with only PAYMENT ADDRESS of account KeySet\nconst ReadonlyKeyType = 0x2; // Serialize wallet account key into string with only READONLY KEY of account KeySet\nconst PublicKeyType = 0x3; // Serialize wallet account key into string with only READONLY KEY of account KeySet\n\nconst PriKeySerializeSize = 71;\nconst PaymentAddrSerializeSize = 69;\nconst ReadonlyKeySerializeSize = 68;\nconst PublicKeySerializeSize = 35;\n\nconst FailedTx = 0;\nconst SuccessTx = 1;\nconst ConfirmedTx = 2;\n\n// for staking tx\n// amount in mili constant\nconst AmountStakingBeacon = 2;\nconst MetaStakingBeacon = 64;\nconst AmountStakingShard = 1;\nconst MetaStakingShard = 63;\n\nconst ShardStakingType = 0;\nconst BeaconStakingType = 1;\n\nconst MaxTxSize = 100;    // in kb\n\nconst ChildNumberSize = 4;\nconst ChainCodeSize = 32;\nconst MiliConstantUnit = 100;\n\nexport {\n  PriKeyType,\n  PaymentAddressType,\n  ReadonlyKeyType,\n  PublicKeyType,\n  PriKeySerializeSize,\n  PaymentAddrSerializeSize,\n  ReadonlyKeySerializeSize,\n  PublicKeySerializeSize,\n  FailedTx,\n  SuccessTx,\n  ConfirmedTx,\n  AmountStakingBeacon,\n  MetaStakingBeacon,\n  AmountStakingShard,\n  MetaStakingShard,\n  ShardStakingType,\n  BeaconStakingType,\n  MaxTxSize,\n  ChildNumberSize,\n  ChainCodeSize,\n  MiliConstantUnit\n};\n","import { KeySet } from '../keySet';\nimport {\n  PriKeyType,\n  PriKeySerializeSize,\n  PaymentAddressType,\n  PaymentAddrSerializeSize,\n  ReadonlyKeyType,\n  ReadonlyKeySerializeSize,\n  PublicKeyType,\n  PublicKeySerializeSize,\n  ChildNumberSize,\n  ChainCodeSize\n} from './constants';\nimport { addChecksumToBytes } from './utils';\nimport { byteToHexString } from '../common';\nimport { COMPRESS_POINT_SIZE } from 'privacy-js-lib/lib/constants';\nimport { checkEncode, checkSumFirst4Bytes, checkDecode } from '../base58';\nimport CryptoJS from \"crypto-js\";\nimport bn from \"bn.js\";\nimport { ENCODE_VERSION } from \"../constants\";\n\nclass KeyWallet {\n  constructor() {\n    this.Depth = 0;                                       // 1 byte\n    this.ChildNumber = new Uint8Array(ChildNumberSize);   // 4 bytes\n    this.ChainCode = new Uint8Array(ChainCodeSize);       // 32 bytes\n    this.KeySet = new KeySet();\n  }\n\n  fromSpendingKey(spendingKey) {\n    this.Depth = 0;                                       // 1 byte\n    this.ChildNumber = new Uint8Array(ChildNumberSize);   // 4 bytes\n    this.ChainCode = new Uint8Array(ChainCodeSize);       // 32 bytes\n    this.KeySet = new KeySet().importFromPrivateKey(spendingKey);\n    return this;\n  }\n\n  newChildKey(childIdx) {\n    let intermediary = this.getIntermediary(childIdx);\n    let newSeed = intermediary.slice(0, 32);\n    let newKeySet = new KeySet();\n    newKeySet.generateKey(newSeed);\n\n    let childKey = new KeyWallet();\n    childKey.ChildNumber = (new bn(childIdx)).toArray(\"be\", ChildNumberSize);\n    childKey.ChainCode = intermediary.slice(ChainCodeSize);\n    childKey.Depth = this.Depth + 1;\n    childKey.KeySet = newKeySet;\n    return childKey;\n  }\n\n  getIntermediary(childIdx) {\n    let childIndexBytes = (new bn(childIdx)).toArray();\n    let chainCode = this.ChainCode;\n    // HmacSHA512(data, key)\n    let hmac = CryptoJS.HmacSHA512(CryptoJS.enc.Base64.stringify(byteArrayToWordArray(chainCode)), byteArrayToWordArray(childIndexBytes));\n    let intermediary = wordArrayToByteArray(hmac)\n    return intermediary;\n  }\n\n  // Serialize a KeySet to a 78 byte byte slice\n  serialize(keyType) {\n    // Write fields to buffer in order\n    let keyBytes;\n\n    if (keyType === PriKeyType) {\n      keyBytes = new Uint8Array(PriKeySerializeSize);\n      let offset = 0;\n      keyBytes.set([keyType], offset);\n      offset += 1;\n\n      keyBytes.set([this.Depth], offset);\n      offset += 1;\n\n      keyBytes.set(this.ChildNumber, offset);\n      offset += ChildNumberSize;\n\n      keyBytes.set(this.ChainCode, offset);\n      offset += ChainCodeSize;\n\n      keyBytes.set([this.KeySet.PrivateKey.length], offset);\n      offset += 1;\n      keyBytes.set(this.KeySet.PrivateKey, offset);\n      console.log(\"Offset: \", offset);\n\n    } else if (keyType === PaymentAddressType) {\n      keyBytes = new Uint8Array(PaymentAddrSerializeSize);\n      let offset = 0;\n      keyBytes.set([keyType], offset);\n      offset += 1;\n\n      keyBytes.set([this.KeySet.PaymentAddress.Pk.length], offset);\n      offset += 1;\n      keyBytes.set(this.KeySet.PaymentAddress.Pk, offset);\n      offset += COMPRESS_POINT_SIZE;\n\n      keyBytes.set([this.KeySet.PaymentAddress.Tk.length], offset);\n      offset += 1;\n      keyBytes.set(this.KeySet.PaymentAddress.Tk, offset);\n\n    } else if (keyType === ReadonlyKeyType) {\n      keyBytes = new Uint8Array(ReadonlyKeySerializeSize);\n      let offset = 0;\n      keyBytes.set([keyType], offset);\n      offset += 1;\n\n      keyBytes.set([this.KeySet.ReadonlyKey.Pk.length], offset);\n      offset += 1;\n      keyBytes.set(this.KeySet.ReadonlyKey.Pk, offset);\n      offset += COMPRESS_POINT_SIZE;\n\n      keyBytes.set([this.KeySet.ReadonlyKey.Rk.length], offset);\n      offset += 1;\n      keyBytes.set(this.KeySet.ReadonlyKey.Rk, offset);\n    } else if (keyType === PublicKeyType) {\n      keyBytes = new Uint8Array(PublicKeySerializeSize);\n      let offset = 0;\n      keyBytes.set([keyType], offset);\n      offset += 1;\n\n      keyBytes.set([this.KeySet.PaymentAddress.Pk.length], offset);\n      offset += 1;\n      keyBytes.set(this.KeySet.PaymentAddress.Pk, offset);\n    }\n\n    // Append key bytes to the standard sha3 checksum\n    return addChecksumToBytes(keyBytes);\n  }\n\n  base58CheckSerialize(keyType) {\n    let serializedKey = this.serialize(keyType);\n    return checkEncode(serializedKey, ENCODE_VERSION);\n  }\n\n  hexSerialize(keyType) {\n    let serializedKey = this.serialize(keyType);\n    return byteToHexString(serializedKey)\n  }\n\n  getPublicKeyByHex() {\n    return byteToHexString(this.KeySet.PaymentAddress.Pk)\n  }\n\n  getPublicKeyCheckEncode() {\n    return checkEncode(this.KeySet.PaymentAddress.Pk, ENCODE_VERSION);\n  }\n\n  static deserialize(bytes) {\n    let key = new KeyWallet();\n\n    // get key type\n    let keyType = bytes[0];\n\n    if (keyType === PriKeyType) {\n      key.Depth = bytes[1];\n      key.ChildNumber = bytes.slice(2, 6);\n      key.ChainCode = bytes.slice(6, 38);\n      let keyLength = bytes[38];\n\n      key.KeySet.PrivateKey = bytes.slice(39, 39 + keyLength);\n\n    } else if (keyType === PaymentAddressType) {\n      let PublicKeyLength = bytes[1];\n      key.KeySet.PaymentAddress.Pk = bytes.slice(2, 2 + PublicKeyLength);\n\n      let TransmisionKeyLength = bytes[PublicKeyLength + 2];\n      key.KeySet.PaymentAddress.Tk = bytes.slice(PublicKeyLength + 3, PublicKeyLength + 3 + TransmisionKeyLength);\n    } else if (keyType === ReadonlyKeyType) {\n\n      let PublicKeyLength = bytes[1];\n      key.KeySet.ReadonlyKey.Pk = bytes.slice(2, 2 + PublicKeyLength);\n\n      let ReceivingKeyLength = bytes[PublicKeyLength + 2];\n      key.KeySet.ReadonlyKey.Rk = bytes.slice(PublicKeyLength + 3, PublicKeyLength + 3 + ReceivingKeyLength);\n    } else if (keyType === PublicKeyType) {\n      let PublicKeyLength = bytes[1];\n      key.KeySet.PaymentAddress.Pk = bytes.slice(2, 2 + PublicKeyLength);\n    }\n\n    // validate checksum\n    let cs1 = checkSumFirst4Bytes(bytes.slice(0, bytes.length - 4));\n    let cs2 = bytes.slice(bytes.length - 4);\n\n    if (!cs1.equals(cs2)) {\n      throw error(\"Checksum wrong!!!\")\n    } \n\n    return key;\n  }\n\n  static base58CheckDeserialize(str) {\n    let bytes;\n    try{\n      bytes = checkDecode(str).bytesDecoded;\n    } catch(e){\n      throw e;\n    }\n    \n    return this.deserialize(bytes);\n  }\n}\n\nfunction NewMasterKey(seed) {\n  // HmacSHA512(data, key)\n  let hmac = CryptoJS.HmacSHA512(CryptoJS.enc.Base64.stringify(byteArrayToWordArray(seed)), \"Constant seed\");\n  let intermediary = wordArrayToByteArray(hmac)\n  // console.log(\"Master intermediary\", intermediary)\n\n  // Split it into our PubKey and chain code\n  let keyBytes = intermediary.slice(0, 32)  // use to create master private/public keypair\n  let chainCode = intermediary.slice(32) // be used with public PubKey (in keypair) for new child keys\n  let keySet = new KeySet();\n  keySet.generateKey(keyBytes);\n\n  let keyWallet = new KeyWallet();\n  keyWallet.KeySet = keySet;\n  keyWallet.ChainCode = chainCode;\n  keyWallet.Depth = 0;\n  keyWallet.ChildNumber = new Uint8Array([0, 0, 0, 0]);\n  return keyWallet;\n}\n\nfunction wordToByteArray(word, length) {\n  var ba = [],\n    i,\n    xFF = 0xFF;\n  if (length > 0)\n    ba.push(word >>> 24);\n  if (length > 1)\n    ba.push((word >>> 16) & xFF);\n  if (length > 2)\n    ba.push((word >>> 8) & xFF);\n  if (length > 3)\n    ba.push(word & xFF);\n\n  return ba;\n}\n\nfunction wordArrayToByteArray(wordArray, length) {\n  if (wordArray.hasOwnProperty(\"sigBytes\") && wordArray.hasOwnProperty(\"words\")) {\n    length = wordArray.sigBytes;\n    wordArray = wordArray.words;\n  }\n\n  var result = [],\n    bytes,\n    i = 0;\n  while (length > 0) {\n    bytes = wordToByteArray(wordArray[i], Math.min(4, length));\n    length -= bytes.length;\n    result.push(bytes);\n    i++;\n  }\n  return [].concat.apply([], result);\n}\n\nfunction byteArrayToWordArray(ba) {\n  var wa = [],\n    i;\n  for (i = 0; i < ba.length; i++) {\n    wa[(i / 4) | 0] |= ba[i] << (24 - 8 * i);\n  }\n\n  return CryptoJS.lib.WordArray.create(wa, ba.length);\n}\n\nexport { KeyWallet, NewMasterKey, wordArrayToByteArray, wordToByteArray, byteArrayToWordArray };\n","import { FailedTx } from \"./constants\";\n\nclass TxHistoryInfo {\n    constructor() {\n      this.amount = 0;\n      this.fee = 0;\n      this.txID = \"\";\n      this.type = \"\";\n      this.receivers = [];\n      this.tokenName = \"\";\n      this.tokenID = \"\";\n      this.tokenSymbol = \"\";\n      this.isIn = null;\n      this.time = \"\"\n      this.status = FailedTx;\n      this.isPrivacy = false;\n    }\n  \n    setHistoryInfo(txID, type, amount, fee, receivers, miliseconds, isIn, isPrivacy, tokenName = '', tokenID = '', tokenSymbol = '') {\n      this.amount = amount;\n      this.fee = fee;\n      this.receivers = receivers;\n      this.txID = txID;\n      this.type = type;\n      this.time = new Date(miliseconds);\n      this.isIn = isIn;\n      this.isPrivacy = isPrivacy;\n\n      this.tokenName = tokenName;\n      this.tokenID = tokenID;\n      this.tokenSymbol = tokenSymbol;\n    }\n  \n    updateStatus(newStatus) {\n      this.status = newStatus\n    }\n}\n\nexport { TxHistoryInfo };\n  ","import { newWordList } from \"./wordlist\";\n// import randomBytes from \"random-bytes\";\nimport { hashSha3BytesToBytes, randBytes } from 'privacy-js-lib/lib/privacy_utils';\nimport bn from 'bn.js';\nimport pbkdf2 from 'pbkdf2';\nimport { Wallet } from \"./wallet\";\n\n// Some bitwise operands for working with big.Ints\nconst last11BitsMask = new bn(2047)\nconst rightShift11BitsDivider = new bn(2048)\nconst bigOne = new bn(1)\nconst bigTwo = new bn(2)\n\nlet wordList = [];\nlet wordMap = {};\n\nlet ErrEntropyLengthInvalid = new Error(\"entropy length must be [128, 256] and a multiple of 32\")\n\nfunction init() {\n  var list = newWordList(\"english\")\n  wordList = list\n  for (let i = 0; i < wordList.length; i++) {\n    wordMap[wordList[i]] = i;\n  }\n}\n\nfunction validateEntropyBitSize(bitSize) {\n  try {\n    if ((bitSize % 32) != 0 || bitSize < 128 || bitSize > 256) {\n      return ErrEntropyLengthInvalid\n    }\n  } catch (ex) {\n    return ex\n  }\n  return null\n}\n\nclass MnemonicGenerator {\n  constructor() {\n    init();\n  }\n\n  // newEntropy will create random entropy bytes\n  // so long as the requested size bitSize is an appropriate size.\n  //\n  // bitSize has to be a multiple 32 and be within the inclusive range of {128, 256}\n  newEntropy(bitSize) {\n    var err = validateEntropyBitSize(bitSize)\n    if (err != null) {\n      throw err;\n    }\n\n    // create bytes array for entropy from bitsize\n    // random byte\n    var entropy = null;\n    try {\n      if (Wallet.RandomBytesFunc){\n        Wallet.setPrivacyUtilRandomBytesFunc(Wallet.RandomBytesFunc);\n      }\n\n      try {\n        entropy = randBytes(bitSize / 8);\n      } catch(e){\n        throw e;\n      }\n      // entropy = randomBytes.sync(bitSize / 8);\n    } catch (e) {\n      throw e;\n      // console.log(e);\n      // if (Wallet.RandomBytesFunc) {\n      //   entropy = Wallet.RandomBytesFunc(bitSize / 8);\n      // } else {\n      //   throw Error(\"Can not create entropy\");\n      // }\n    }\n    return entropy;\n  }\n\n  // newMnemonic will return a string consisting of the mnemonic words for\n  // the given entropy.\n  // If the provide entropy is invalid, an error will be returned.\n  newMnemonic(entropy) {\n    let entropyBitLength = entropy.length * 8;\n    let checksumBitLength = entropyBitLength / 32\n    let sentenceLength = (entropyBitLength + checksumBitLength) / 11\n\n    let err = validateEntropyBitSize(entropyBitLength)\n    if (err != null) {\n      throw err;\n    }\n\n    // Add checksum to entropy\n    entropy = this.addChecksum(entropy)\n\n    // Break entropy up into sentenceLength chunks of 11 bits\n    // For each word AND mask the rightmost 11 bits and find the word at that index\n    // Then bitshift entropy 11 bits right and repeat\n    // Add to the last empty slot so we can work with LSBs instead of MSB\n\n    // entropy as an int so we can bitmask without worrying about bytes slices\n    let entropyInt = new bn(entropy);\n\n    // Slice to hold words in\n    let words = [];\n\n    // Throw away big int for AND masking\n    let word = new bn(0);\n\n    for (let i = sentenceLength - 1; i >= 0; i--) {\n      // Get 11 right most bits and bitshift 11 to the right for next time\n      word = entropyInt.and(last11BitsMask);\n      // console.log(word.toArray());\n      entropyInt = entropyInt.div(rightShift11BitsDivider);\n\n      // Get the bytes representing the 11 bits as a 2 byte slice\n      let wordBytes = this.padByteSlice(word.toArray(), 2);\n\n      // Convert bytes to an index and add that word to the list\n      let index = new bn(wordBytes)\n      words[i] = wordList[index]\n    }\n\n    return words.join(\" \");\n  }\n\n  padByteSlice(slice, lenght) {\n    let offset = lenght - slice.length\n    if (offset <= 0) {\n      return slice\n    }\n    let newSlice = slice.slice(offset);\n    return newSlice\n  }\n\n  // Appends to data the first (len(data) / 32)bits of the result of sha256(data)\n  // Currently only supports data up to 32 bytes\n  addChecksum(data) {\n    var hash = this.computeChecksum(data)\n    // Get first byte of sha256\n    var firstChecksumByte = hash[0]\n\n    // len() is in bytes so we divide by 4\n    var checksumBitLength = data.length / 4\n\n    // For each bit of check sum we want we shift the data one the left\n    // and then set the (new) right most bit equal to checksum bit at that index\n    // staring from the left\n    var dataBigInt = new bn(data)\n\n    for (var i = 0; i < checksumBitLength; i++) {\n      dataBigInt = dataBigInt.mul(bigTwo)\n    }\n\n    // Set rightmost bit if leftmost checksum bit is set\n    if (firstChecksumByte & (1 << (7 - i)) > 0) {\n      dataBigInt = dataBigInt.or(bigOne)\n    }\n    return dataBigInt.toArray(\"be\")\n  }\n\n  computeChecksum(data) {\n    return hashSha3BytesToBytes(data)\n  }\n\n  newSeed(mnemonic, password) {\n    return pbkdf2.pbkdf2Sync(mnemonic, \"mnemonic\" + password, 2048, 64, \"sha512\")\n  }\n}\n\nexport { MnemonicGenerator };\n","import { checkSumFirst4Bytes } from '../base58';\nimport { MiliConstantUnit } from './constants';\n\nfunction addChecksumToBytes(data) {\n  let checksum = checkSumFirst4Bytes(data);\n\n  let res = new Uint8Array(data.length + 4);\n  res.set(data, 0);\n  res.set(checksum, data.length);\n  return res;\n}\n\n/**\n * \n * @param {miliConstantAmount : number} miliConstantAmount \n */\nconst toConstant = (miliConstantAmount) => parseFloat(miliConstantAmount / MiliConstantUnit);\n\nexport  { addChecksumToBytes, toConstant };","import bn from 'bn.js';\nimport { KeyWallet, NewMasterKey } from \"./hdwallet\";\nimport { MnemonicGenerator } from \"./mnemonic\";\nimport CryptoJS from \"crypto-js\";\nimport JSON from \"circular-json\";\nimport { KeySet } from '../keySet';\nimport { PaymentAddress, ViewingKey, PaymentInfo } from '../key';\nimport { CustomTokenParamTx, TxTokenVin, TxTokenVout } from \"../tx/txcustomtokendata\";\nimport { CustomTokenPrivacyParamTx } from \"../tx/txcustomkenprivacydata\";\nimport { RpcClient } from \"../rpcclient/rpcclient\";\nimport { setRandBytesFunc } from \"privacy-js-lib/lib/privacy_utils\"\nimport {\n  FailedTx,\n  SuccessTx,\n  ConfirmedTx,\n  AmountStakingBeacon,\n  MetaStakingBeacon,\n  AmountStakingShard,\n  MetaStakingShard,\n  PaymentAddressType,\n  ReadonlyKeyType,\n  PriKeyType\n} from \"./constants\";\nimport { checkEncode } from \"../base58\";\nimport { getShardIDFromLastByte } from \"../common\";\nimport { AccountWallet } from \"./accountWallet\";\nimport { TxHistoryInfo } from \"./history\";\nimport { getEstimateFee, getEstimateFeeForSendingToken, getEstimateFeeToDefragment } from \"../tx/utils\";\n\nclass Wallet {\n  constructor() {\n    this.Seed = [];\n    this.Entropy = [];\n    this.PassPhrase = \"\";\n    this.Mnemonic = \"\";\n    this.MasterAccount = new AccountWallet();\n    this.Name = \"\";\n    this.Storage = null;\n  }\n\n  init(passPhrase, numOfAccount, name, storage, shardID = null) {\n    // generate mnenomic generator\n    let mnemonicGen = new MnemonicGenerator();\n    this.Name = name;\n    try {\n      this.Entropy = mnemonicGen.newEntropy(128);\n    } catch (e) {\n      throw e;\n    }\n\n    // mnemonic\n    this.Mnemonic = mnemonicGen.newMnemonic(this.Entropy);\n    console.log(\"Mnemonic\", this.Mnemonic);\n\n    // seed\n    this.Seed = mnemonicGen.newSeed(this.Mnemonic, passPhrase);\n\n    // passphrase\n    this.PassPhrase = passPhrase\n\n    // generate master key from seed\n    let masterKey = NewMasterKey(this.Seed);\n\n    // master account with master key\n    this.MasterAccount = new AccountWallet()\n    this.MasterAccount.key = masterKey;\n    this.MasterAccount.child = [];\n    this.MasterAccount.name = \"master\";\n\n    if (numOfAccount == 0) {\n      numOfAccount = 1;\n    }\n\n    // generate account(s)\n    if (shardID != null) {\n      // only create account for specific Shard\n      for (let i = 0; i < numOfAccount; i++) {\n        let newIndex = 0;\n        for (let j = this.MasterAccount.child.length - 1; j >= 0; j--) {\n          let temp = this.MasterAccount.child[j];\n          if (!temp.isImport) {\n            let childNumber = new bn(temp.key.ChildNumber)\n            newIndex = childNumber.toNumber() + 1\n            break;\n          }\n        }\n\n        let childKey = null;\n        while (true) {\n          childKey = this.MasterAccount.key.newChildKey(newIndex);\n          let lastByte = childKey.KeySet.PaymentAddress.Pk[childKey.KeySet.PaymentAddress.Pk.length - 1];\n          if (getShardIDFromLastByte(lastByte) == shardID) {\n            break;\n          }\n          newIndex += 1\n        }\n\n        let account = new AccountWallet();\n        account.name = \"Account \" + i;\n        account.child = [];\n        account.key = childKey;\n        this.MasterAccount.child.push(account)\n      }\n    } else {\n      // create account for any shard\n      for (let i = 0; i < numOfAccount; i++) {\n        let childKey = this.MasterAccount.key.newChildKey(i);\n        let account = new AccountWallet();\n        account.name = \"Account \" + i;\n        account.child = [];\n        account.key = childKey;\n        this.MasterAccount.child.push(account)\n      }\n    }\n\n    console.log(\"this.MasterAccount.key.KeySet.PaymentAddress after initing wallet\", this.MasterAccount.key.KeySet.PaymentAddress);\n    this.Storage = storage;\n  }\n\n  getAccountByName(accountName) {\n    return this.MasterAccount.child.find(item => item.name === accountName)\n  }\n\n  getAccountIndexByName(accountName) {\n    return this.MasterAccount.child.findIndex(item => item.name === accountName)\n  }\n\n  createNewAccount(accountName, shardID = null) {\n    if (shardID != null) {\n      // only create account for specific Shard\n      let newIndex = 0;\n      for (let j = this.MasterAccount.child.length - 1; j >= 0; j--) {\n        const temp = this.MasterAccount.child[j];\n        if (temp && !temp.isImport) {\n          let childNumber = new bn(temp.key.ChildNumber)\n          newIndex = childNumber.toNumber() + 1\n          break;\n        }\n      }\n\n      let childKey = null;\n      while (true) {\n        childKey = this.MasterAccount.key.newChildKey(newIndex);\n        let lastByte = childKey.KeySet.PaymentAddress.Pk[childKey.KeySet.PaymentAddress.Pk.length - 1];\n        if (getShardIDFromLastByte(lastByte) == shardID) {\n          break;\n        }\n        newIndex += 1;\n      }\n\n      if (accountName === \"\") {\n        accountName = \"AccountWallet \" + newIndex;\n      }\n      let accountWallet = new AccountWallet();\n      accountWallet.key = childKey;\n      accountWallet.child = [];\n      accountWallet.name = accountName;\n\n      this.MasterAccount.child.push(accountWallet);\n      this.save(this.PassPhrase);\n\n      return accountWallet;\n    } else {\n      let newIndex = this.MasterAccount.child.length;\n      let childKey = this.MasterAccount.key.newChildKey(newIndex);\n      if (accountName === \"\") {\n        accountName = \"AccountWallet \" + newIndex;\n      }\n      let accountWallet = new AccountWallet();\n      accountWallet.key = childKey;\n      accountWallet.child = [];\n      accountWallet.name = accountName;\n\n      this.MasterAccount.child.push(accountWallet);\n      this.save(this.PassPhrase);\n\n      return accountWallet;\n    }\n  }\n\n  exportAccountPrivateKey(childIndex) {\n    return this.MasterAccount.child[childIndex].key.base58CheckSerialize(PriKeyType);\n  }\n\n  exportAccountReadonlyKey(childIndex) {\n    return this.MasterAccount.child[childIndex].key.base58CheckSerialize(ReadonlyKeyType);\n  }\n\n  removeAccount(accPrivateKeyStr, passPhrase) {\n    if (passPhrase !== this.PassPhrase) {\n      throw new Error(\"Wrong passphrase\")\n    }\n\n    for (let i = 0; i < this.MasterAccount.child.length; i++) {\n      let account = this.MasterAccount.child[i];\n      if (account.key.base58CheckSerialize(PriKeyType) === accPrivateKeyStr) {\n        this.MasterAccount.child.splice(i, 1);\n        this.save(this.PassPhrase)\n        console.log(\"Wallet after remove account: \", this);\n        console.log(\"Remove account done!\");\n        return\n      }\n    }\n    throw new Error(\"Unexpected error\")\n  }\n\n  importAccount(privakeyStr, accountName, passPhrase) {\n    if (passPhrase != this.PassPhrase) {\n      throw new Error(\"Wrong passphrase\")\n    }\n\n    for (let i = 0; i < this.MasterAccount.child.length; i++) {\n      let account = this.MasterAccount.child[i];\n\n      if (account.key.base58CheckSerialize(PriKeyType) == privakeyStr) {\n        throw new Error(\"Existed account\");\n      }\n\n      if (account.name == accountName) {\n        throw new Error(\"Existed account\");\n      }\n    }\n\n    let keyWallet;\n    try {\n      keyWallet = KeyWallet.base58CheckDeserialize(privakeyStr)\n    } catch (e) {\n      throw e;\n    }\n\n    keyWallet.KeySet.importFromPrivateKey(keyWallet.KeySet.PrivateKey);\n\n    let account = new AccountWallet()\n    account.key = keyWallet;\n    account.child = [];\n    account.isImport = true;\n    account.name = accountName;\n\n    this.MasterAccount.child.push(account)\n    this.save(this.PassPhrase);\n    return account\n  }\n\n  save(password = \"\") {\n    console.log(\"Saving wallet ....\")\n    if (password == \"\") {\n      password = this.PassPhrase\n    }\n\n    // parse to byte[]\n    for (let i = 0; i < this.MasterAccount.child.length; i++) {\n      this.MasterAccount.child[i].key.ChainCode = Array.from(this.MasterAccount.child[i].key.ChainCode);\n      this.MasterAccount.child[i].key.ChildNumber = Array.from(this.MasterAccount.child[i].key.ChildNumber);\n      this.MasterAccount.child[i].key.KeySet.PrivateKey = Array.from(this.MasterAccount.child[i].key.KeySet.PrivateKey);\n      this.MasterAccount.child[i].key.KeySet.PaymentAddress.Pk = Array.from(this.MasterAccount.child[i].key.KeySet.PaymentAddress.Pk)\n      this.MasterAccount.child[i].key.KeySet.PaymentAddress.Tk = Array.from(this.MasterAccount.child[i].key.KeySet.PaymentAddress.Tk)\n      this.MasterAccount.child[i].key.KeySet.ReadonlyKey.Pk = Array.from(this.MasterAccount.child[i].key.KeySet.ReadonlyKey.Pk)\n      this.MasterAccount.child[i].key.KeySet.ReadonlyKey.Rk = Array.from(this.MasterAccount.child[i].key.KeySet.ReadonlyKey.Rk)\n    }\n\n    this.MasterAccount.key.ChainCode = Array.from(this.MasterAccount.key.ChainCode);\n    this.MasterAccount.key.ChildNumber = Array.from(this.MasterAccount.key.ChildNumber);\n    this.MasterAccount.key.KeySet.PrivateKey = Array.from(this.MasterAccount.key.KeySet.PrivateKey);\n    this.MasterAccount.key.KeySet.PaymentAddress.Pk = Array.from(this.MasterAccount.key.KeySet.PaymentAddress.Pk);\n    this.MasterAccount.key.KeySet.PaymentAddress.Tk = Array.from(this.MasterAccount.key.KeySet.PaymentAddress.Tk);\n    this.MasterAccount.key.KeySet.ReadonlyKey.Pk = Array.from(this.MasterAccount.key.KeySet.ReadonlyKey.Pk);\n    this.MasterAccount.key.KeySet.ReadonlyKey.Rk = Array.from(this.MasterAccount.key.KeySet.ReadonlyKey.Rk);\n\n    // remove cached of master account and its childs from wallet before saving wallet\n    let masterDerivatorPointCached = this.MasterAccount.derivatorPointCached;\n    this.MasterAccount.derivatorPointCached = {};\n\n    let masterInputCoinCached = this.MasterAccount.inputCoinCached;\n    this.MasterAccount.inputCoinCached = {};\n\n    let masterDerivatorJsonCached = this.MasterAccount.derivatorJsonCached;\n    this.MasterAccount.derivatorJsonCached = {};\n\n    let masterInputCoinJsonCached = this.MasterAccount.inputCoinJsonCached;\n    this.MasterAccount.inputCoinJsonCached = {};\n\n    let masterSpentCoinCached = this.MasterAccount.spentCoinCached;\n    this.MasterAccount.spentCoinCached = {};\n\n    let childDerivatorPointCacheds = new Array(this.MasterAccount.child.length);\n    let childInputCoinCacheds = new Array(this.MasterAccount.child.length);\n    let childDerivatorJsonCacheds = new Array(this.MasterAccount.child.length);\n    let childInputCoinJsonCacheds = new Array(this.MasterAccount.child.length);\n    let childSpentCoinCacheds = new Array(this.MasterAccount.child.length);\n\n    for (let i = 0; i < this.MasterAccount.child.length; i++) {\n      childDerivatorPointCacheds[i] = this.MasterAccount.child[i].derivatorPointCached;\n      childInputCoinCacheds[i] = this.MasterAccount.child[i].inputCoinCached;\n      childDerivatorJsonCacheds[i] = this.MasterAccount.child[i].derivatorJsonCached;\n      childInputCoinJsonCacheds[i] = this.MasterAccount.child[i].inputCoinJsonCached;\n      childSpentCoinCacheds[i] = this.MasterAccount.child[i].spentCoinCached;\n\n      this.MasterAccount.child[i].derivatorPointCached = {};\n      this.MasterAccount.child[i].inputCoinCached = {};\n      this.MasterAccount.child[i].derivatorJsonCached = {};\n      this.MasterAccount.child[i].inputCoinJsonCached = {};\n      this.MasterAccount.child[i].spentCoinCached = {};\n    }\n\n    for (let i = 0; i < this.MasterAccount.child.length; i++) {\n      if (this.MasterAccount.child[i].spendingCoins) {\n        for (let j = 0; j < this.MasterAccount.child[i].spendingCoins.length; j++) {\n          for (let k = 0; k < this.MasterAccount.child[i].spendingCoins[j].spendingSNs.length; k++) {\n            this.MasterAccount.child[i].spendingCoins[j].spendingSNs[k] = Array.from(this.MasterAccount.child[i].spendingCoins[j].spendingSNs[k]);\n            console.log(\"save wallet this.MasterAccount.child[i].spendingCoins[j].spendingSNs[k]:\", this.MasterAccount.child[i].spendingCoins[j].spendingSNs[k]);\n          }\n        }\n      }\n    }\n\n    let data = JSON.stringify(this);\n\n    this.MasterAccount.derivatorPointCached = masterDerivatorPointCached;\n    this.MasterAccount.inputCoinCached = masterInputCoinCached;\n    this.MasterAccount.derivatorJsonCached = masterDerivatorJsonCached;\n    this.MasterAccount.inputCoinJsonCached = masterInputCoinJsonCached;\n    this.MasterAccount.spentCoinCached = masterSpentCoinCached;\n    for (let i = 0; i < childDerivatorPointCacheds.length; i++) {\n      this.MasterAccount.child[i].derivatorPointCached = childDerivatorPointCacheds[i];\n      this.MasterAccount.child[i].inputCoinCached = childInputCoinCacheds[i];\n      this.MasterAccount.child[i].derivatorJsonCached = childDerivatorJsonCacheds[i];\n      this.MasterAccount.child[i].inputCoinJsonCached = childInputCoinJsonCacheds[i];\n      this.MasterAccount.child[i].spentCoinCached = childSpentCoinCacheds[i];\n    }\n\n    // console.log(\"Data wallet after JSON.stringify: \", data);\n    // encrypt\n    let cipherText = CryptoJS.AES.encrypt(data, password)\n\n    // storage\n    if (this.Storage != null) {\n      console.log(\"this.Storage: \", this.Storage);\n      this.Storage.setItem(\"Wallet\", cipherText.toString());\n    }\n\n    // save cached of each accounts\n    this.MasterAccount.saveAccountCached(password, this.Storage);\n    for (let i = 0; i < this.MasterAccount.child.length; i++) {\n      this.MasterAccount.child[i].saveAccountCached(password, this.Storage);\n    }\n  }\n\n  clearCached() {\n    this.MasterAccount.clearCached();\n    for (let i = 0; i < this.MasterAccount.child.length; i++) {\n      this.MasterAccount.child[i].clearCached();\n    }\n    this.save('');\n  }\n\n  async getHistoryByAccount(accName) {\n    let account = this.getAccountByName(accName);\n    return account.getNormalTx();\n  }\n\n  async loadWallet(password) {\n    if (this.Storage != null) {\n      let cipherText = await this.Storage.getItem(\"Wallet\");\n      if (!cipherText) return false;\n      let data = CryptoJS.AES.decrypt(cipherText, password);\n      let jsonStr = data.toString(CryptoJS.enc.Utf8);\n\n      try {\n        let obj = JSON.parse(jsonStr);\n        Object.setPrototypeOf(obj, Wallet.prototype);\n        Object.setPrototypeOf(obj.MasterAccount, AccountWallet.prototype);\n        Object.setPrototypeOf(obj.MasterAccount.key, KeyWallet.prototype);\n\n        console.log(\"obj.MasterAccount: \", obj.MasterAccount);\n        Object.assign(this, obj);\n\n        for (let i = 0; i < obj.MasterAccount.child.length; i++) {\n          Object.setPrototypeOf(obj.MasterAccount.child[i], AccountWallet.prototype);\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key, KeyWallet.prototype);\n\n          // chaincode\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.ChainCode, Array.prototype);\n          obj.MasterAccount.child[i].key.ChainCode = new Uint8Array(obj.MasterAccount.child[i].key.ChainCode)\n\n          // child num\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.ChildNumber, Array.prototype);\n          obj.MasterAccount.child[i].key.ChildNumber = new Uint8Array(obj.MasterAccount.child[i].key.ChildNumber)\n\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.KeySet, KeySet.prototype);\n\n          // payment address\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.KeySet.PaymentAddress, PaymentAddress.prototype);\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.KeySet.PaymentAddress.Pk, Array.prototype);\n          obj.MasterAccount.child[i].key.KeySet.PaymentAddress.Pk = new Uint8Array(obj.MasterAccount.child[i].key.KeySet.PaymentAddress.Pk);\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.KeySet.PaymentAddress.Tk, Array.prototype);\n          obj.MasterAccount.child[i].key.KeySet.PaymentAddress.Tk = new Uint8Array(obj.MasterAccount.child[i].key.KeySet.PaymentAddress.Tk);\n\n          // read only key\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.KeySet.ReadonlyKey, ViewingKey.prototype);\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.KeySet.ReadonlyKey.Pk, Array.prototype);\n          obj.MasterAccount.child[i].key.KeySet.ReadonlyKey.Pk = new Uint8Array(obj.MasterAccount.child[i].key.KeySet.ReadonlyKey.Pk);\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.KeySet.ReadonlyKey.Rk, Array.prototype);\n          obj.MasterAccount.child[i].key.KeySet.ReadonlyKey.Rk = new Uint8Array(obj.MasterAccount.child[i].key.KeySet.ReadonlyKey.Rk);\n\n          // private key\n          Object.setPrototypeOf(obj.MasterAccount.child[i].key.KeySet.PrivateKey, Array.prototype);\n          obj.MasterAccount.child[i].key.KeySet.PrivateKey = new Uint8Array(obj.MasterAccount.child[i].key.KeySet.PrivateKey);\n\n          if (obj.MasterAccount.child[i].spendingCoins) {\n            for (let j = 0; j < obj.MasterAccount.child[i].spendingCoins.length; j++) {\n              for (let k = 0; k < obj.MasterAccount.child[i].spendingCoins[j].spendingSNs.length; k++) {\n                Object.setPrototypeOf(obj.MasterAccount.child[i].spendingCoins[j].spendingSNs[k], Array.prototype);\n                obj.MasterAccount.child[i].spendingCoins[j].spendingSNs[k] = new Uint8Array(obj.MasterAccount.child[i].spendingCoins[j].spendingSNs[k]);\n              }\n            }\n          }\n        }\n\n        Object.assign(this, obj);\n      } catch (e) {\n        throw e;\n      }\n    }\n  }\n\n  async loadAccountsCached(accName = null) {\n    console.log(\"Loading account cached................................\");\n    let password = this.PassPhrase;\n\n    if (accName){\n      let account = this.getAccountByName(accName);\n      return await account.loadAccountCached(password, this.Storage);\n    }\n    \n    await this.MasterAccount.loadAccountCached(password, this.Storage);\n    for (let i = 0; i < this.MasterAccount.child.length; i++) {\n      await this.MasterAccount.child[i].loadAccountCached(password, this.Storage);\n    }\n  }\n\n  listAccount() {\n    return this.MasterAccount.child.map((child, index) => {\n      return {\n        \"AccountName\": child.name,\n        \"PrivateKey\": child.key.base58CheckSerialize(PriKeyType),\n        \"PaymentAddress\": child.key.base58CheckSerialize(PaymentAddressType),\n        \"ReadonlyKey\": child.key.base58CheckSerialize(ReadonlyKeyType),\n        \"PublicKey\": child.key.getPublicKeyByHex(),\n        \"PublicKeyCheckEncode\": child.key.getPublicKeyCheckEncode(),\n        \"PublicKeyBytes\": child.key.KeySet.PaymentAddress.Pk.toString(),\n        \"Index\": index,\n      }\n    })\n  }\n\n  async updateStatusHistory() {\n    for (let i = 0; i < this.MasterAccount.child.length; i++) {\n      if (this.MasterAccount.child[i].txHistory){\n        if (this.MasterAccount.child[i].txHistory.NormalTx){\n          for (let j = 0; j < this.MasterAccount.child[i].txHistory.NormalTx.length; j++) {\n            if (this.MasterAccount.child[i].txHistory.NormalTx[j].status == SuccessTx) {\n              let response;\n              try {\n                response = await Wallet.RpcClient.getTransactionByHash(this.MasterAccount.child[i].txHistory.NormalTx[j].txID);\n              } catch (e) {\n                throw e;\n              }\n    \n              if (response.isInBlock) {\n                this.MasterAccount.child[i].txHistory.NormalTx[j].status = ConfirmedTx;\n              }\n            }\n          }\n        }\n        \n        if (this.MasterAccount.child[i].txHistory.CustomTokenTx){\n          for (let j = 0; j < this.MasterAccount.child[i].txHistory.CustomTokenTx.length; j++) {\n            if (this.MasterAccount.child[i].txHistory.CustomTokenTx[j].status == SuccessTx) {\n              let response;\n              try {\n                response = await Wallet.RpcClient.getTransactionByHash(this.MasterAccount.child[i].txHistory.CustomTokenTx[j].txID);\n              } catch (e) {\n                throw e;\n              }\n    \n              if (response.isInBlock) {\n                this.MasterAccount.child[i].txHistory.CustomTokenTx[j].status = ConfirmedTx;\n              }\n            }\n          }\n        }\n  \n        if (this.MasterAccount.child[i].txHistory.PrivacyCustomTokenTx){\n          for (let j = 0; j < this.MasterAccount.child[i].txHistory.PrivacyCustomTokenTx.length; j++) {\n            if (this.MasterAccount.child[i].txHistory.PrivacyCustomTokenTx[j].status == SuccessTx) {\n              let response;\n              try {\n                response = await Wallet.RpcClient.getTransactionByHash(this.MasterAccount.child[i].txHistory.PrivacyCustomTokenTx[j].txID);\n              } catch (e) {\n                throw e;\n              }\n    \n              if (response.isInBlock) {\n                this.MasterAccount.child[i].txHistory.PrivacyCustomTokenTx[j].status = ConfirmedTx;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  updateSpendingList() {\n    let interval = setInterval(async () => {\n      let update = false;\n      for (let i = 0; i < this.MasterAccount.child.length; i++) {\n        if (this.MasterAccount.child[i].spendingCoins) {\n          for (let j = 0; j < this.MasterAccount.child[i].spendingCoins.length; j++) {\n            let response;\n            try {\n              response = await Wallet.RpcClient.getTransactionByHash(this.MasterAccount.child[i].spendingCoins[j].txID);\n            } catch (e) {\n              throw e;\n            }\n\n            if (response.isInBlock || (response.err != null && response.isInBlock === false && response.isInMempool === false)) {\n              this.MasterAccount.child[i].removeObjectFromSpendingCoins(this.MasterAccount.child[i].spendingCoins[j].txID);\n              update = true;\n            }\n          }\n        }\n      }\n      if (update) {\n        this.save(this.PassPhrase);\n      }\n    }, 3000);\n  }\n\n  static RpcClient = new RpcClient();\n  static RandomBytesFunc = null;\n\n  static setPrivacyUtilRandomBytesFunc(randomBytesFunc) {\n    setRandBytesFunc(randomBytesFunc);\n  }\n\n  static ProgressTx = 0;\n\n  static sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  static async updateProgressTx(progress) {\n    Wallet.ProgressTx = progress;\n    await Wallet.sleep(100);\n  }\n\n  static async resetProgressTx() {\n    await Wallet.updateProgressTx(0)\n  }\n\n  static ShardNumber = 4;\n}\n\nclass DefaultStorage {\n  constructor() {\n    this.Data = {}\n  }\n\n  async setItem(key, value) {\n    this.Data[key] = value\n    return Promise.resolve()\n  }\n\n  async getItem(key) {\n    return this.Data[key];\n  }\n}\n\nexport {\n  Wallet, AccountWallet, DefaultStorage, TxHistoryInfo,\n  RpcClient, CustomTokenParamTx, CustomTokenPrivacyParamTx, PaymentInfo, KeyWallet, TxTokenVin, TxTokenVout,\n  FailedTx,\n  SuccessTx,\n  ConfirmedTx,\n  AmountStakingBeacon,\n  MetaStakingBeacon,\n  AmountStakingShard,\n  MetaStakingShard,\n  checkEncode,\n  getEstimateFee, getEstimateFeeForSendingToken, getEstimateFeeToDefragment\n}\n","function newWordList(language) {\n  var englishWords = english.split(\"\\n\")\n  return englishWords\n}\n\nlet english = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nChild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nPubKey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nSeed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\n\ttypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`\n\nexport  {newWordList};","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\n    var data = config.data;\n    var headers = config.headers;\n    var timer;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = new Buffer(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = new Buffer(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var parsed = url.parse(config.url);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttps = protocol === 'https:';\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method,\n      headers: headers,\n      agent: agent,\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        proxy = {\n          host: parsedProxyUrl.hostname,\n          port: parsedProxyUrl.port\n        };\n\n        if (parsedProxyUrl.auth) {\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n          proxy.auth = {\n            username: proxyUrlAuth[0],\n            password: proxyUrlAuth[1]\n          };\n        }\n      }\n    }\n\n    if (proxy) {\n      options.hostname = proxy.host;\n      options.host = proxy.host;\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      options.port = proxy.port;\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\n\n      // Basic proxy authorization\n      if (proxy.auth) {\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n      }\n    }\n\n    var transport;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttps ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttps ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxContentLength && config.maxContentLength > -1) {\n      options.maxBodyLength = config.maxContentLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // Response has been received so kill timer that handles request timeout\n      clearTimeout(timer);\n      timer = null;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n      switch (res.headers['content-encoding']) {\n      /*eslint default-case:0*/\n      case 'gzip':\n      case 'compress':\n      case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n        stream = stream.pipe(zlib.createUnzip());\n\n        // remove the content-encoding in order to not confuse downstream operations\n        delete res.headers['content-encoding'];\n        break;\n      }\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString('utf8');\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted) return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout && !timer) {\n      timer = setTimeout(function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      }, config.timeout);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","/*!\nCopyright (C) 2013-2017 by Andrea Giammarchi - @WebReflection\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\nvar\n  // should be a not so common char\n  // possibly one JSON does not encode\n  // possibly one encodeURIComponent does not encode\n  // right now this char is '~' but this might change in the future\n  specialChar = '~',\n  safeSpecialChar = '\\\\x' + (\n    '0' + specialChar.charCodeAt(0).toString(16)\n  ).slice(-2),\n  escapedSafeSpecialChar = '\\\\' + safeSpecialChar,\n  specialCharRG = new RegExp(safeSpecialChar, 'g'),\n  safeSpecialCharRG = new RegExp(escapedSafeSpecialChar, 'g'),\n\n  safeStartWithSpecialCharRG = new RegExp('(?:^|([^\\\\\\\\]))' + escapedSafeSpecialChar),\n\n  indexOf = [].indexOf || function(v){\n    for(var i=this.length;i--&&this[i]!==v;);\n    return i;\n  },\n  $String = String  // there's no way to drop warnings in JSHint\n                    // about new String ... well, I need that here!\n                    // faked, and happy linter!\n;\n\nfunction generateReplacer(value, replacer, resolve) {\n  var\n    doNotIgnore = false,\n    inspect = !!replacer,\n    path = [],\n    all  = [value],\n    seen = [value],\n    mapp = [resolve ? specialChar : '[Circular]'],\n    last = value,\n    lvl  = 1,\n    i, fn\n  ;\n  if (inspect) {\n    fn = typeof replacer === 'object' ?\n      function (key, value) {\n        return key !== '' && replacer.indexOf(key) < 0 ? void 0 : value;\n      } :\n      replacer;\n  }\n  return function(key, value) {\n    // the replacer has rights to decide\n    // if a new object should be returned\n    // or if there's some key to drop\n    // let's call it here rather than \"too late\"\n    if (inspect) value = fn.call(this, key, value);\n\n    // first pass should be ignored, since it's just the initial object\n    if (doNotIgnore) {\n      if (last !== this) {\n        i = lvl - indexOf.call(all, this) - 1;\n        lvl -= i;\n        all.splice(lvl, all.length);\n        path.splice(lvl - 1, path.length);\n        last = this;\n      }\n      // console.log(lvl, key, path);\n      if (typeof value === 'object' && value) {\n    \t// if object isn't referring to parent object, add to the\n        // object path stack. Otherwise it is already there.\n        if (indexOf.call(all, value) < 0) {\n          all.push(last = value);\n        }\n        lvl = all.length;\n        i = indexOf.call(seen, value);\n        if (i < 0) {\n          i = seen.push(value) - 1;\n          if (resolve) {\n            // key cannot contain specialChar but could be not a string\n            path.push(('' + key).replace(specialCharRG, safeSpecialChar));\n            mapp[i] = specialChar + path.join(specialChar);\n          } else {\n            mapp[i] = mapp[0];\n          }\n        } else {\n          value = mapp[i];\n        }\n      } else {\n        if (typeof value === 'string' && resolve) {\n          // ensure no special char involved on deserialization\n          // in this case only first char is important\n          // no need to replace all value (better performance)\n          value = value .replace(safeSpecialChar, escapedSafeSpecialChar)\n                        .replace(specialChar, safeSpecialChar);\n        }\n      }\n    } else {\n      doNotIgnore = true;\n    }\n    return value;\n  };\n}\n\nfunction retrieveFromPath(current, keys) {\n  for(var i = 0, length = keys.length; i < length; current = current[\n    // keys should be normalized back here\n    keys[i++].replace(safeSpecialCharRG, specialChar)\n  ]);\n  return current;\n}\n\nfunction generateReviver(reviver) {\n  return function(key, value) {\n    var isString = typeof value === 'string';\n    if (isString && value.charAt(0) === specialChar) {\n      return new $String(value.slice(1));\n    }\n    if (key === '') value = regenerate(value, value, {});\n    // again, only one needed, do not use the RegExp for this replacement\n    // only keys need the RegExp\n    if (isString) value = value .replace(safeStartWithSpecialCharRG, '$1' + specialChar)\n                                .replace(escapedSafeSpecialChar, safeSpecialChar);\n    return reviver ? reviver.call(this, key, value) : value;\n  };\n}\n\nfunction regenerateArray(root, current, retrieve) {\n  for (var i = 0, length = current.length; i < length; i++) {\n    current[i] = regenerate(root, current[i], retrieve);\n  }\n  return current;\n}\n\nfunction regenerateObject(root, current, retrieve) {\n  for (var key in current) {\n    if (current.hasOwnProperty(key)) {\n      current[key] = regenerate(root, current[key], retrieve);\n    }\n  }\n  return current;\n}\n\nfunction regenerate(root, current, retrieve) {\n  return current instanceof Array ?\n    // fast Array reconstruction\n    regenerateArray(root, current, retrieve) :\n    (\n      current instanceof $String ?\n        (\n          // root is an empty string\n          current.length ?\n            (\n              retrieve.hasOwnProperty(current) ?\n                retrieve[current] :\n                retrieve[current] = retrieveFromPath(\n                  root, current.split(specialChar)\n                )\n            ) :\n            root\n        ) :\n        (\n          current instanceof Object ?\n            // dedicated Object parser\n            regenerateObject(root, current, retrieve) :\n            // value as it is\n            current\n        )\n    )\n  ;\n}\n\nvar CircularJSON = {\n  stringify: function stringify(value, replacer, space, doNotResolve) {\n    return CircularJSON.parser.stringify(\n      value,\n      generateReplacer(value, replacer, !doNotResolve),\n      space\n    );\n  },\n  parse: function parse(text, reviver) {\n    return CircularJSON.parser.parse(\n      text,\n      generateReviver(reviver)\n    );\n  },\n  // A parser should be an API 1:1 compatible with JSON\n  // it should expose stringify and parse methods.\n  // The default parser is the native JSON.\n  parser: JSON\n};\n\nmodule.exports = CircularJSON;\n","module.exports = require('crypto').createHmac\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                var block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                var block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                var modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                var modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                var wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                var block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            var keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            var keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t            i--;\n\t        }\n\t        data.sigBytes = i + 1;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    var Wil = gamma0l + Wi7l;\n\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + gamma1l;\n\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + Wi16l;\n\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\n\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\n\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curve = require('../curve');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new elliptic.curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new elliptic.curve.edwards(options);\n  else\n    this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/encoding/lib sync recursive\";","'use strict';\n\nvar iconvLite = require('iconv-lite');\n// Load Iconv from an external file to be able to disable Iconv for webpack\n// Add /\\/iconv-loader$/ to webpack.IgnorePlugin to ignore it\nvar Iconv = require('./iconv-loader');\n\n// Expose to the world\nmodule.exports.convert = convert;\n\n/**\n * Convert encoding of an UTF-8 string or a buffer\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @param {Boolean} useLite If set to ture, force to use iconvLite\n * @return {Buffer} Encoded string\n */\nfunction convert(str, to, from, useLite) {\n    from = checkEncoding(from || 'UTF-8');\n    to = checkEncoding(to || 'UTF-8');\n    str = str || '';\n\n    var result;\n\n    if (from !== 'UTF-8' && typeof str === 'string') {\n        str = new Buffer(str, 'binary');\n    }\n\n    if (from === to) {\n        if (typeof str === 'string') {\n            result = new Buffer(str);\n        } else {\n            result = str;\n        }\n    } else if (Iconv && !useLite) {\n        try {\n            result = convertIconv(str, to, from);\n        } catch (E) {\n            console.error(E);\n            try {\n                result = convertIconvLite(str, to, from);\n            } catch (E) {\n                console.error(E);\n                result = str;\n            }\n        }\n    } else {\n        try {\n            result = convertIconvLite(str, to, from);\n        } catch (E) {\n            console.error(E);\n            result = str;\n        }\n    }\n\n\n    if (typeof result === 'string') {\n        result = new Buffer(result, 'utf-8');\n    }\n\n    return result;\n}\n\n/**\n * Convert encoding of a string with node-iconv (if available)\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convertIconv(str, to, from) {\n    var response, iconv;\n    iconv = new Iconv(from, to + '//TRANSLIT//IGNORE');\n    response = iconv.convert(str);\n    return response.slice(0, response.length);\n}\n\n/**\n * Convert encoding of astring with iconv-lite\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convertIconvLite(str, to, from) {\n    if (to === 'UTF-8') {\n        return iconvLite.decode(str, from);\n    } else if (from === 'UTF-8') {\n        return iconvLite.encode(str, to);\n    } else {\n        return iconvLite.encode(iconvLite.decode(str, from), to);\n    }\n}\n\n/**\n * Converts charset name if needed\n *\n * @param {String} name Character set\n * @return {String} Character set name\n */\nfunction checkEncoding(name) {\n    return (name || '').toString().trim().\n    replace(/^latin[\\-_]?(\\d+)$/i, 'ISO-8859-$1').\n    replace(/^win(?:dows)?[\\-_]?(\\d+)$/i, 'WINDOWS-$1').\n    replace(/^utf[\\-_]?(\\d+)$/i, 'UTF-$1').\n    replace(/^ks_c_5601\\-1987$/i, 'CP949').\n    replace(/^us[\\-_]?ascii$/i, 'ASCII').\n    toUpperCase();\n}\n","'use strict';\n\nvar iconv_package;\nvar Iconv;\n\ntry {\n    // this is to fool browserify so it doesn't try (in vain) to install iconv.\n    iconv_package = 'iconv';\n    Iconv = require(iconv_package).Iconv;\n} catch (E) {\n    // node-iconv not present\n}\n\nmodule.exports = Iconv;\n","var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar assert = require(\"assert\");\nvar Writable = require(\"stream\").Writable;\nvar debug = require(\"debug\")(\"follow-redirects\");\n\n// RFC7231§4.2.1: Of the request methods defined by this specification,\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\n\n// Create handlers that pass events from native requests\nvar eventHandlers = Object.create(null);\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\n  eventHandlers[event] = function (arg) {\n    this._redirectable.emit(event, arg);\n  };\n});\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  options.headers = options.headers || {};\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new Error(\"write after end\");\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new Error(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  if (callback) {\n    this.once(\"timeout\", callback);\n  }\n\n  if (this.socket) {\n    startTimer(this, msecs);\n  }\n  else {\n    var self = this;\n    this._currentRequest.once(\"socket\", function () {\n      startTimer(self, msecs);\n    });\n  }\n\n  this.once(\"response\", clearTimer);\n  this.once(\"error\", clearTimer);\n\n  return this;\n};\n\nfunction startTimer(request, msecs) {\n  clearTimeout(request._timeout);\n  request._timeout = setTimeout(function () {\n    request.emit(\"timeout\");\n  }, msecs);\n}\n\nfunction clearTimer() {\n  clearTimeout(this._timeout);\n}\n\n// Proxy all other public ClientRequest methods\n[\n  \"abort\", \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new Error(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var event in eventHandlers) {\n    /* istanbul ignore else */\n    if (event) {\n      request.on(event, eventHandlers[event]);\n    }\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: response.statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      response.statusCode >= 300 && response.statusCode < 400) {\n    // Abort the current request\n    this._currentRequest.removeAllListeners();\n    this._currentRequest.on(\"error\", noop);\n    this._currentRequest.abort();\n\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe […],\n    // since the user might not wish to redirect an unsafe request.\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\n    // that the target resource resides temporarily under a different URI\n    // and the user agent MUST NOT change the request method\n    // if it performs an automatic redirection to that URI.\n    var header;\n    var headers = this._options.headers;\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      for (header in headers) {\n        if (/^content-/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    if (!this._isRedirect) {\n      for (header in headers) {\n        if (/^host$/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Perform the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    Object.assign(this._options, url.parse(redirectUrl));\n    this._isRedirect = true;\n    this._performRequest();\n\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    wrappedProtocol.request = function (input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    };\n\n    // Executes a GET request, following redirects\n    wrappedProtocol.get = function (input, options, callback) {\n      var request = wrappedProtocol.request(input, options, callback);\n      request.end();\n      return request;\n    };\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","\"use strict\";\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).replace(/\\s*\\n\\s*/g, ' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst g = global || window || self;\nif (!g.__gobridge__) {\n    g.__gobridge__ = {};\n}\nconst bridge = g.__gobridge__;\nfunction sleep() {\n    return new Promise(resolve => setTimeout(resolve, 1000));\n}\nfunction default_1(getBytes) {\n    let ready = false;\n    async function init() {\n        const go = new g.Go();\n        let bytes = await getBytes;\n        let result = await WebAssembly.instantiate(bytes, go.importObject);\n        go.run(result.instance);\n        ready = true;\n    }\n    init();\n    let proxy = new Proxy({}, {\n        get: (_, key) => {\n            return (...args) => {\n                return new Promise(async (resolve, reject) => {\n                    let run = () => {\n                        let cb = (err, ...msg) => (err ? reject(err) : resolve(...msg));\n                        bridge[key].apply(undefined, [...args, cb]);\n                    };\n                    while (!ready) {\n                        await sleep();\n                    }\n                    if (!(key in bridge)) {\n                        reject(`There is nothing defined with the name \"${key.toString()}\"`);\n                        return;\n                    }\n                    if (typeof bridge[key] !== 'function') {\n                        resolve(bridge[key]);\n                        return;\n                    }\n                    run();\n                });\n            };\n        }\n    });\n    return proxy;\n}\nexports.default = default_1;\n//# sourceMappingURL=gobridge.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/golang-wasm-async-loader/lib sync recursive\";","// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n(() => {\n  if (typeof global !== \"undefined\") {\n    // global already exists\n  } else if (typeof window !== \"undefined\") {\n    window.global = window;\n  } else if (typeof self !== \"undefined\") {\n    self.global = self;\n  } else {\n    throw new Error(\"cannot export Go (neither global, window nor self is defined)\");\n  }\n\n  // Map web browser API and Node.js API to a single common API (preferring web standards over Node.js API).\n  const isNodeJS = global.process && global.process.title.indexOf(\"node\") >= 0;\n  if (isNodeJS) {\n    global.require = require;\n    global.fs = require(\"fs\");\n\n    const nodeCrypto = require(\"crypto\");\n    global.crypto = {\n      getRandomValues(b) {\n        nodeCrypto.randomFillSync(b);\n      },\n    };\n\n    global.performance = {\n      now() {\n        const [sec, nsec] = process.hrtime();\n        return sec * 1000 + nsec / 1000000;\n      },\n    };\n\n    const util = require(\"util\");\n    global.TextEncoder = util.TextEncoder;\n    global.TextDecoder = util.TextDecoder;\n  } else {\n    let outputBuf = \"\";\n    global.fs = {\n      constants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n      writeSync(fd, buf) {\n        outputBuf += decoder.decode(buf);\n        const nl = outputBuf.lastIndexOf(\"\\n\");\n        if (nl != -1) {\n          console.log(outputBuf.substr(0, nl));\n          outputBuf = outputBuf.substr(nl + 1);\n        }\n        return buf.length;\n      },\n      write(fd, buf, offset, length, position, callback) {\n        if (offset !== 0 || length !== buf.length || position !== null) {\n          throw new Error(\"not implemented\");\n        }\n        const n = this.writeSync(fd, buf);\n        callback(null, n);\n      },\n      open(path, flags, mode, callback) {\n        const err = new Error(\"not implemented\");\n        err.code = \"ENOSYS\";\n        callback(err);\n      },\n      read(fd, buffer, offset, length, position, callback) {\n        const err = new Error(\"not implemented\");\n        err.code = \"ENOSYS\";\n        callback(err);\n      },\n      fsync(fd, callback) {\n        callback(null);\n      },\n    };\n  }\n\n  const encoder = new TextEncoder(\"utf-8\");\n  const decoder = new TextDecoder(\"utf-8\");\n\n  global.Go = class {\n    constructor() {\n      this.argv = [\"js\"];\n      this.env = {};\n      this.exit = (code) => {\n        if (code !== 0) {\n          console.warn(\"exit code:\", code);\n        }\n      };\n      this._exitPromise = new Promise((resolve) => {\n        this._resolveExitPromise = resolve;\n      });\n      this._pendingEvent = null;\n      this._scheduledTimeouts = new Map();\n      this._nextCallbackTimeoutID = 1;\n\n      const mem = () => {\n        // The buffer may change when requesting more memory.\n        return new DataView(this._inst.exports.mem.buffer);\n      }\n\n      const setInt64 = (addr, v) => {\n        mem().setUint32(addr + 0, v, true);\n        mem().setUint32(addr + 4, Math.floor(v / 4294967296), true);\n      }\n\n      const getInt64 = (addr) => {\n        const low = mem().getUint32(addr + 0, true);\n        const high = mem().getInt32(addr + 4, true);\n        return low + high * 4294967296;\n      }\n\n      const loadValue = (addr) => {\n        const f = mem().getFloat64(addr, true);\n        if (f === 0) {\n          return undefined;\n        }\n        if (!isNaN(f)) {\n          return f;\n        }\n\n        const id = mem().getUint32(addr, true);\n        return this._values[id];\n      }\n\n      const storeValue = (addr, v) => {\n        const nanHead = 0x7FF80000;\n\n        if (typeof v === \"number\") {\n          if (isNaN(v)) {\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 0, true);\n            return;\n          }\n          if (v === 0) {\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 1, true);\n            return;\n          }\n          mem().setFloat64(addr, v, true);\n          return;\n        }\n\n        switch (v) {\n          case undefined:\n            mem().setFloat64(addr, 0, true);\n            return;\n          case null:\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 2, true);\n            return;\n          case true:\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 3, true);\n            return;\n          case false:\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 4, true);\n            return;\n        }\n\n        let ref = this._refs.get(v);\n        if (ref === undefined) {\n          ref = this._values.length;\n          this._values.push(v);\n          this._refs.set(v, ref);\n        }\n        let typeFlag = 0;\n        switch (typeof v) {\n          case \"string\":\n            typeFlag = 1;\n            break;\n          case \"symbol\":\n            typeFlag = 2;\n            break;\n          case \"function\":\n            typeFlag = 3;\n            break;\n        }\n        mem().setUint32(addr + 4, nanHead | typeFlag, true);\n        mem().setUint32(addr, ref, true);\n      }\n\n      const loadSlice = (addr) => {\n        const array = getInt64(addr + 0);\n        const len = getInt64(addr + 8);\n        return new Uint8Array(this._inst.exports.mem.buffer, array, len);\n      }\n\n      const loadSliceOfValues = (addr) => {\n        const array = getInt64(addr + 0);\n        const len = getInt64(addr + 8);\n        const a = new Array(len);\n        for (let i = 0; i < len; i++) {\n          a[i] = loadValue(array + i * 8);\n        }\n        return a;\n      }\n\n      const loadString = (addr) => {\n        const saddr = getInt64(addr + 0);\n        const len = getInt64(addr + 8);\n        return decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n      }\n\n      const timeOrigin = Date.now() - performance.now();\n      this.importObject = {\n        go: {\n          // Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n          // may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n          // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n          // This changes the SP, thus we have to update the SP used by the imported function.\n\n          // func wasmExit(code int32)\n          \"runtime.wasmExit\": (sp) => {\n            const code = mem().getInt32(sp + 8, true);\n            this.exited = true;\n            delete this._inst;\n            delete this._values;\n            delete this._refs;\n            this.exit(code);\n          },\n\n          // func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n          \"runtime.wasmWrite\": (sp) => {\n            const fd = getInt64(sp + 8);\n            const p = getInt64(sp + 16);\n            const n = mem().getInt32(sp + 24, true);\n            fs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n          },\n\n          // func nanotime() int64\n          \"runtime.nanotime\": (sp) => {\n            setInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n          },\n\n          // func walltime() (sec int64, nsec int32)\n          \"runtime.walltime\": (sp) => {\n            const msec = (new Date).getTime();\n            setInt64(sp + 8, msec / 1000);\n            mem().setInt32(sp + 16, (msec % 1000) * 1000000, true);\n          },\n\n          // func scheduleTimeoutEvent(delay int64) int32\n          \"runtime.scheduleTimeoutEvent\": (sp) => {\n            const id = this._nextCallbackTimeoutID;\n            this._nextCallbackTimeoutID++;\n            this._scheduledTimeouts.set(id, setTimeout(\n              () => { this._resume(); },\n              getInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n            ));\n            mem().setInt32(sp + 16, id, true);\n          },\n\n          // func clearTimeoutEvent(id int32)\n          \"runtime.clearTimeoutEvent\": (sp) => {\n            const id = mem().getInt32(sp + 8, true);\n            clearTimeout(this._scheduledTimeouts.get(id));\n            this._scheduledTimeouts.delete(id);\n          },\n\n          // func getRandomData(r []byte)\n          \"runtime.getRandomData\": (sp) => {\n            crypto.getRandomValues(loadSlice(sp + 8));\n          },\n\n          // func stringVal(value string) ref\n          \"syscall/js.stringVal\": (sp) => {\n            storeValue(sp + 24, loadString(sp + 8));\n          },\n\n          // func valueGet(v ref, p string) ref\n          \"syscall/js.valueGet\": (sp) => {\n            const result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n            sp = this._inst.exports.getsp(); // see comment above\n            storeValue(sp + 32, result);\n          },\n\n          // func valueSet(v ref, p string, x ref)\n          \"syscall/js.valueSet\": (sp) => {\n            Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n          },\n\n          // func valueIndex(v ref, i int) ref\n          \"syscall/js.valueIndex\": (sp) => {\n            storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n          },\n\n          // valueSetIndex(v ref, i int, x ref)\n          \"syscall/js.valueSetIndex\": (sp) => {\n            Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n          },\n\n          // func valueCall(v ref, m string, args []ref) (ref, bool)\n          \"syscall/js.valueCall\": (sp) => {\n            try {\n              const v = loadValue(sp + 8);\n              const m = Reflect.get(v, loadString(sp + 16));\n              const args = loadSliceOfValues(sp + 32);\n              const result = Reflect.apply(m, v, args);\n              sp = this._inst.exports.getsp(); // see comment above\n              storeValue(sp + 56, result);\n              mem().setUint8(sp + 64, 1);\n            } catch (err) {\n              storeValue(sp + 56, err);\n              mem().setUint8(sp + 64, 0);\n            }\n          },\n\n          // func valueInvoke(v ref, args []ref) (ref, bool)\n          \"syscall/js.valueInvoke\": (sp) => {\n            try {\n              const v = loadValue(sp + 8);\n              const args = loadSliceOfValues(sp + 16);\n              const result = Reflect.apply(v, undefined, args);\n              sp = this._inst.exports.getsp(); // see comment above\n              storeValue(sp + 40, result);\n              mem().setUint8(sp + 48, 1);\n            } catch (err) {\n              storeValue(sp + 40, err);\n              mem().setUint8(sp + 48, 0);\n            }\n          },\n\n          // func valueNew(v ref, args []ref) (ref, bool)\n          \"syscall/js.valueNew\": (sp) => {\n            try {\n              const v = loadValue(sp + 8);\n              const args = loadSliceOfValues(sp + 16);\n              const result = Reflect.construct(v, args);\n              sp = this._inst.exports.getsp(); // see comment above\n              storeValue(sp + 40, result);\n              mem().setUint8(sp + 48, 1);\n            } catch (err) {\n              storeValue(sp + 40, err);\n              mem().setUint8(sp + 48, 0);\n            }\n          },\n\n          // func valueLength(v ref) int\n          \"syscall/js.valueLength\": (sp) => {\n            setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n          },\n\n          // valuePrepareString(v ref) (ref, int)\n          \"syscall/js.valuePrepareString\": (sp) => {\n            const str = encoder.encode(String(loadValue(sp + 8)));\n            storeValue(sp + 16, str);\n            setInt64(sp + 24, str.length);\n          },\n\n          // valueLoadString(v ref, b []byte)\n          \"syscall/js.valueLoadString\": (sp) => {\n            const str = loadValue(sp + 8);\n            loadSlice(sp + 16).set(str);\n          },\n\n          // func valueInstanceOf(v ref, t ref) bool\n          \"syscall/js.valueInstanceOf\": (sp) => {\n            mem().setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16));\n          },\n\n          \"debug\": (value) => {\n            console.log(value);\n          },\n        }\n      };\n    }\n\n    async run(instance) {\n      this._inst = instance;\n      this._values = [ // TODO: garbage collection\n        NaN,\n        0,\n        null,\n        true,\n        false,\n        global,\n        this._inst.exports.mem,\n        this,\n      ];\n      this._refs = new Map();\n      this.exited = false;\n\n      const mem = new DataView(this._inst.exports.mem.buffer)\n\n      // Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n      let offset = 4096;\n\n      const strPtr = (str) => {\n        let ptr = offset;\n        new Uint8Array(mem.buffer, offset, str.length + 1).set(encoder.encode(str + \"\\0\"));\n        offset += str.length + (8 - (str.length % 8));\n        return ptr;\n      };\n\n      const argc = this.argv.length;\n\n      const argvPtrs = [];\n      this.argv.forEach((arg) => {\n        argvPtrs.push(strPtr(arg));\n      });\n\n      const keys = Object.keys(this.env).sort();\n      argvPtrs.push(keys.length);\n      keys.forEach((key) => {\n        argvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n      });\n\n      const argv = offset;\n      argvPtrs.forEach((ptr) => {\n        mem.setUint32(offset, ptr, true);\n        mem.setUint32(offset + 4, 0, true);\n        offset += 8;\n      });\n\n      this._inst.exports.run(argc, argv);\n      if (this.exited) {\n        this._resolveExitPromise();\n      }\n      await this._exitPromise;\n    }\n\n    _resume() {\n      if (this.exited) {\n        throw new Error(\"Go program has already exited\");\n      }\n      this._inst.exports.resume();\n      if (this.exited) {\n        this._resolveExitPromise();\n      }\n    }\n\n    _makeFuncWrapper(id) {\n      const go = this;\n      return function () {\n        const event = { id: id, this: this, args: arguments };\n        go._pendingEvent = event;\n        go._resume();\n        return event.result;\n      };\n    }\n  }\n})();","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar isStream = module.exports = function (stream) {\n\treturn stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function';\n};\n\nisStream.writable = function (stream) {\n\treturn isStream(stream) && stream.writable !== false && typeof stream._write === 'function' && typeof stream._writableState === 'object';\n};\n\nisStream.readable = function (stream) {\n\treturn isStream(stream) && stream.readable !== false && typeof stream._read === 'function' && typeof stream._readableState === 'object';\n};\n\nisStream.duplex = function (stream) {\n\treturn isStream.writable(stream) && isStream.readable(stream);\n};\n\nisStream.transform = function (stream) {\n\treturn isStream.duplex(stream) && typeof stream._transform === 'function' && typeof stream._transformState === 'object';\n};\n","\"use strict\";\n\nvar realFetch = require('node-fetch');\nmodule.exports = function(url, options) {\n\tif (/^\\/\\//.test(url)) {\n\t\turl = 'https:' + url;\n\t}\n\treturn realFetch.call(this, url, options);\n};\n\nif (!global.fetch) {\n\tglobal.fetch = module.exports;\n\tglobal.Response = realFetch.Response;\n\tglobal.Headers = realFetch.Headers;\n\tglobal.Request = realFetch.Request;\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * index.js\n *\n * a request API compatible with window.fetch\n */\n\nvar parse_url = require('url').parse;\nvar resolve_url = require('url').resolve;\nvar http = require('http');\nvar https = require('https');\nvar zlib = require('zlib');\nvar stream = require('stream');\n\nvar Body = require('./lib/body');\nvar Response = require('./lib/response');\nvar Headers = require('./lib/headers');\nvar Request = require('./lib/request');\nvar FetchError = require('./lib/fetch-error');\n\n// commonjs\nmodule.exports = Fetch;\n// es6 default export compatibility\nmodule.exports.default = module.exports;\n\n/**\n * Fetch class\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction Fetch(url, opts) {\n\n\t// allow call as function\n\tif (!(this instanceof Fetch))\n\t\treturn new Fetch(url, opts);\n\n\t// allow custom promise\n\tif (!Fetch.Promise) {\n\t\tthrow new Error('native promise missing, set Fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = Fetch.Promise;\n\n\tvar self = this;\n\n\t// wrap http.request into fetch\n\treturn new Fetch.Promise(function(resolve, reject) {\n\t\t// build request object\n\t\tvar options = new Request(url, opts);\n\n\t\tif (!options.protocol || !options.hostname) {\n\t\t\tthrow new Error('only absolute urls are supported');\n\t\t}\n\n\t\tif (options.protocol !== 'http:' && options.protocol !== 'https:') {\n\t\t\tthrow new Error('only http(s) protocols are supported');\n\t\t}\n\n\t\tvar send;\n\t\tif (options.protocol === 'https:') {\n\t\t\tsend = https.request;\n\t\t} else {\n\t\t\tsend = http.request;\n\t\t}\n\n\t\t// normalize headers\n\t\tvar headers = new Headers(options.headers);\n\n\t\tif (options.compress) {\n\t\t\theaders.set('accept-encoding', 'gzip,deflate');\n\t\t}\n\n\t\tif (!headers.has('user-agent')) {\n\t\t\theaders.set('user-agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t\t}\n\n\t\tif (!headers.has('connection') && !options.agent) {\n\t\t\theaders.set('connection', 'close');\n\t\t}\n\n\t\tif (!headers.has('accept')) {\n\t\t\theaders.set('accept', '*/*');\n\t\t}\n\n\t\t// detect form data input from form-data module, this hack avoid the need to pass multipart header manually\n\t\tif (!headers.has('content-type') && options.body && typeof options.body.getBoundary === 'function') {\n\t\t\theaders.set('content-type', 'multipart/form-data; boundary=' + options.body.getBoundary());\n\t\t}\n\n\t\t// bring node-fetch closer to browser behavior by setting content-length automatically\n\t\tif (!headers.has('content-length') && /post|put|patch|delete/i.test(options.method)) {\n\t\t\tif (typeof options.body === 'string') {\n\t\t\t\theaders.set('content-length', Buffer.byteLength(options.body));\n\t\t\t// detect form data input from form-data module, this hack avoid the need to add content-length header manually\n\t\t\t} else if (options.body && typeof options.body.getLengthSync === 'function') {\n\t\t\t\t// for form-data 1.x\n\t\t\t\tif (options.body._lengthRetrievers && options.body._lengthRetrievers.length == 0) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t// for form-data 2.x\n\t\t\t\t} else if (options.body.hasKnownLength && options.body.hasKnownLength()) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t}\n\t\t\t// this is only necessary for older nodejs releases (before iojs merge)\n\t\t\t} else if (options.body === undefined || options.body === null) {\n\t\t\t\theaders.set('content-length', '0');\n\t\t\t}\n\t\t}\n\n\t\toptions.headers = headers.raw();\n\n\t\t// http.request only support string as host header, this hack make custom host header possible\n\t\tif (options.headers.host) {\n\t\t\toptions.headers.host = options.headers.host[0];\n\t\t}\n\n\t\t// send request\n\t\tvar req = send(options);\n\t\tvar reqTimeout;\n\n\t\tif (options.timeout) {\n\t\t\treq.once('socket', function(socket) {\n\t\t\t\treqTimeout = setTimeout(function() {\n\t\t\t\t\treq.abort();\n\t\t\t\t\treject(new FetchError('network timeout at: ' + options.url, 'request-timeout'));\n\t\t\t\t}, options.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function(err) {\n\t\t\tclearTimeout(reqTimeout);\n\t\t\treject(new FetchError('request to ' + options.url + ' failed, reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\treq.on('response', function(res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\t// handle redirect\n\t\t\tif (self.isRedirect(res.statusCode) && options.redirect !== 'manual') {\n\t\t\t\tif (options.redirect === 'error') {\n\t\t\t\t\treject(new FetchError('redirect mode is set to error: ' + options.url, 'no-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (options.counter >= options.follow) {\n\t\t\t\t\treject(new FetchError('maximum redirect reached at: ' + options.url, 'max-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!res.headers.location) {\n\t\t\t\t\treject(new FetchError('redirect location header missing at: ' + options.url, 'invalid-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// per fetch spec, for POST request with 301/302 response, or any request with 303 response, use GET when following redirect\n\t\t\t\tif (res.statusCode === 303\n\t\t\t\t\t|| ((res.statusCode === 301 || res.statusCode === 302) && options.method === 'POST'))\n\t\t\t\t{\n\t\t\t\t\toptions.method = 'GET';\n\t\t\t\t\tdelete options.body;\n\t\t\t\t\tdelete options.headers['content-length'];\n\t\t\t\t}\n\n\t\t\t\toptions.counter++;\n\n\t\t\t\tresolve(Fetch(resolve_url(options.url, res.headers.location), options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// normalize location header for manual redirect mode\n\t\t\tvar headers = new Headers(res.headers);\n\t\t\tif (options.redirect === 'manual' && headers.has('location')) {\n\t\t\t\theaders.set('location', resolve_url(options.url, headers.get('location')));\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tvar body = res.pipe(new stream.PassThrough());\n\t\t\tvar response_options = {\n\t\t\t\turl: options.url\n\t\t\t\t, status: res.statusCode\n\t\t\t\t, statusText: res.statusMessage\n\t\t\t\t, headers: headers\n\t\t\t\t, size: options.size\n\t\t\t\t, timeout: options.timeout\n\t\t\t};\n\n\t\t\t// response object\n\t\t\tvar output;\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no content-encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!options.compress || options.method === 'HEAD' || !headers.has('content-encoding') || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, check for gzip or deflate\n\t\t\tvar name = headers.get('content-encoding');\n\n\t\t\t// for gzip\n\t\t\tif (name == 'gzip' || name == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip());\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\n\t\t\t// for deflate\n\t\t\t} else if (name == 'deflate' || name == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tvar raw = res.pipe(new stream.PassThrough());\n\t\t\t\traw.once('data', function(chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\t\tresolve(output);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\toutput = new Response(body, response_options);\n\t\t\tresolve(output);\n\t\t\treturn;\n\t\t});\n\n\t\t// accept string, buffer or readable stream as body\n\t\t// per spec we will call tostring on non-stream objects\n\t\tif (typeof options.body === 'string') {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (options.body instanceof Buffer) {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (typeof options.body === 'object' && options.body.pipe) {\n\t\t\toptions.body.pipe(req);\n\t\t} else if (typeof options.body === 'object') {\n\t\t\treq.write(options.body.toString());\n\t\t\treq.end();\n\t\t} else {\n\t\t\treq.end();\n\t\t}\n\t});\n\n};\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nFetch.prototype.isRedirect = function(code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n}\n\n// expose Promise\nFetch.Promise = global.Promise;\nFetch.Response = Response;\nFetch.Headers = Headers;\nFetch.Request = Request;\n","\n/**\n * body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nvar convert = require('encoding').convert;\nvar bodyStream = require('is-stream');\nvar PassThrough = require('stream').PassThrough;\nvar FetchError = require('./fetch-error');\n\nmodule.exports = Body;\n\n/**\n * Body class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body, opts) {\n\n\topts = opts || {};\n\n\tthis.body = body;\n\tthis.bodyUsed = false;\n\tthis.size = opts.size || 0;\n\tthis.timeout = opts.timeout || 0;\n\tthis._raw = [];\n\tthis._abort = false;\n\n}\n\n/**\n * Decode response as json\n *\n * @return  Promise\n */\nBody.prototype.json = function() {\n\n\tvar self = this;\n\n\treturn this._decode().then(function(buffer) {\n\t\ttry {\n\t\t\treturn JSON.parse(buffer.toString());\n\t\t} catch (err) {\n\t\t\treturn Body.Promise.reject(new FetchError('invalid json response body at ' + self.url + ' reason: ' + err.message, 'invalid-json'));\n\t\t}\n\t});\n\n};\n\n/**\n * Decode response as text\n *\n * @return  Promise\n */\nBody.prototype.text = function() {\n\n\treturn this._decode().then(function(buffer) {\n\t\treturn buffer.toString();\n\t});\n\n};\n\n/**\n * Decode response as buffer (non-spec api)\n *\n * @return  Promise\n */\nBody.prototype.buffer = function() {\n\n\treturn this._decode();\n\n};\n\n/**\n * Decode buffers into utf-8 string\n *\n * @return  Promise\n */\nBody.prototype._decode = function() {\n\n\tvar self = this;\n\n\tif (this.bodyUsed) {\n\t\treturn Body.Promise.reject(new Error('body used already for: ' + this.url));\n\t}\n\n\tthis.bodyUsed = true;\n\tthis._bytes = 0;\n\tthis._abort = false;\n\tthis._raw = [];\n\n\treturn new Body.Promise(function(resolve, reject) {\n\t\tvar resTimeout;\n\n\t\t// body is string\n\t\tif (typeof self.body === 'string') {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [new Buffer(self.body)];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// body is buffer\n\t\tif (self.body instanceof Buffer) {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [self.body];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// allow timeout on slow response body\n\t\tif (self.timeout) {\n\t\t\tresTimeout = setTimeout(function() {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('response timeout at ' + self.url + ' over limit: ' + self.timeout, 'body-timeout'));\n\t\t\t}, self.timeout);\n\t\t}\n\n\t\t// handle stream error, such as incorrect content-encoding\n\t\tself.body.on('error', function(err) {\n\t\t\treject(new FetchError('invalid response body at: ' + self.url + ' reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\t// body is stream\n\t\tself.body.on('data', function(chunk) {\n\t\t\tif (self._abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (self.size && self._bytes + chunk.length > self.size) {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('content size at ' + self.url + ' over limit: ' + self.size, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself._bytes += chunk.length;\n\t\t\tself._raw.push(chunk);\n\t\t});\n\n\t\tself.body.on('end', function() {\n\t\t\tif (self._abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\t\t\tresolve(self._convert());\n\t\t});\n\t});\n\n};\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   String  encoding  Target encoding\n * @return  String\n */\nBody.prototype._convert = function(encoding) {\n\n\tencoding = encoding || 'utf-8';\n\n\tvar ct = this.headers.get('content-type');\n\tvar charset = 'utf-8';\n\tvar res, str;\n\n\t// header\n\tif (ct) {\n\t\t// skip encoding detection altogether if not html/xml/plain text\n\t\tif (!/text\\/html|text\\/plain|\\+xml|\\/xml/i.test(ct)) {\n\t\t\treturn Buffer.concat(this._raw);\n\t\t}\n\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tif (!res && this._raw.length > 0) {\n\t\tfor (var i = 0; i < this._raw.length; i++) {\n\t\t\tstr += this._raw[i].toString()\n\t\t\tif (str.length > 1024) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstr = str.substr(0, 1024);\n\t}\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(\n\t\tBuffer.concat(this._raw)\n\t\t, encoding\n\t\t, charset\n\t);\n\n};\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nBody.prototype._clone = function(instance) {\n\tvar p1, p2;\n\tvar body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (bodyStream(body) && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance.body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n","\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\nmodule.exports = FetchError;\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n\n\tthis.name = this.constructor.name;\n\tthis.message = message;\n\tthis.type = type;\n\n\t// when err.type is `system`, err.code contains system error code\n\tif (systemError) {\n\t\tthis.code = this.errno = systemError.code;\n\t}\n\n\t// hide custom error implementation details from end-users\n\tError.captureStackTrace(this, this.constructor);\n}\n\nrequire('util').inherits(FetchError, Error);\n","\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nmodule.exports = Headers;\n\n/**\n * Headers class\n *\n * @param   Object  headers  Response headers\n * @return  Void\n */\nfunction Headers(headers) {\n\n\tvar self = this;\n\tthis._headers = {};\n\n\t// Headers\n\tif (headers instanceof Headers) {\n\t\theaders = headers.raw();\n\t}\n\n\t// plain object\n\tfor (var prop in headers) {\n\t\tif (!headers.hasOwnProperty(prop)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof headers[prop] === 'string') {\n\t\t\tthis.set(prop, headers[prop]);\n\n\t\t} else if (typeof headers[prop] === 'number' && !isNaN(headers[prop])) {\n\t\t\tthis.set(prop, headers[prop].toString());\n\n\t\t} else if (Array.isArray(headers[prop])) {\n\t\t\theaders[prop].forEach(function(item) {\n\t\t\t\tself.append(prop, item.toString());\n\t\t\t});\n\t\t}\n\t}\n\n}\n\n/**\n * Return first header value given name\n *\n * @param   String  name  Header name\n * @return  Mixed\n */\nHeaders.prototype.get = function(name) {\n\tvar list = this._headers[name.toLowerCase()];\n\treturn list ? list[0] : null;\n};\n\n/**\n * Return all header values given name\n *\n * @param   String  name  Header name\n * @return  Array\n */\nHeaders.prototype.getAll = function(name) {\n\tif (!this.has(name)) {\n\t\treturn [];\n\t}\n\n\treturn this._headers[name.toLowerCase()];\n};\n\n/**\n * Iterate over all headers\n *\n * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n * @param   Boolean   thisArg   `this` context for callback function\n * @return  Void\n */\nHeaders.prototype.forEach = function(callback, thisArg) {\n\tObject.getOwnPropertyNames(this._headers).forEach(function(name) {\n\t\tthis._headers[name].forEach(function(value) {\n\t\t\tcallback.call(thisArg, value, name, this)\n\t\t}, this)\n\t}, this)\n}\n\n/**\n * Overwrite header values given name\n *\n * @param   String  name   Header name\n * @param   String  value  Header value\n * @return  Void\n */\nHeaders.prototype.set = function(name, value) {\n\tthis._headers[name.toLowerCase()] = [value];\n};\n\n/**\n * Append a value onto existing header\n *\n * @param   String  name   Header name\n * @param   String  value  Header value\n * @return  Void\n */\nHeaders.prototype.append = function(name, value) {\n\tif (!this.has(name)) {\n\t\tthis.set(name, value);\n\t\treturn;\n\t}\n\n\tthis._headers[name.toLowerCase()].push(value);\n};\n\n/**\n * Check for header name existence\n *\n * @param   String   name  Header name\n * @return  Boolean\n */\nHeaders.prototype.has = function(name) {\n\treturn this._headers.hasOwnProperty(name.toLowerCase());\n};\n\n/**\n * Delete all header values given name\n *\n * @param   String  name  Header name\n * @return  Void\n */\nHeaders.prototype['delete'] = function(name) {\n\tdelete this._headers[name.toLowerCase()];\n};\n\n/**\n * Return raw headers (non-spec api)\n *\n * @return  Object\n */\nHeaders.prototype.raw = function() {\n\treturn this._headers;\n};\n","\n/**\n * request.js\n *\n * Request class contains server only options\n */\n\nvar parse_url = require('url').parse;\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Request;\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nfunction Request(input, init) {\n\tvar url, url_parsed;\n\n\t// normalize input\n\tif (!(input instanceof Request)) {\n\t\turl = input;\n\t\turl_parsed = parse_url(url);\n\t\tinput = {};\n\t} else {\n\t\turl = input.url;\n\t\turl_parsed = parse_url(url);\n\t}\n\n\t// normalize init\n\tinit = init || {};\n\n\t// fetch spec options\n\tthis.method = init.method || input.method || 'GET';\n\tthis.redirect = init.redirect || input.redirect || 'follow';\n\tthis.headers = new Headers(init.headers || input.headers || {});\n\tthis.url = url;\n\n\t// server only options\n\tthis.follow = init.follow !== undefined ?\n\t\tinit.follow : input.follow !== undefined ?\n\t\tinput.follow : 20;\n\tthis.compress = init.compress !== undefined ?\n\t\tinit.compress : input.compress !== undefined ?\n\t\tinput.compress : true;\n\tthis.counter = init.counter || input.counter || 0;\n\tthis.agent = init.agent || input.agent;\n\n\tBody.call(this, init.body || this._clone(input), {\n\t\ttimeout: init.timeout || input.timeout || 0,\n\t\tsize: init.size || input.size || 0\n\t});\n\n\t// server request options\n\tthis.protocol = url_parsed.protocol;\n\tthis.hostname = url_parsed.hostname;\n\tthis.port = url_parsed.port;\n\tthis.path = url_parsed.path;\n\tthis.auth = url_parsed.auth;\n}\n\nRequest.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this request\n *\n * @return  Request\n */\nRequest.prototype.clone = function() {\n\treturn new Request(this);\n};\n","\n/**\n * response.js\n *\n * Response class provides content decoding\n */\n\nvar http = require('http');\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Response;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Response(body, opts) {\n\n\topts = opts || {};\n\n\tthis.url = opts.url;\n\tthis.status = opts.status || 200;\n\tthis.statusText = opts.statusText || http.STATUS_CODES[this.status];\n\tthis.headers = new Headers(opts.headers);\n\tthis.ok = this.status >= 200 && this.status < 300;\n\n\tBody.call(this, body, opts);\n\n}\n\nResponse.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this response\n *\n * @return  Response\n */\nResponse.prototype.clone = function() {\n\treturn new Response(this._clone(this), {\n\t\turl: this.url\n\t\t, status: this.status\n\t\t, statusText: this.statusText\n\t\t, headers: this.headers\n\t\t, ok: this.ok\n\t});\n};\n","var checkParameters = require('./lib/precondition')\nvar native = require('crypto')\n\nfunction nativePBKDF2 (password, salt, iterations, keylen, digest, callback) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = 'sha1'\n  }\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  return native.pbkdf2(password, salt, iterations, keylen, digest, callback)\n}\n\nfunction nativePBKDF2Sync (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n  digest = digest || 'sha1'\n  return native.pbkdf2Sync(password, salt, iterations, keylen, digest)\n}\n\n/* istanbul ignore next */\nif (!native.pbkdf2Sync || native.pbkdf2Sync.toString().indexOf('keylen, digest') === -1) {\n  exports.pbkdf2Sync = require('./lib/sync')\n  exports.pbkdf2 = require('./lib/async')\n\n// native\n} else {\n  exports.pbkdf2Sync = nativePBKDF2Sync\n  exports.pbkdf2 = nativePBKDF2\n}\n","var checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  'sha': 'SHA-1',\n  'sha-1': 'SHA-1',\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha-256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  'sha512': 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(password, salt, iterations, keylen)\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n}\nmodule.exports = defaultEncoding\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nvar createHmac = require('create-hmac')\nvar checkParameters = require('../lib/precondition')\nvar defaultEncoding = require('../lib/default-encoding')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  digest = digest || 'sha1'\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = createHmac(digest, password).update(block1).digest()\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = createHmac(digest, password).update(U).digest()\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","//todo: 0xkraken\n// move modInverse and power function to another file or overwrite operators for BigInt\n// Modulo inverse using extended Euclid Algorithm\nfunction modInverse(a, m) {\n  let m0 = m;\n  let y = BigInt(\"0\")\n  let x = BigInt(\"1\");\n\n  if (m == 1)\n    return 0;\n\n  while (a > 1) {\n    // q is quotient\n    let q = a / m;\n    let t = m;\n\n    // m is remainder now, process same as\n    // Euclid's algo\n    m = a % m;\n    a = t;\n    t = y;\n\n    // Update y and x\n    y = x - q * y;\n    x = t;\n  }\n\n  // Make x positive\n  if (x < 0)\n    x = x + m0;\n\n  return x;\n}\n\n// Fast Power using Exponential Squaring\nfunction power(base, power, n) {\n  let result = BigInt(1);\n  const twoBN = BigInt(2);\n\n  while (power > 0) {\n    // if power id odd\n    if (power % twoBN == 1) {\n      result = (result * base) % n;\n    }\n\n    power = power / twoBN;\n    base = (base * base) % n;\n  }\n\n  return result;\n}\n\nfunction umod(x, n) {\n  return x % n + n\n}\n\nmodule.exports = {modInverse, power, umod}\n","const SK = 0x00;\nconst VALUE = 0x01;\nconst SND = 0x02;\nconst SHARD_ID = 0x03;\nconst RAND = 0x04;\nconst FULL = 0x05;\n\nconst COMPRESS_POINT_SIZE = 33;\nconst BIG_INT_SIZE = 32;\nconst MAX_VALUE = 18446744073709551616;\nconst MAX_EXP = 64;\n\nconst CM_RING_SIZE = 8; // 2^3\nconst CM_RING_SIZE_EXP = 3;\n\n// size of zero knowledge proof corresponding one input\nconst ONE_OF_MANY_PROOF_SIZE = 716;\nconst SN_PRIVACY_PROOF_SIZE = 326;\nconst SN_NO_PRIVACY_PROOF_SIZE = 196;\n\nconst UINT64_SIZE = 8; // bytes\n\nconst PC_CAPACITY = 5;\n\nmodule.exports = {\n    COMPRESS_POINT_SIZE,\n    BIG_INT_SIZE,\n    PC_CAPACITY,\n    SK,\n    VALUE,\n    SND,\n    SHARD_ID,\n    RAND,\n    FULL,\n    CM_RING_SIZE,\n    CM_RING_SIZE_EXP,\n    MAX_EXP,\n    MAX_VALUE,\n    ONE_OF_MANY_PROOF_SIZE,\n    SN_PRIVACY_PROOF_SIZE,\n    SN_NO_PRIVACY_PROOF_SIZE,\n    UINT64_SIZE,\n};","let ECC = require('elliptic');\nlet Elliptic = ECC.ec;\nlet BN = require('bn.js');\nlet P256 = new Elliptic('p256');\nlet utils = require('./privacy_utils');\nlet Base = ECC.curve;\nlet cs = require(\"./constants\");\nlet bigIntUtils = require(\"./bigint_utils\")\n\nconst P = BN.red(P256.curve.p.clone());\nconst N = BN.red(P256.n.clone());\n\nECC.curve.short.prototype.pointFromX = function pointFromX(x, odd = null) {\n    x = new BN(x, 16);\n    if (!x.red)\n        x = x.toRed(this.red);\n\n    var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n    var y = y2.redSqrt();\n    if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n        throw new Error('invalid point');\n    if (odd != null) {\n        var isOdd = y.fromRed().isOdd();\n        if (odd && !isOdd || !odd && isOdd)\n            y = y.redNeg();\n    }\n    return this.point(x, y);\n};\n\nif (Base.base.BasePoint.prototype.inverse) {\n    console.warn(\"Overriding existing Base.base.BasePoint.prototype.inverse. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n\nBase.base.BasePoint.prototype.inverse = function () {\n    let resY = P256.curve.p.clone().sub(this.getY().clone());\n    resY.red = null;\n    return P256.curve.point(this.getX().clone(), resY);\n}\n\nif (P256.isOnCurve) {\n    console.warn(\"Overriding existing Base.base.prototype.isOnCurve. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n\nP256.isOnCurve = function (point) {\n    let x = point.getX();\n    let y = point.getY();\n    return (y.toRed(P).redMul(y.toRed(P)).fromRed()).cmp(x.toRed(P).redPow(new BN(3)).redSub(x.toRed(P).redMul((new BN(3)).toRed(P))).redAdd(P256.B.toRed(P)).fromRed()) === 0;\n}\n\nif (Base.base.BasePoint.prototype.isSafe) {\n    console.warn(\"Overriding existing Base.base.BasePoint.prototype.isSafe. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n\nBase.base.BasePoint.prototype.isSafe = function () {\n    return (P256.isOnCurve(this)) ? (!this.dbl().isInfinity()) : (false);\n}\n\nif (Base.base.BasePoint.prototype.sub) {\n    console.warn(\"Overriding existing Base.base.BasePoint.prototype.sub. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n\nBase.base.BasePoint.prototype.sub = function (point) {\n    return this.add(point.inverse());\n}\n\nif (Base.base.BasePoint.prototype.compress) {\n    console.warn(\"Overriding existing Base.base.BasePoint.prototype.compress. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n\nBase.base.BasePoint.prototype.compress = function () {\n    let res = new Uint8Array(cs.COMPRESS_POINT_SIZE);\n    res.set((this.getX().toArray('be', cs.BIG_INT_SIZE)), 1);\n    res[0] = 2 + this.getY().isOdd();\n    return res;\n}\n\nif (Base.base.BasePoint.prototype.hash) {\n    console.warn(\"Overriding existing Base.base.BasePoint.prototype.hash. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\nBase.base.BasePoint.prototype.hash = function (index) {\n    let tmp = utils.addPaddingBigInt(this.getX(), cs.BIG_INT_SIZE);\n    let indexBytes;\n    if (index == 0) {\n        indexBytes = [0];\n    } else {\n        indexBytes = new BN(index).toArray();\n    }\n\n    let bytes = new Uint8Array(cs.BIG_INT_SIZE + indexBytes.length)\n\n    bytes.set(tmp, 0);\n    bytes.set(indexBytes, cs.BIG_INT_SIZE);\n\n    let res = null;\n    while (true) {\n        bytes = utils.hashSha3BytesToBytes(bytes);\n        let x = new BN(bytes);\n        try {\n            res = P256.curve.pointFromX(x);\n        } catch (error) {\n            res = null\n        }\n        if ((res != null) && (res.isSafe())) {\n            return res;\n        }\n    }\n}\n\nif (Base.base.BasePoint.prototype.derive) {\n    console.warn(\"Overriding existing Base.base.BasePoint.prototype.derive. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n\n// const n = BigInt(P256.n.toString())\nBase.base.BasePoint.prototype.derive = function (seed, derivator) {\n    let result = null;\n    try {\n        // if (this.isSafe()) {\n        //     console.time(\"1.1\");\n            let temp;\n            temp = (seed.toRed(N).redAdd(derivator.toRed(N)))\n            temp = temp.redInvm().fromRed();\n            // console.timeEnd(\"1.1\");\n            result = this.mul(temp)\n        // }\n    } catch (e) {\n        console.log(\"ERR1\", e);\n    }\n\n    /*try {\n        // if (this.isSafe()) {\n        //     console.time(\"1.2\");\n            let temp;\n            temp = (BigInt(seed.toString()) + BigInt(derivator.toString()));\n            temp = bigIntUtils.modInverse(temp, n);\n            // console.timeEnd(\"1.2\")\n            result = this.mul(new BN(temp.toString()));\n        // }\n    } catch (e) {\n        console.log(\"ERR2\", e);\n    }*/\n\n    return result;\n};\n\n/*if (Base.base.BasePoint.prototype.deriveOptimized) {\n    console.warn(\"Overriding existing Base.base.BasePoint.prototype.deriveOptimized. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\nBase.base.BasePoint.prototype.deriveOptimized = function (seed, derivator) {\n    let result = null;\n    try {\n        // if (this.isSafe()) {\n        //     console.time(\"1.2\");\n            let temp = seed + derivator;\n            temp = bigIntUtils.modInverse(temp, n);\n            // console.timeEnd(\"1.2\")\n            result = this.mulOptimized(temp);\n        // }\n    } catch (e) {\n        console.log(\"ERR2\", e);\n    }\n    return result;\n};\nif (Base.base.BasePoint.prototype.mulOptimized) {\n    console.warn(\"Overriding existing Base.base.BasePoint.prototype.mulOptimized. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n// scalar is BigInt\nBase.base.BasePoint.prototype.mulOptimized = function (scalar){\n    let scalarTmp = scalar;\n    let pointTmp = this;\n    let twoBN = BigInt(2);\n    let result = P256.curve.point(0, 0);\n    let resultNull = true;\n    // check point is double point or not\n    // if point is double point:  check scalar is even or odd\n    if (this.dbl().isInfinity()){\n        if (scalarTmp % twoBN == 0){\n            return result;\n        } else{\n            return pointTmp;\n        }\n    } else{\n        while (scalarTmp > 0){\n            let bin = scalarTmp % twoBN;\n            scalarTmp = scalarTmp / twoBN;\n            if (bin == 1){\n                if (!resultNull){\n                    result = result.addOptimized(pointTmp);\n                }else{\n                    result = pointTmp;\n                    resultNull = false\n                }\n            }\n            pointTmp = pointTmp.dbl();\n        }\n    }\n    return result;\n}\n\nif (Base.base.BasePoint.prototype.addOptimized) {\n    console.warn(\"Overriding existing Base.base.BasePoint.prototype.derive. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n// scalar is BigInt\nBase.base.BasePoint.prototype.addOptimized = function (p){\n    // console.time(\"addOptimized\")\n    // O + P = P\n    // console.time(\"pre\")\n    if (this.inf) {\n        // console.timeEnd(\"addOptimized\")\n        return p;\n    }\n    // P + O = P\n    if (p.inf) {\n        // console.timeEnd(\"addOptimized\")\n        return this;\n    }\n    // P + P = 2P\n    if (this.eq(p)) {\n        // console.timeEnd(\"addOptimized\")\n        return this.dbl();\n    }\n    // P + (-P) = O\n    // if (this.neg().eq(p))\n    //   return this.curve.point(null, null);\n    let n = BigInt(this.curve.p.toString());\n    // P + Q = O\n    if (this.x.cmp(p.x) === 0) {\n        // console.timeEnd(\"addOptimized\")\n        return this.curve.point(null, null);\n    }\n    // console.timeEnd(\"pre\")\n    // console.time(\"Declare\")\n    let px = BigInt(p.x.fromRed().toString())\n    let x = BigInt(this.x.fromRed().toString())\n    let y = BigInt(this.y.fromRed().toString())\n    let py = BigInt(p.y.fromRed().toString())\n    let c = y - py\n    // console.timeEnd(\"Declare\")\n    // console.time(\"Ver2\")\n    if (c != 0) {\n        c = c * bigIntUtils.modInverse(bigIntUtils.umod(x - px, n), n)\n        // c = umod(c,n)\n    }\n    const nx = bigIntUtils.umod(((c * c) - x) - px, n)\n    const ny = bigIntUtils.umod(c * (x - nx) - y, n);\n    // console.timeEnd(\"Ver2\")\n    // console.time(\"Ver2 Parse\")\n    const ctx = BN.mont(this.curve.p)\n    const res = this.curve.point(new BN(nx.toString()).toRed(ctx), new BN(ny.toString()).toRed(ctx));\n    // console.timeEnd(\"Ver2 Parse\")\n    // console.timeEnd(\"addOptimized\")\n    return res;\n}*/\n\nif (P256.decompress) {\n    console.warn(\"Overriding existing Base.base.prototype.decompress. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n\nP256.decompress = function (compBytes) {\n    if (compBytes.length != cs.COMPRESS_POINT_SIZE) {\n        throw new Error(\"Decompress failed! Bytes in inputs is not bytes of compressed point!\");\n    }\n    x = new BN(compBytes.slice(1, compBytes.length), '10', 'be');\n    let res = null;\n    try {\n        res = P256.curve.pointFromX(x, compBytes[0] - 2);\n    } catch (error) {\n        console.log(error);\n        throw error;\n    } finally {\n        return res;\n    }\n}\n\nif (P256.randomize) {\n    console.warn(\"Overriding existing Base.base.prototype.randomize. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n\nP256.randomize = function () {\n    let res = null;\n    while (1) {\n        x = new BN(utils.randBytes(cs.BIG_INT_SIZE));\n        try {\n            res = P256.curve.pointFromX(x, utils.randBytes(1)[0] & 1);\n        } catch (error) {\n            res = null;\n        }\n        if ((res != null) && (res.isSafe())) {\n            return res;\n        }\n    }\n}\n\nP256.B = new BN('41058363725152142129326129780047268409114441015993725554835256314039467401291', 10);\nP256.pointFromX = P256.curve.pointFromX;\nP256.p = P256.curve.p.clone();\nmodule.exports = {\n    N,\n    P,\n    P256,\n    add,\n};\n\nfunction add() {\n    console.log(\"abababababab\")\n}\n","let cs = require('./constants');\nlet P256 = require('./ec').P256;\nlet pcparamsInitCounters = 0;\nclass PCParams {\n    constructor() {\n        if (pcparamsInitCounters !== 0) {\n            throw new Error(\"Just init once time!\");\n        };\n        pcparamsInitCounters++;\n        this.G = new Array(cs.PC_CAPACITY);\n        this.GBytes = new Uint8Array(cs.PC_CAPACITY * cs.COMPRESS_POINT_SIZE);\n        this.G[0] = P256.curve.point(P256.g.getX(), P256.g.getY());\n        this.GBytes.set(this.G[0].compress(), 0);\n        for (let i = 1; i < cs.PC_CAPACITY; i++) {\n            this.G[i] = this.G[0].hash(i);\n            this.GBytes.set(this.G[i].compress(), i * cs.COMPRESS_POINT_SIZE);\n        };\n    };\n    get() {\n        if (pcparamsInitCounters === 0) {\n            return new PCParams();\n        };\n        return this.G;\n    };\n    commitAll(Openings) {\n        if (Openings.length !== cs.PC_CAPACITY) {\n            throw new Error(\"Length of Openings is less than Capacity, CommitAll function requires \", cs.PC_CAPACITY, \" openings.\");\n        };\n        let res = this.G[0].mul(Openings[0]);\n        for (let i = 1; i < cs.PC_CAPACITY; i++) {\n            res = res.add(this.G[i].mul(Openings[i]));\n        };\n        return res;\n    };\n    commitAtIndex(value, rand, index) {\n        return (this.G[cs.RAND].mul(rand)).add(this.G[index].mul(value));\n    }\n}\n\nconst PedCom = new PCParams();\n\nmodule.exports = {\n    PedCom\n};","var P256 = require('./ec').P256;\n\n// Polynomial\nclass Poly {\n    constructor(coeffs) {\n        // f(x) = 3x^3 + 2x + 1 => [1 2 0 3]\n        this.Coeffs = [];\n        for (let i = 0; i < coeffs.length; i++) {\n            this.Coeffs[i] = coeffs[i];\n        }\n    }\n\n    trim() {\n        let deg = this.getDegree();\n        for (let i = deg; i > 0; i--) {\n            if (!this.Coeffs[i].isZero()) {\n                break;\n            } else {\n                this.Coeffs.pop();\n            }\n        }\n    }\n\n    print() {\n        for (let i = 0; i < this.Coeffs.length; i++) {\n            console.log(this.Coeffs[i].umod(P256.n).toString(10, \"\"));\n        }\n    }\n\n    neg() {\n        var p = new Poly(this.Coeffs);\n        for (let i = 0; i < this.Coeffs.length; i++) {\n            p.Coeffs[i] = this.Coeffs[i].neg();\n        }\n        return p;\n    }\n\n    sub(q, n) {\n        let r = q.neg();\n        return this.add(r, n);\n    }\n\n    add(q, n) {\n        if (this.compare(q) < 0) {\n            return q.add(this, n)\n        }\n        let r = [];\n        for (let i = 0; i < q.Coeffs.length; i++) {\n            r[i] = this.Coeffs[i];\n            r[i] = r[i].add(q.Coeffs[i]);\n        }\n        for (let i = q.Coeffs.length; i < this.Coeffs.length; i++) {\n            r[i] = this.Coeffs[i];\n        }\n        if (n != null) {\n            for (let i = 0; i < this.Coeffs.length; i++) {\n                r[i] = r[i].mod(n);\n            }\n        }\n        let res = new Poly(r);\n        res.trim();\n        return res;\n    }\n\n    mul(q, n) {\n        let P_deg = this.getDegree();\n        let Q_deg = q.getDegree();\n        let deg = P_deg + Q_deg + 1;\n        let res = [];\n        for (let i = 0; i <= P_deg; i++) {\n            for (let j = 0; j <= Q_deg; j++) {\n                res[i + j] = (res[i + j]) ? res[i + j].add(this.Coeffs[i].mul(q.Coeffs[j])) : this.Coeffs[i].mul(q.Coeffs[j]);\n            }\n        }\n        if (n != null) {\n            for (let i = 0; i < deg; i++) {\n                res[i] = res[i].umod(n)\n            }\n        }\n        let P = new Poly(res);\n        P.trim();\n        return P;\n    }\n\n    compare(q) {\n        if (this.getDegree() < q.getDegree()) {\n            return -1\n        }\n        if (this.getDegree() > q.getDegree()) {\n            return 1\n        }\n        for (let i = 0; i <= this.getDegree(); i++) {\n            switch (this.Coeffs[i].cmp(q.Coeffs[i])) {\n                case -1:\n                    return -1;\n                case 1:\n                    return 1;\n            }\n        }\n        return 0;\n    }\n\n    getDegree() {\n        return this.Coeffs.length - 1;\n    }\n}\n\n\n// function TestPoly(){\n//     let a = new Poly([new common.BigInt(10)]);\n//     let b = new Poly([new common.BigInt(10)], [new common.BigInt(20)]);\n//     a = a.mul(b);\n//     a.print();\n// }\n//\n// TestPoly();\n\n//Usage\n//\n// let V = [];\n// let U = [];\n// for (let i=0;i<3;i++){\n//     V[i] = utils.RandScalar(8);\n//     // U[i] = utils.RandInt(8)\n//     // console.log(V[i].toString(10, \"\"))\n// }\n// for (let i=0;i<6;i++){\n//     // V[i] = utils.RandInt(8);\n//     U[i] = utils.RandScalar(8)\n//     // console.log(V[i].toString(10, \"\"))\n// }\n// p = new Poly(V)\n// q = new Poly(U)\n// p.print();\n// console.log('--------------');\n// q.print();\n// console.log('--------------');\n// let r = p.mul(q,null);\n// p.print();\n// console.log('--------------');\n// q.print();\n// console.log('--------------');\n// let r = p.sub(q,null)\n// console.log(\"P-Q--------\")\n// r.print()\n// console.log(\"Q+P--------\")\n// let k = q.add(p,null)\n// k.print()\n// console.log(\"2P---------\")\n// p.add(p,null).print()\n// console.log(\"P-Q + P+Q---------\")\n// k.add(r,null).print()\nmodule.exports = {\n    Poly\n};","let Elliptic = require('elliptic').ec;\nlet BigInt = require('bn.js');\nlet P256 = new Elliptic('p256');\nlet constants = require('./constants');\nconst sjcl = require('./sjcl/sjcl');\nconst {SHA3} = require('sha3');\nconst base64js = require('base64-js');\n\nlet randBytesFunc = null;\n\nfunction setRandBytesFunc(f) {\n  randBytesFunc = f;\n}\n\nfunction getRandBytesFunc() {\n  return randBytesFunc;\n}\n\nfunction randBytes(n = constants.BIG_INT_SIZE) {\n  try {\n    let paranoiaLvl = 6; //256bit entropy https://github.com/bitwiseshiftleft/sjcl/issues/156\n    let wordLength = (n >> 2) + 1;\n    let words = sjcl.random.randomWords(wordLength, paranoiaLvl);\n    res = sjcl.codec.bytes.fromBits(words);\n    return res.slice(0, n);\n  } catch (e) {\n    console.log(e);\n    let randomFunc = getRandBytesFunc();\n    if (randomFunc) {\n      return randomFunc(n);\n    } else {\n      throw Error('Utility.RandomBytesFunc is null');\n    }\n  }\n}\n\nfunction randScalar(n = constants.BIG_INT_SIZE) {\n  let randNum = new BigInt(\"0\");\n  let curveDeg = P256.n;\n  do {\n    let randbytes = randBytes(n);\n    randNum = new BigInt(randbytes, 10, \"be\");\n  } while (randNum.cmp(curveDeg) !== -1);\n  return randNum;\n}\n\nfunction IsPowerOfTwo(n) {\n  if (n < 2) {\n    return false;\n  }\n  while (n > 2) {\n    if (n % 2 === 0) {\n      n = n >> 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction addPaddingBigInt(numInt, fixedSize) {\n  //numInt: type BigInt\n  //fixedSize: type int\n  return numInt.toArray(\"be\", fixedSize);\n}\n\nfunction intToByteArr(n) {\n  // return bytes array of length 2 in decimal\n  let newNum = new BigInt(n);\n  let bytes = newNum.toArray(\"be\");\n  if (bytes.length > 2) {\n    return []\n  } else return newNum.toArray(\"be\", 2);\n\n}\n\nfunction byteArrToInt(bytesArr) {\n  let num = new BigInt(bytesArr, 16, \"be\");\n  return parseInt(num.toString(10));\n}\n\n// CheckDuplicateBigIntArray returns true if there are at least 2 elements in an array have same values\nfunction checkDuplicateBigIntArray(arr) {\n  let set = new Set(arr);\n  if (set.size !== arr.length) {\n    return true;\n  }\n  return false;\n}\n\nfunction convertIntToBinary(num, n) {\n  let bytes = new Uint8Array(n);\n  for (let i = 0; i < n; i++) {\n    bytes[i] = num & 1;\n    num >>= 1;\n  }\n  return bytes;\n}\n\nfunction hashBytesToBytes(data) {\n  return sjcl.codec.bytes.fromBits(sjcl.hash.sha256.hash(sjcl.codec.bytes.toBits(data)));\n}\n\nfunction hashSha3BytesToBytes(data) {\n  data = new Uint8Array(data)\n  let temp = new Buffer(data);\n  let result = new SHA3(256).update(temp);\n  result = result.digest()\n  return [...new Uint8Array(result)];\n}\n\nfunction doubleHashBytesToBytes(data) {\n  return sjcl.codec.bytes.fromBits(sjcl.hash.sha256.hash(sjcl.hash.sha256.hash(sjcl.codec.bytes.toBits(data))))\n}\n\nfunction convertUint8ArrayToArray(data) {\n  return [...data];\n}\n\nfunction stringToBytes(str) {\n  var ch, st, re = [];\n  for (var i = 0; i < str.length; i++) {\n    ch = str.charCodeAt(i);  // get char\n    st = [];                 // set up \"stack\"\n    do {\n      st.push(ch & 0xFF);  // push byte to stack\n      ch = ch >> 8;          // shift value down by 1 byte\n    }\n    while (ch);\n    // add stack contents to result\n    // done because chars have \"wrong\" endianness\n    re = re.concat(st.reverse());\n  }\n  // return an array of bytes\n  return re;\n}\n\nfunction base64Decode(str){\n  let bytes = base64js.toByteArray(str);\n  return bytes;\n}\n\nfunction base64Encode(bytesArray){\n  let str = base64js.fromByteArray(bytesArray);\n  return str;\n}\n\nmodule.exports = {\n  hashBytesToBytes,\n  doubleHashBytesToBytes,\n  randScalar,\n  addPaddingBigInt,\n  intToByteArr,\n  randBytes,\n  checkDuplicateBigIntArray,\n  convertIntToBinary,\n  convertUint8ArrayToArray,\n  stringToBytes,\n  hashSha3BytesToBytes,\n  setRandBytesFunc,\n  base64Decode,\n  base64Encode\n};\n\n","\"use strict\";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return\"CORRUPT: \"+this.message};this.message=a},invalid:function(a){this.toString=function(){return\"INVALID: \"+this.message};this.message=a},bug:function(a){this.toString=function(){return\"BUG: \"+this.message};this.message=a},notReady:function(a){this.toString=function(){return\"NOT READY: \"+this.message};this.message=a}}};\nsjcl.cipher.aes=function(a){this.M[0][0][0]||this.T();var b,d,c,e,f=this.M[0][4],g=this.M[1];b=a.length;var h=1;if(4!==b&&6!==b&&8!==b)throw new sjcl.exception.invalid(\"invalid aes key size\");this.i=[c=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){d=c[a-1];if(0===a%b||8===b&&4===a%b)d=f[d>>>24]<<24^f[d>>16&255]<<16^f[d>>8&255]<<8^f[d&255],0===a%b&&(d=d<<8^d>>>24^h<<24,h=h<<1^283*(h>>7));c[a]=c[a-b]^d}for(b=0;a;b++,a--)d=c[b&3?a:a-4],e[b]=4>=a||4>b?d:g[0][f[d>>>24]]^g[1][f[d>>16&255]]^g[2][f[d>>8&255]]^g[3][f[d&\n255]]};\nsjcl.cipher.aes.prototype={encrypt:function(a){return ba(this,a,0)},decrypt:function(a){return ba(this,a,1)},M:[[[],[],[],[],[]],[[],[],[],[],[]]],T:function(){var a=this.M[0],b=this.M[1],d=a[4],c=b[4],e,f,g,h=[],k=[],l,m,n,p;for(e=0;0x100>e;e++)k[(h[e]=e<<1^283*(e>>7))^e]=e;for(f=g=0;!d[f];f^=l||1,g=k[g]||1)for(n=g^g<<1^g<<2^g<<3^g<<4,n=n>>8^n&255^99,d[f]=n,c[n]=f,m=h[e=h[l=h[f]]],p=0x1010101*m^0x10001*e^0x101*l^0x1010100*f,m=0x101*h[n]^0x1010100*n,e=0;4>e;e++)a[e][f]=m=m<<24^m>>>8,b[e][n]=p=p<<24^p>>>8;for(e=\n0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};\nfunction ba(a,b,d){if(4!==b.length)throw new sjcl.exception.invalid(\"invalid aes block size\");var c=a.i[d],e=b[0]^c[0],f=b[d?3:1]^c[1],g=b[2]^c[2];b=b[d?1:3]^c[3];var h,k,l,m=c.length/4-2,n,p=4,r=[0,0,0,0];h=a.M[d];a=h[0];var t=h[1],D=h[2],I=h[3],x=h[4];for(n=0;n<m;n++)h=a[e>>>24]^t[f>>16&255]^D[g>>8&255]^I[b&255]^c[p],k=a[f>>>24]^t[g>>16&255]^D[b>>8&255]^I[e&255]^c[p+1],l=a[g>>>24]^t[b>>16&255]^D[e>>8&255]^I[f&255]^c[p+2],b=a[b>>>24]^t[e>>16&255]^D[f>>8&255]^I[g&255]^c[p+3],p+=4,e=h,f=k,g=l;for(n=\n0;4>n;n++)r[d?3&-n:n]=x[e>>>24]<<24^x[f>>16&255]<<16^x[g>>8&255]<<8^x[b&255]^c[p++],h=e,e=f,f=g,g=b,b=h;return r}\nsjcl.bitArray={bitSlice:function(a,b,d){a=sjcl.bitArray.ra(a.slice(b/32),32-(b&31)).slice(1);return void 0===d?a:sjcl.bitArray.clamp(a,d-b)},extract:function(a,b,d){var c=Math.floor(-b-d&31);return((b+d-1^b)&-32?a[b/32|0]<<32-c^a[b/32+1|0]>>>c:a[b/32|0]>>>c)&(1<<d)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var d=a[a.length-1],c=sjcl.bitArray.getPartial(d);return 32===c?a.concat(b):sjcl.bitArray.ra(b,c,d|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;\nreturn 0===b?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var d=a.length;b=b&31;0<d&&b&&(a[d-1]=sjcl.bitArray.partial(b,a[d-1]&2147483648>>b-1,1));return a},partial:function(a,b,d){return 32===a?b:(d?b|0:b<<32-a)+0x10000000000*a},getPartial:function(a){return Math.round(a/0x10000000000)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return!1;var d=0,c;for(c=0;c<a.length;c++)d|=a[c]^b[c];\nreturn 0===d},ra:function(a,b,d,c){var e;e=0;for(void 0===c&&(c=[]);32<=b;b-=32)c.push(d),d=0;if(0===b)return c.concat(a);for(e=0;e<a.length;e++)c.push(d|a[e]>>>b),d=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);c.push(sjcl.bitArray.partial(b+a&31,32<b+a?d:c.pop(),1));return c},l:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]},byteswapM:function(a){var b,d;for(b=0;b<a.length;++b)d=a[b],a[b]=d>>>24|d>>>8&0xff00|(d&0xff00)<<8|d<<24;return a}};\nsjcl.codec.utf8String={fromBits:function(a){var b=\"\",d=sjcl.bitArray.bitLength(a),c,e;for(c=0;c<d/8;c++)0===(c&3)&&(e=a[c/4]),b+=String.fromCharCode(e>>>8>>>8>>>8),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],d,c=0;for(d=0;d<a.length;d++)c=c<<8|a.charCodeAt(d),3===(d&3)&&(b.push(c),c=0);d&3&&b.push(sjcl.bitArray.partial(8*(d&3),c));return b}};\nsjcl.codec.hex={fromBits:function(a){var b=\"\",d;for(d=0;d<a.length;d++)b+=((a[d]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b,d=[],c;a=a.replace(/\\s|0x/g,\"\");c=a.length;a=a+\"00000000\";for(b=0;b<a.length;b+=8)d.push(parseInt(a.substr(b,8),16)^0);return sjcl.bitArray.clamp(d,4*c)}};\nsjcl.codec.base32={D:\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",la:\"0123456789ABCDEFGHIJKLMNOPQRSTUV\",BITS:32,BASE:5,REMAINING:27,fromBits:function(a,b,d){var c=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f=\"\",g=0,h=sjcl.codec.base32.D,k=0,l=sjcl.bitArray.bitLength(a);d&&(h=sjcl.codec.base32.la);for(d=0;f.length*c<l;)f+=h.charAt((k^a[d]>>>g)>>>e),g<c?(k=a[d]<<c-g,g+=e,d++):(k<<=c,g-=c);for(;f.length&7&&!b;)f+=\"=\";return f},toBits:function(a,b){a=a.replace(/\\s|=/g,\"\").toUpperCase();var d=sjcl.codec.base32.BITS,\nc=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f=[],g,h=0,k=sjcl.codec.base32.D,l=0,m,n=\"base32\";b&&(k=sjcl.codec.base32.la,n=\"base32hex\");for(g=0;g<a.length;g++){m=k.indexOf(a.charAt(g));if(0>m){if(!b)try{return sjcl.codec.base32hex.toBits(a)}catch(p){}throw new sjcl.exception.invalid(\"this isn't \"+n+\"!\");}h>e?(h-=e,f.push(l^m>>>h),l=m<<d-h):(h+=c,l^=m<<d-h)}h&56&&f.push(sjcl.bitArray.partial(h&56,l,1));return f}};\nsjcl.codec.base32hex={fromBits:function(a,b){return sjcl.codec.base32.fromBits(a,b,1)},toBits:function(a){return sjcl.codec.base32.toBits(a,1)}};\nsjcl.codec.base64={D:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",fromBits:function(a,b,d){var c=\"\",e=0,f=sjcl.codec.base64.D,g=0,h=sjcl.bitArray.bitLength(a);d&&(f=f.substr(0,62)+\"-_\");for(d=0;6*c.length<h;)c+=f.charAt((g^a[d]>>>e)>>>26),6>e?(g=a[d]<<6-e,e+=26,d++):(g<<=6,e-=6);for(;c.length&3&&!b;)c+=\"=\";return c},toBits:function(a,b){a=a.replace(/\\s|=/g,\"\");var d=[],c,e=0,f=sjcl.codec.base64.D,g=0,h;b&&(f=f.substr(0,62)+\"-_\");for(c=0;c<a.length;c++){h=f.indexOf(a.charAt(c));\nif(0>h)throw new sjcl.exception.invalid(\"this isn't base64!\");26<e?(e-=26,d.push(g^h>>>e),g=h<<32-e):(e+=6,g^=h<<32-e)}e&56&&d.push(sjcl.bitArray.partial(e&56,g,1));return d}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};\nsjcl.codec.bytes={fromBits:function(a){var b=[],d=sjcl.bitArray.bitLength(a),c,e;for(c=0;c<d/8;c++)0===(c&3)&&(e=a[c/4]),b.push(e>>>24),e<<=8;return b},toBits:function(a){var b=[],d,c=0;for(d=0;d<a.length;d++)c=c<<8|a[d],3===(d&3)&&(b.push(c),c=0);d&3&&b.push(sjcl.bitArray.partial(8*(d&3),c));return b}};\nsjcl.codec.z85={D:\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#\",ya:[0,68,0,84,83,82,72,0,75,76,70,65,0,63,62,69,0,1,2,3,4,5,6,7,8,9,64,0,73,66,74,71,81,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,0,78,67,0,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,79,0,80,0,0],fromBits:function(a){if(!a)return null;if(0!==sjcl.bitArray.bitLength(a)%32)throw new sjcl.exception.invalid(\"Invalid bitArray length!\");\nfor(var b=\"\",d=sjcl.codec.z85.D,c=0;c<a.length;++c){for(var e=a[c],f=0,g=0;4>g;++g)f=0x100*f+(e>>>8*(4-g-1)&255);for(e=52200625;e;)b+=d.charAt(Math.floor(f/e)%85),e=Math.floor(e/85)}if(b.length!==5*a.length)throw new sjcl.exception.invalid(\"Bad Z85 conversion!\");return b},toBits:function(a){if(!a)return[];if(0!==a.length%5)throw new sjcl.exception.invalid(\"Invalid Z85 string!\");for(var b=[],d=0,c=sjcl.codec.z85.ya,e=0,f=0,g=0;g<a.length;)if(d=85*d+c[a[g++].charCodeAt(0)-32],0===g%5){for(var h=0x1000000;h;)e=\ne*Math.pow(2,8)+Math.floor(d/h)%0x100,++f,4===f&&(b.push(e),f=e=0),h=Math.floor(h/0x100);d=0}return b}};sjcl.hash.sha256=function(a){this.i[0]||this.T();a?(this.c=a.c.slice(0),this.h=a.h.slice(0),this.f=a.f):this.reset()};sjcl.hash.sha256.hash=function(a){return(new sjcl.hash.sha256).update(a).finalize()};\nsjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.c=this.A.slice(0);this.h=[];this.f=0;return this},update:function(a){\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,d=this.h=sjcl.bitArray.concat(this.h,a);b=this.f;a=this.f=b+sjcl.bitArray.bitLength(a);if(0x1fffffffffffff<a)throw new sjcl.exception.invalid(\"Cannot hash more than 2^53 - 1 bits\");if(\"undefined\"!==typeof Uint32Array){var c=new Uint32Array(d),e=0;for(b=512+b-(512+b&0x1ff);b<=a;b+=512)this.m(c.subarray(16*e,\n16*(e+1))),e+=1;d.splice(0,16*e)}else for(b=512+b-(512+b&0x1ff);b<=a;b+=512)this.m(d.splice(0,16));return this},finalize:function(){var a,b=this.h,d=this.c,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.f/0x100000000));for(b.push(this.f|0);b.length;)this.m(b.splice(0,16));this.reset();return d},A:[],i:[],T:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}for(var b=0,d=2,c,e;64>b;d++){e=!0;for(c=2;c*c<=d;c++)if(0===d%c){e=\n!1;break}e&&(8>b&&(this.A[b]=a(Math.pow(d,.5))),this.i[b]=a(Math.pow(d,1/3)),b++)}},m:function(a){var b,d,c,e=this.c,f=this.i,g=e[0],h=e[1],k=e[2],l=e[3],m=e[4],n=e[5],p=e[6],r=e[7];for(b=0;64>b;b++)16>b?d=a[b]:(d=a[b+1&15],c=a[b+14&15],d=a[b&15]=(d>>>7^d>>>18^d>>>3^d<<25^d<<14)+(c>>>17^c>>>19^c>>>10^c<<15^c<<13)+a[b&15]+a[b+9&15]|0),d=d+r+(m>>>6^m>>>11^m>>>25^m<<26^m<<21^m<<7)+(p^m&(n^p))+f[b],r=p,p=n,n=m,m=l+d|0,l=k,k=h,h=g,g=d+(h&k^l&(h^k))+(h>>>2^h>>>13^h>>>22^h<<30^h<<19^h<<10)|0;e[0]=e[0]+g|\n0;e[1]=e[1]+h|0;e[2]=e[2]+k|0;e[3]=e[3]+l|0;e[4]=e[4]+m|0;e[5]=e[5]+n|0;e[6]=e[6]+p|0;e[7]=e[7]+r|0}};sjcl.hash.sha512=function(a){this.i[0]||this.T();a?(this.c=a.c.slice(0),this.h=a.h.slice(0),this.f=a.f):this.reset()};sjcl.hash.sha512.hash=function(a){return(new sjcl.hash.sha512).update(a).finalize()};\nsjcl.hash.sha512.prototype={blockSize:1024,reset:function(){this.c=this.A.slice(0);this.h=[];this.f=0;return this},update:function(a){\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,d=this.h=sjcl.bitArray.concat(this.h,a);b=this.f;a=this.f=b+sjcl.bitArray.bitLength(a);if(0x1fffffffffffff<a)throw new sjcl.exception.invalid(\"Cannot hash more than 2^53 - 1 bits\");if(\"undefined\"!==typeof Uint32Array){var c=new Uint32Array(d),e=0;for(b=1024+b-(1024+b&1023);b<=a;b+=1024)this.m(c.subarray(32*\ne,32*(e+1))),e+=1;d.splice(0,32*e)}else for(b=1024+b-(1024+b&1023);b<=a;b+=1024)this.m(d.splice(0,32));return this},finalize:function(){var a,b=this.h,d=this.c,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+4;a&31;a++)b.push(0);b.push(0);b.push(0);b.push(Math.floor(this.f/0x100000000));for(b.push(this.f|0);b.length;)this.m(b.splice(0,32));this.reset();return d},A:[],Fa:[12372232,13281083,9762859,1914609,15106769,4090911,4308331,8266105],i:[],Ha:[2666018,15689165,5061423,9034684,\n4764984,380953,1658779,7176472,197186,7368638,14987916,16757986,8096111,1480369,13046325,6891156,15813330,5187043,9229749,11312229,2818677,10937475,4324308,1135541,6741931,11809296,16458047,15666916,11046850,698149,229999,945776,13774844,2541862,12856045,9810911,11494366,7844520,15576806,8533307,15795044,4337665,16291729,5553712,15684120,6662416,7413802,12308920,13816008,4303699,9366425,10176680,13195875,4295371,6546291,11712675,15708924,1519456,15772530,6568428,6495784,8568297,13007125,7492395,2515356,\n12632583,14740254,7262584,1535930,13146278,16321966,1853211,294276,13051027,13221564,1051980,4080310,6651434,14088940,4675607],T:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}function b(a){return 0x10000000000*(a-Math.floor(a))&255}for(var d=0,c=2,e,f;80>d;c++){f=!0;for(e=2;e*e<=c;e++)if(0===c%e){f=!1;break}f&&(8>d&&(this.A[2*d]=a(Math.pow(c,.5)),this.A[2*d+1]=b(Math.pow(c,.5))<<24|this.Fa[d]),this.i[2*d]=a(Math.pow(c,1/3)),this.i[2*d+1]=b(Math.pow(c,1/3))<<24|this.Ha[d],d++)}},m:function(a){var b,\nd,c=this.c,e=this.i,f=c[0],g=c[1],h=c[2],k=c[3],l=c[4],m=c[5],n=c[6],p=c[7],r=c[8],t=c[9],D=c[10],I=c[11],x=c[12],B=c[13],A=c[14],y=c[15],u;if(\"undefined\"!==typeof Uint32Array){u=Array(160);for(var v=0;32>v;v++)u[v]=a[v]}else u=a;var v=f,q=g,w=h,J=k,L=l,K=m,X=n,M=p,E=r,C=t,T=D,N=I,U=x,O=B,Y=A,P=y;for(a=0;80>a;a++){if(16>a)b=u[2*a],d=u[2*a+1];else{d=u[2*(a-15)];var z=u[2*(a-15)+1];b=(z<<31|d>>>1)^(z<<24|d>>>8)^d>>>7;var F=(d<<31|z>>>1)^(d<<24|z>>>8)^(d<<25|z>>>7);d=u[2*(a-2)];var G=u[2*(a-2)+1],z=\n(G<<13|d>>>19)^(d<<3|G>>>29)^d>>>6,G=(d<<13|G>>>19)^(G<<3|d>>>29)^(d<<26|G>>>6),Z=u[2*(a-7)],aa=u[2*(a-16)],Q=u[2*(a-16)+1];d=F+u[2*(a-7)+1];b=b+Z+(d>>>0<F>>>0?1:0);d+=G;b+=z+(d>>>0<G>>>0?1:0);d+=Q;b+=aa+(d>>>0<Q>>>0?1:0)}u[2*a]=b|=0;u[2*a+1]=d|=0;var Z=E&T^~E&U,ga=C&N^~C&O,G=v&w^v&L^w&L,ka=q&J^q&K^J&K,aa=(q<<4|v>>>28)^(v<<30|q>>>2)^(v<<25|q>>>7),Q=(v<<4|q>>>28)^(q<<30|v>>>2)^(q<<25|v>>>7),la=e[2*a],ha=e[2*a+1],z=P+((E<<18|C>>>14)^(E<<14|C>>>18)^(C<<23|E>>>9)),F=Y+((C<<18|E>>>14)^(C<<14|E>>>18)^(E<<\n23|C>>>9))+(z>>>0<P>>>0?1:0),z=z+ga,F=F+(Z+(z>>>0<ga>>>0?1:0)),z=z+ha,F=F+(la+(z>>>0<ha>>>0?1:0)),z=z+d|0,F=F+(b+(z>>>0<d>>>0?1:0));d=Q+ka;b=aa+G+(d>>>0<Q>>>0?1:0);Y=U;P=O;U=T;O=N;T=E;N=C;C=M+z|0;E=X+F+(C>>>0<M>>>0?1:0)|0;X=L;M=K;L=w;K=J;w=v;J=q;q=z+d|0;v=F+b+(q>>>0<z>>>0?1:0)|0}g=c[1]=g+q|0;c[0]=f+v+(g>>>0<q>>>0?1:0)|0;k=c[3]=k+J|0;c[2]=h+w+(k>>>0<J>>>0?1:0)|0;m=c[5]=m+K|0;c[4]=l+L+(m>>>0<K>>>0?1:0)|0;p=c[7]=p+M|0;c[6]=n+X+(p>>>0<M>>>0?1:0)|0;t=c[9]=t+C|0;c[8]=r+E+(t>>>0<C>>>0?1:0)|0;I=c[11]=I+N|\n0;c[10]=D+T+(I>>>0<N>>>0?1:0)|0;B=c[13]=B+O|0;c[12]=x+U+(B>>>0<O>>>0?1:0)|0;y=c[15]=y+P|0;c[14]=A+Y+(y>>>0<P>>>0?1:0)|0}};sjcl.hash.sha1=function(a){a?(this.c=a.c.slice(0),this.h=a.h.slice(0),this.f=a.f):this.reset()};sjcl.hash.sha1.hash=function(a){return(new sjcl.hash.sha1).update(a).finalize()};\nsjcl.hash.sha1.prototype={blockSize:512,reset:function(){this.c=this.A.slice(0);this.h=[];this.f=0;return this},update:function(a){\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,d=this.h=sjcl.bitArray.concat(this.h,a);b=this.f;a=this.f=b+sjcl.bitArray.bitLength(a);if(0x1fffffffffffff<a)throw new sjcl.exception.invalid(\"Cannot hash more than 2^53 - 1 bits\");if(\"undefined\"!==typeof Uint32Array){var c=new Uint32Array(d),e=0;for(b=this.blockSize+b-(this.blockSize+b&this.blockSize-1);b<=\na;b+=this.blockSize)this.m(c.subarray(16*e,16*(e+1))),e+=1;d.splice(0,16*e)}else for(b=this.blockSize+b-(this.blockSize+b&this.blockSize-1);b<=a;b+=this.blockSize)this.m(d.splice(0,16));return this},finalize:function(){var a,b=this.h,d=this.c,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.f/0x100000000));for(b.push(this.f|0);b.length;)this.m(b.splice(0,16));this.reset();return d},A:[1732584193,4023233417,2562383102,271733878,3285377520],\ni:[1518500249,1859775393,2400959708,3395469782],m:function(a){var b,d,c,e,f,g,h=this.c,k;if(\"undefined\"!==typeof Uint32Array)for(k=Array(80),d=0;16>d;d++)k[d]=a[d];else k=a;d=h[0];c=h[1];e=h[2];f=h[3];g=h[4];for(a=0;79>=a;a++)16<=a&&(b=k[a-3]^k[a-8]^k[a-14]^k[a-16],k[a]=b<<1|b>>>31),b=19>=a?c&e|~c&f:39>=a?c^e^f:59>=a?c&e|c&f|e&f:79>=a?c^e^f:void 0,b=(d<<5|d>>>27)+b+g+k[a]+this.i[Math.floor(a/20)]|0,g=f,f=e,e=c<<30|c>>>2,c=d,d=b;h[0]=h[0]+d|0;h[1]=h[1]+c|0;h[2]=h[2]+e|0;h[3]=h[3]+f|0;h[4]=h[4]+g|0}};\nsjcl.mode.ccm={name:\"ccm\",W:[],listenProgress:function(a){sjcl.mode.ccm.W.push(a)},unListenProgress:function(a){a=sjcl.mode.ccm.W.indexOf(a);-1<a&&sjcl.mode.ccm.W.splice(a,1)},ha:function(a){var b=sjcl.mode.ccm.W.slice(),d;for(d=0;d<b.length;d+=1)b[d](a)},encrypt:function(a,b,d,c,e){var f,g=b.slice(0),h=sjcl.bitArray,k=h.bitLength(d)/8,l=h.bitLength(g)/8;e=e||64;c=c||[];if(7>k)throw new sjcl.exception.invalid(\"ccm: iv must be at least 7 bytes\");for(f=2;4>f&&l>>>8*f;f++);f<15-k&&(f=15-k);d=h.clamp(d,\n8*(15-f));b=sjcl.mode.ccm.R(a,b,d,c,e,f);g=sjcl.mode.ccm.u(a,g,d,b,e,f);return h.concat(g.data,g.tag)},decrypt:function(a,b,d,c,e){e=e||64;c=c||[];var f=sjcl.bitArray,g=f.bitLength(d)/8,h=f.bitLength(b),k=f.clamp(b,h-e),l=f.bitSlice(b,h-e),h=(h-e)/8;if(7>g)throw new sjcl.exception.invalid(\"ccm: iv must be at least 7 bytes\");for(b=2;4>b&&h>>>8*b;b++);b<15-g&&(b=15-g);d=f.clamp(d,8*(15-b));k=sjcl.mode.ccm.u(a,k,d,l,e,b);a=sjcl.mode.ccm.R(a,k.data,d,c,e,b);if(!f.equal(k.tag,a))throw new sjcl.exception.corrupt(\"ccm: tag doesn't match\");\nreturn k.data},oa:function(a,b,d,c,e,f){var g=[],h=sjcl.bitArray,k=h.l;c=[h.partial(8,(b.length?64:0)|c-2<<2|f-1)];c=h.concat(c,d);c[3]|=e;c=a.encrypt(c);if(b.length)for(d=h.bitLength(b)/8,65279>=d?g=[h.partial(16,d)]:0xffffffff>=d&&(g=h.concat([h.partial(16,65534)],[d])),g=h.concat(g,b),b=0;b<g.length;b+=4)c=a.encrypt(k(c,g.slice(b,b+4).concat([0,0,0])));return c},R:function(a,b,d,c,e,f){var g=sjcl.bitArray,h=g.l;e/=8;if(e%2||4>e||16<e)throw new sjcl.exception.invalid(\"ccm: invalid tag length\");\nif(0xffffffff<c.length||0xffffffff<b.length)throw new sjcl.exception.bug(\"ccm: can't deal with 4GiB or more data\");d=sjcl.mode.ccm.oa(a,c,d,e,g.bitLength(b)/8,f);for(c=0;c<b.length;c+=4)d=a.encrypt(h(d,b.slice(c,c+4).concat([0,0,0])));return g.clamp(d,8*e)},u:function(a,b,d,c,e,f){var g,h=sjcl.bitArray;g=h.l;var k=b.length,l=h.bitLength(b),m=k/50,n=m;d=h.concat([h.partial(8,f-1)],d).concat([0,0,0]).slice(0,4);c=h.bitSlice(g(c,a.encrypt(d)),0,e);if(!k)return{tag:c,data:[]};for(g=0;g<k;g+=4)g>m&&(sjcl.mode.ccm.ha(g/\nk),m+=n),d[3]++,e=a.encrypt(d),b[g]^=e[0],b[g+1]^=e[1],b[g+2]^=e[2],b[g+3]^=e[3];return{tag:c,data:h.clamp(b,l)}}};\nsjcl.mode.ctr={name:\"ctr\",encrypt:function(a,b,d,c){return sjcl.mode.ctr.ga(a,b,d,c)},decrypt:function(a,b,d,c){return sjcl.mode.ctr.ga(a,b,d,c)},ga:function(a,b,d,c){var e,f,g;if(c&&c.length)throw new sjcl.exception.invalid(\"ctr can't authenticate data\");if(128!==sjcl.bitArray.bitLength(d))throw new sjcl.exception.invalid(\"ctr iv must be 128 bits\");if(!(c=b.length))return[];d=d.slice(0);e=b.slice(0);b=sjcl.bitArray.bitLength(e);for(g=0;g<c;g+=4)f=a.encrypt(d),e[g]^=f[0],e[g+1]^=f[1],e[g+2]^=f[2],\ne[g+3]^=f[3],d[3]++;return sjcl.bitArray.clamp(e,b)}};void 0===sjcl.beware&&(sjcl.beware={});\nsjcl.beware[\"CBC mode is dangerous because it doesn't protect message integrity.\"]=function(){sjcl.mode.cbc={name:\"cbc\",encrypt:function(a,b,d,c){if(c&&c.length)throw new sjcl.exception.invalid(\"cbc can't authenticate data\");if(128!==sjcl.bitArray.bitLength(d))throw new sjcl.exception.invalid(\"cbc iv must be 128 bits\");var e=sjcl.bitArray,f=e.l,g=e.bitLength(b),h=0,k=[];if(g&7)throw new sjcl.exception.invalid(\"pkcs#5 padding only works for multiples of a byte\");for(c=0;h+128<=g;c+=4,h+=128)d=a.encrypt(f(d,\nb.slice(c,c+4))),k.splice(c,0,d[0],d[1],d[2],d[3]);g=0x1010101*(16-(g>>3&15));d=a.encrypt(f(d,e.concat(b,[g,g,g,g]).slice(c,c+4)));k.splice(c,0,d[0],d[1],d[2],d[3]);return k},decrypt:function(a,b,d,c){if(c&&c.length)throw new sjcl.exception.invalid(\"cbc can't authenticate data\");if(128!==sjcl.bitArray.bitLength(d))throw new sjcl.exception.invalid(\"cbc iv must be 128 bits\");if(sjcl.bitArray.bitLength(b)&127||!b.length)throw new sjcl.exception.corrupt(\"cbc ciphertext must be a positive multiple of the block size\");\nvar e=sjcl.bitArray,f=e.l,g,h=[];for(c=0;c<b.length;c+=4)g=b.slice(c,c+4),d=f(d,a.decrypt(g)),h.splice(c,0,d[0],d[1],d[2],d[3]),d=g;g=h[c-1]&255;if(0===g||16<g)throw new sjcl.exception.corrupt(\"pkcs#5 padding corrupt\");d=0x1010101*g;if(!e.equal(e.bitSlice([d,d,d,d],0,8*g),e.bitSlice(h,32*h.length-8*g,32*h.length)))throw new sjcl.exception.corrupt(\"pkcs#5 padding corrupt\");return e.bitSlice(h,0,32*h.length-8*g)}}};\nsjcl.mode.ocb2={name:\"ocb2\",encrypt:function(a,b,d,c,e,f){if(128!==sjcl.bitArray.bitLength(d))throw new sjcl.exception.invalid(\"ocb iv must be 128 bits\");var g,h=sjcl.mode.ocb2.U,k=sjcl.bitArray,l=k.l,m=[0,0,0,0];d=h(a.encrypt(d));var n,p=[];c=c||[];e=e||64;for(g=0;g+4<b.length;g+=4)n=b.slice(g,g+4),m=l(m,n),p=p.concat(l(d,a.encrypt(l(d,n)))),d=h(d);n=b.slice(g);b=k.bitLength(n);g=a.encrypt(l(d,[0,0,0,b]));n=k.clamp(l(n.concat([0,0,0]),g),b);m=l(m,l(n.concat([0,0,0]),g));m=a.encrypt(l(m,l(d,h(d))));\nc.length&&(m=l(m,f?c:sjcl.mode.ocb2.pmac(a,c)));return p.concat(k.concat(n,k.clamp(m,e)))},decrypt:function(a,b,d,c,e,f){if(128!==sjcl.bitArray.bitLength(d))throw new sjcl.exception.invalid(\"ocb iv must be 128 bits\");e=e||64;var g=sjcl.mode.ocb2.U,h=sjcl.bitArray,k=h.l,l=[0,0,0,0],m=g(a.encrypt(d)),n,p,r=sjcl.bitArray.bitLength(b)-e,t=[];c=c||[];for(d=0;d+4<r/32;d+=4)n=k(m,a.decrypt(k(m,b.slice(d,d+4)))),l=k(l,n),t=t.concat(n),m=g(m);p=r-32*d;n=a.encrypt(k(m,[0,0,0,p]));n=k(n,h.clamp(b.slice(d),p).concat([0,\n0,0]));l=k(l,n);l=a.encrypt(k(l,k(m,g(m))));c.length&&(l=k(l,f?c:sjcl.mode.ocb2.pmac(a,c)));if(!h.equal(h.clamp(l,e),h.bitSlice(b,r)))throw new sjcl.exception.corrupt(\"ocb: tag doesn't match\");return t.concat(h.clamp(n,p))},pmac:function(a,b){var d,c=sjcl.mode.ocb2.U,e=sjcl.bitArray,f=e.l,g=[0,0,0,0],h=a.encrypt([0,0,0,0]),h=f(h,c(c(h)));for(d=0;d+4<b.length;d+=4)h=c(h),g=f(g,a.encrypt(f(h,b.slice(d,d+4))));d=b.slice(d);128>e.bitLength(d)&&(h=f(h,c(h)),d=e.concat(d,[-2147483648,0,0,0]));g=f(g,d);\nreturn a.encrypt(f(c(f(h,c(h))),g))},U:function(a){return[a[0]<<1^a[1]>>>31,a[1]<<1^a[2]>>>31,a[2]<<1^a[3]>>>31,a[3]<<1^135*(a[0]>>>31)]}};\nsjcl.mode.ocb2progressive={createEncryptor:function(a,b,d,c,e){if(128!==sjcl.bitArray.bitLength(b))throw new sjcl.exception.invalid(\"ocb iv must be 128 bits\");var f,g=sjcl.mode.ocb2.U,h=sjcl.bitArray,k=h.l,l=[0,0,0,0],m=g(a.encrypt(b)),n,p,r=[],t;d=d||[];c=c||64;return{process:function(b){if(0==sjcl.bitArray.bitLength(b))return[];var d=[];r=r.concat(b);for(f=0;f+4<r.length;f+=4)n=r.slice(f,f+4),l=k(l,n),d=d.concat(k(m,a.encrypt(k(m,n)))),m=g(m);r=r.slice(f);return d},finalize:function(){n=r;p=h.bitLength(n);\nt=a.encrypt(k(m,[0,0,0,p]));n=h.clamp(k(n.concat([0,0,0]),t),p);l=k(l,k(n.concat([0,0,0]),t));l=a.encrypt(k(l,k(m,g(m))));d.length&&(l=k(l,e?d:sjcl.mode.ocb2.pmac(a,d)));return h.concat(n,h.clamp(l,c))}}},createDecryptor:function(a,b,d,c,e){if(128!==sjcl.bitArray.bitLength(b))throw new sjcl.exception.invalid(\"ocb iv must be 128 bits\");c=c||64;var f,g=sjcl.mode.ocb2.U,h=sjcl.bitArray,k=h.l,l=[0,0,0,0],m=g(a.encrypt(b)),n,p,r=[],t;d=d||[];return{process:function(b){if(0==b.length)return[];var d=[];\nr=r.concat(b);b=sjcl.bitArray.bitLength(r);for(f=0;f+4<(b-c)/32;f+=4)n=k(m,a.decrypt(k(m,r.slice(f,f+4)))),l=k(l,n),d=d.concat(n),m=g(m);r=r.slice(f);return d},finalize:function(){p=sjcl.bitArray.bitLength(r)-c;t=a.encrypt(k(m,[0,0,0,p]));n=k(t,h.clamp(r,p).concat([0,0,0]));l=k(l,n);l=a.encrypt(k(l,k(m,g(m))));d.length&&(l=k(l,e?d:sjcl.mode.ocb2.pmac(a,d)));if(!h.equal(h.clamp(l,c),h.bitSlice(r,p)))throw new sjcl.exception.corrupt(\"ocb: tag doesn't match\");return h.clamp(n,p)}}}};\nsjcl.mode.gcm={name:\"gcm\",encrypt:function(a,b,d,c,e){var f=b.slice(0);b=sjcl.bitArray;c=c||[];a=sjcl.mode.gcm.u(!0,a,f,c,d,e||128);return b.concat(a.data,a.tag)},decrypt:function(a,b,d,c,e){var f=b.slice(0),g=sjcl.bitArray,h=g.bitLength(f);e=e||128;c=c||[];e<=h?(b=g.bitSlice(f,h-e),f=g.bitSlice(f,0,h-e)):(b=f,f=[]);a=sjcl.mode.gcm.u(!1,a,f,c,d,e);if(!g.equal(a.tag,b))throw new sjcl.exception.corrupt(\"gcm: tag doesn't match\");return a.data},Da:function(a,b){var d,c,e,f,g,h=sjcl.bitArray.l;e=[0,0,\n0,0];f=b.slice(0);for(d=0;128>d;d++){(c=0!==(a[Math.floor(d/32)]&1<<31-d%32))&&(e=h(e,f));g=0!==(f[3]&1);for(c=3;0<c;c--)f[c]=f[c]>>>1|(f[c-1]&1)<<31;f[0]>>>=1;g&&(f[0]^=-0x1f000000)}return e},J:function(a,b,d){var c,e=d.length;b=b.slice(0);for(c=0;c<e;c+=4)b[0]^=0xffffffff&d[c],b[1]^=0xffffffff&d[c+1],b[2]^=0xffffffff&d[c+2],b[3]^=0xffffffff&d[c+3],b=sjcl.mode.gcm.Da(b,a);return b},u:function(a,b,d,c,e,f){var g,h,k,l,m,n,p,r,t=sjcl.bitArray;n=d.length;p=t.bitLength(d);r=t.bitLength(c);h=t.bitLength(e);\ng=b.encrypt([0,0,0,0]);96===h?(e=e.slice(0),e=t.concat(e,[1])):(e=sjcl.mode.gcm.J(g,[0,0,0,0],e),e=sjcl.mode.gcm.J(g,e,[0,0,Math.floor(h/0x100000000),h&0xffffffff]));h=sjcl.mode.gcm.J(g,[0,0,0,0],c);m=e.slice(0);c=h.slice(0);a||(c=sjcl.mode.gcm.J(g,h,d));for(l=0;l<n;l+=4)m[3]++,k=b.encrypt(m),d[l]^=k[0],d[l+1]^=k[1],d[l+2]^=k[2],d[l+3]^=k[3];d=t.clamp(d,p);a&&(c=sjcl.mode.gcm.J(g,h,d));a=[Math.floor(r/0x100000000),r&0xffffffff,Math.floor(p/0x100000000),p&0xffffffff];c=sjcl.mode.gcm.J(g,c,a);k=b.encrypt(e);\nc[0]^=k[0];c[1]^=k[1];c[2]^=k[2];c[3]^=k[3];return{tag:t.bitSlice(c,0,f),data:d}}};sjcl.misc.hmac=function(a,b){this.ka=b=b||sjcl.hash.sha256;var d=[[],[]],c,e=b.prototype.blockSize/32;this.P=[new b,new b];a.length>e&&(a=b.hash(a));for(c=0;c<e;c++)d[0][c]=a[c]^909522486,d[1][c]=a[c]^1549556828;this.P[0].update(d[0]);this.P[1].update(d[1]);this.ea=new b(this.P[0])};\nsjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){if(this.ta)throw new sjcl.exception.invalid(\"encrypt on already updated hmac called!\");this.update(a);return this.digest(a)};sjcl.misc.hmac.prototype.reset=function(){this.ea=new this.ka(this.P[0]);this.ta=!1};sjcl.misc.hmac.prototype.update=function(a){this.ta=!0;this.ea.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.ea.finalize(),a=(new this.ka(this.P[1])).update(a).finalize();this.reset();return a};\nsjcl.misc.pbkdf2=function(a,b,d,c,e){d=d||1E4;if(0>c||0>d)throw new sjcl.exception.invalid(\"invalid params to pbkdf2\");\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));\"string\"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));e=e||sjcl.misc.hmac;a=new e(a);var f,g,h,k,l=[],m=sjcl.bitArray;for(k=1;32*l.length<(c||1);k++){e=f=a.encrypt(m.concat(b,[k]));for(g=1;g<d;g++)for(f=a.encrypt(f),h=0;h<f.length;h++)e[h]^=f[h];l=l.concat(e)}c&&(l=m.clamp(l,c));return l};\nsjcl.misc.scrypt=function(a,b,d,c,e,f,g){var h=Math.pow(2,32)-1,k=sjcl.misc.scrypt;d=d||16384;c=c||8;e=e||1;if(c*e>=Math.pow(2,30))throw sjcl.exception.invalid(\"The parameters r, p must satisfy r * p < 2^30\");if(2>d||d&0!=d-1)throw sjcl.exception.invalid(\"The parameter N must be a power of 2.\");if(d>h/128/c)throw sjcl.exception.invalid(\"N too big.\");if(c>h/128/e)throw sjcl.exception.invalid(\"r too big.\");b=sjcl.misc.pbkdf2(a,b,1,128*e*c*8,g);c=b.length/e;k.reverse(b);for(h=0;h<e;h++){var l=b.slice(h*\nc,(h+1)*c);k.blockcopy(k.ROMix(l,d),0,b,h*c)}k.reverse(b);return sjcl.misc.pbkdf2(a,b,1,f,g)};\nsjcl.misc.scrypt.salsa20Core=function(a,b){function d(a,b){return a<<b|a>>>32-b}for(var c=a.slice(0),e=b;0<e;e-=2)c[4]^=d(c[0]+c[12],7),c[8]^=d(c[4]+c[0],9),c[12]^=d(c[8]+c[4],13),c[0]^=d(c[12]+c[8],18),c[9]^=d(c[5]+c[1],7),c[13]^=d(c[9]+c[5],9),c[1]^=d(c[13]+c[9],13),c[5]^=d(c[1]+c[13],18),c[14]^=d(c[10]+c[6],7),c[2]^=d(c[14]+c[10],9),c[6]^=d(c[2]+c[14],13),c[10]^=d(c[6]+c[2],18),c[3]^=d(c[15]+c[11],7),c[7]^=d(c[3]+c[15],9),c[11]^=d(c[7]+c[3],13),c[15]^=d(c[11]+c[7],18),c[1]^=d(c[0]+c[3],7),c[2]^=\nd(c[1]+c[0],9),c[3]^=d(c[2]+c[1],13),c[0]^=d(c[3]+c[2],18),c[6]^=d(c[5]+c[4],7),c[7]^=d(c[6]+c[5],9),c[4]^=d(c[7]+c[6],13),c[5]^=d(c[4]+c[7],18),c[11]^=d(c[10]+c[9],7),c[8]^=d(c[11]+c[10],9),c[9]^=d(c[8]+c[11],13),c[10]^=d(c[9]+c[8],18),c[12]^=d(c[15]+c[14],7),c[13]^=d(c[12]+c[15],9),c[14]^=d(c[13]+c[12],13),c[15]^=d(c[14]+c[13],18);for(e=0;16>e;e++)a[e]=c[e]+a[e]};\nsjcl.misc.scrypt.blockMix=function(a){for(var b=a.slice(-16),d=[],c=a.length/16,e=sjcl.misc.scrypt,f=0;f<c;f++)e.blockxor(a,16*f,b,0,16),e.salsa20Core(b,8),0==(f&1)?e.blockcopy(b,0,d,8*f):e.blockcopy(b,0,d,8*(f^1+c));return d};sjcl.misc.scrypt.ROMix=function(a,b){for(var d=a.slice(0),c=[],e=sjcl.misc.scrypt,f=0;f<b;f++)c.push(d.slice(0)),d=e.blockMix(d);for(f=0;f<b;f++)e.blockxor(c[d[d.length-16]&b-1],0,d,0),d=e.blockMix(d);return d};\nsjcl.misc.scrypt.reverse=function(a){for(var b in a){var d=a[b]&255,d=d<<8|a[b]>>>8&255,d=d<<8|a[b]>>>16&255,d=d<<8|a[b]>>>24&255;a[b]=d}};sjcl.misc.scrypt.blockcopy=function(a,b,d,c,e){var f;e=e||a.length-b;for(f=0;f<e;f++)d[c+f]=a[b+f]|0};sjcl.misc.scrypt.blockxor=function(a,b,d,c,e){var f;e=e||a.length-b;for(f=0;f<e;f++)d[c+f]=d[c+f]^a[b+f]|0};\nsjcl.prng=function(a){this.s=[new sjcl.hash.sha256];this.K=[0];this.da=0;this.X={};this.ca=0;this.ia={};this.qa=this.B=this.L=this.Aa=0;this.i=[0,0,0,0,0,0,0,0];this.F=[0,0,0,0];this.aa=void 0;this.ba=a;this.V=!1;this.$={progress:{},seeded:{}};this.O=this.za=0;this.Y=1;this.Z=2;this.va=0x10000;this.fa=[0,48,64,96,128,192,0x100,384,512,768,1024];this.wa=3E4;this.ua=80};\nsjcl.prng.prototype={randomWords:function(a,b){var d=[],c;c=this.isReady(b);var e;if(c===this.O)throw new sjcl.exception.notReady(\"generator isn't seeded\");if(c&this.Z){c=!(c&this.Y);e=[];var f=0,g;this.qa=e[0]=(new Date).valueOf()+this.wa;for(g=0;16>g;g++)e.push(0x100000000*Math.random()|0);for(g=0;g<this.s.length&&(e=e.concat(this.s[g].finalize()),f+=this.K[g],this.K[g]=0,c||!(this.da&1<<g));g++);this.da>=1<<this.s.length&&(this.s.push(new sjcl.hash.sha256),this.K.push(0));this.B-=f;f>this.L&&(this.L=\nf);this.da++;this.i=sjcl.hash.sha256.hash(this.i.concat(e));this.aa=new sjcl.cipher.aes(this.i);for(c=0;4>c&&(this.F[c]=this.F[c]+1|0,!this.F[c]);c++);}for(c=0;c<a;c+=4)0===(c+1)%this.va&&ca(this),e=da(this),d.push(e[0],e[1],e[2],e[3]);ca(this);return d.slice(0,a)},setDefaultParanoia:function(a,b){if(0===a&&\"Setting paranoia=0 will ruin your security; use it only for testing\"!==b)throw new sjcl.exception.invalid(\"Setting paranoia=0 will ruin your security; use it only for testing\");this.ba=a},addEntropy:function(a,\nb,d){d=d||\"user\";var c,e,f=(new Date).valueOf(),g=this.X[d],h=this.isReady(),k=0;c=this.ia[d];void 0===c&&(c=this.ia[d]=this.Aa++);void 0===g&&(g=this.X[d]=0);this.X[d]=(this.X[d]+1)%this.s.length;switch(typeof a){case \"number\":void 0===b&&(b=1);this.s[g].update([c,this.ca++,1,b,f,1,a|0]);break;case \"object\":d=Object.prototype.toString.call(a);if(\"[object Uint32Array]\"===d){e=[];for(d=0;d<a.length;d++)e.push(a[d]);a=e}else for(\"[object Array]\"!==d&&(k=1),d=0;d<a.length&&!k;d++)\"number\"!==typeof a[d]&&\n(k=1);if(!k){if(void 0===b)for(d=b=0;d<a.length;d++)for(e=a[d];0<e;)b++,e=e>>>1;this.s[g].update([c,this.ca++,2,b,f,a.length].concat(a))}break;case \"string\":void 0===b&&(b=a.length);this.s[g].update([c,this.ca++,3,b,f,a.length]);this.s[g].update(a);break;default:k=1}if(k)throw new sjcl.exception.bug(\"random: addEntropy only supports number, array of numbers or string\");this.K[g]+=b;this.B+=b;h===this.O&&(this.isReady()!==this.O&&ea(\"seeded\",Math.max(this.L,this.B)),ea(\"progress\",this.getProgress()))},\nisReady:function(a){a=this.fa[void 0!==a?a:this.ba];return this.L&&this.L>=a?this.K[0]>this.ua&&(new Date).valueOf()>this.qa?this.Z|this.Y:this.Y:this.B>=a?this.Z|this.O:this.O},getProgress:function(a){a=this.fa[a?a:this.ba];return this.L>=a?1:this.B>a?1:this.B/a},startCollectors:function(){if(!this.V){this.j={loadTimeCollector:H(this,this.Ia),mouseCollector:H(this,this.Ja),keyboardCollector:H(this,this.Ga),accelerometerCollector:H(this,this.xa),touchCollector:H(this,this.La)};if(window.addEventListener)window.addEventListener(\"load\",\nthis.j.loadTimeCollector,!1),window.addEventListener(\"mousemove\",this.j.mouseCollector,!1),window.addEventListener(\"keypress\",this.j.keyboardCollector,!1),window.addEventListener(\"devicemotion\",this.j.accelerometerCollector,!1),window.addEventListener(\"touchmove\",this.j.touchCollector,!1);else if(document.attachEvent)document.attachEvent(\"onload\",this.j.loadTimeCollector),document.attachEvent(\"onmousemove\",this.j.mouseCollector),document.attachEvent(\"keypress\",this.j.keyboardCollector);else throw new sjcl.exception.bug(\"can't attach event\");\nthis.V=!0}},stopCollectors:function(){this.V&&(window.removeEventListener?(window.removeEventListener(\"load\",this.j.loadTimeCollector,!1),window.removeEventListener(\"mousemove\",this.j.mouseCollector,!1),window.removeEventListener(\"keypress\",this.j.keyboardCollector,!1),window.removeEventListener(\"devicemotion\",this.j.accelerometerCollector,!1),window.removeEventListener(\"touchmove\",this.j.touchCollector,!1)):document.detachEvent&&(document.detachEvent(\"onload\",this.j.loadTimeCollector),document.detachEvent(\"onmousemove\",\nthis.j.mouseCollector),document.detachEvent(\"keypress\",this.j.keyboardCollector)),this.V=!1)},addEventListener:function(a,b){this.$[a][this.za++]=b},removeEventListener:function(a,b){var d,c,e=this.$[a],f=[];for(c in e)e.hasOwnProperty(c)&&e[c]===b&&f.push(c);for(d=0;d<f.length;d++)c=f[d],delete e[c]},Ga:function(){R(this,1)},Ja:function(a){var b,d;try{b=a.x||a.clientX||a.offsetX||0,d=a.y||a.clientY||a.offsetY||0}catch(c){d=b=0}0!=b&&0!=d&&this.addEntropy([b,d],2,\"mouse\");R(this,0)},La:function(a){a=\na.touches[0]||a.changedTouches[0];this.addEntropy([a.pageX||a.clientX,a.pageY||a.clientY],1,\"touch\");R(this,0)},Ia:function(){R(this,2)},xa:function(a){a=a.accelerationIncludingGravity.x||a.accelerationIncludingGravity.y||a.accelerationIncludingGravity.z;if(window.orientation){var b=window.orientation;\"number\"===typeof b&&this.addEntropy(b,1,\"accelerometer\")}a&&this.addEntropy(a,2,\"accelerometer\");R(this,0)}};\nfunction ea(a,b){var d,c=sjcl.random.$[a],e=[];for(d in c)c.hasOwnProperty(d)&&e.push(c[d]);for(d=0;d<e.length;d++)e[d](b)}function R(a,b){\"undefined\"!==typeof window&&window.performance&&\"function\"===typeof window.performance.now?a.addEntropy(window.performance.now(),b,\"loadtime\"):a.addEntropy((new Date).valueOf(),b,\"loadtime\")}function ca(a){a.i=da(a).concat(da(a));a.aa=new sjcl.cipher.aes(a.i)}function da(a){for(var b=0;4>b&&(a.F[b]=a.F[b]+1|0,!a.F[b]);b++);return a.aa.encrypt(a.F)}\nfunction H(a,b){return function(){b.apply(a,arguments)}}sjcl.random=new sjcl.prng(6);\na:try{var S,fa,V,ia;if(ia=\"undefined\"!==typeof module&&module.exports){var ja;try{ja=require(\"crypto\")}catch(a){ja=null}ia=fa=ja}if(ia&&fa.randomBytes)S=fa.randomBytes(128),S=new Uint32Array((new Uint8Array(S)).buffer),sjcl.random.addEntropy(S,1024,\"crypto['randomBytes']\");else if(\"undefined\"!==typeof window&&\"undefined\"!==typeof Uint32Array){V=new Uint32Array(32);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(V);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(V);\nelse break a;sjcl.random.addEntropy(V,1024,\"crypto['getRandomValues']\")}}catch(a){\"undefined\"!==typeof window&&window.console&&(console.log(\"There was an error collecting entropy from the browser:\"),console.log(a))}\nsjcl.json={defaults:{v:1,iter:1E4,ks:128,ts:64,mode:\"ccm\",adata:\"\",cipher:\"aes\"},Ca:function(a,b,d,c){d=d||{};c=c||{};var e=sjcl.json,f=e.C({iv:sjcl.random.randomWords(4,0)},e.defaults),g;e.C(f,d);d=f.adata;\"string\"===typeof f.salt&&(f.salt=sjcl.codec.base64.toBits(f.salt));\"string\"===typeof f.iv&&(f.iv=sjcl.codec.base64.toBits(f.iv));if(!sjcl.mode[f.mode]||!sjcl.cipher[f.cipher]||\"string\"===typeof a&&100>=f.iter||64!==f.ts&&96!==f.ts&&128!==f.ts||128!==f.ks&&192!==f.ks&&0x100!==f.ks||2>f.iv.length||\n4<f.iv.length)throw new sjcl.exception.invalid(\"json encrypt: invalid parameters\");\"string\"===typeof a?(g=sjcl.misc.cachedPbkdf2(a,f),a=g.key.slice(0,f.ks/32),f.salt=g.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.publicKey&&(g=a.kem(),f.kemtag=g.tag,a=g.key.slice(0,f.ks/32));\"string\"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));\"string\"===typeof d&&(f.adata=d=sjcl.codec.utf8String.toBits(d));g=new sjcl.cipher[f.cipher](a);e.C(c,f);c.key=a;f.ct=\"ccm\"===f.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&\nb instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.encrypt(g,b,f.iv,d,f.ts):sjcl.mode[f.mode].encrypt(g,b,f.iv,d,f.ts);return f},encrypt:function(a,b,d,c){var e=sjcl.json,f=e.Ca.apply(e,arguments);return e.encode(f)},Ba:function(a,b,d,c){d=d||{};c=c||{};var e=sjcl.json;b=e.C(e.C(e.C({},e.defaults),b),d,!0);var f,g;f=b.adata;\"string\"===typeof b.salt&&(b.salt=sjcl.codec.base64.toBits(b.salt));\"string\"===typeof b.iv&&(b.iv=sjcl.codec.base64.toBits(b.iv));if(!sjcl.mode[b.mode]||!sjcl.cipher[b.cipher]||\"string\"===\ntypeof a&&100>=b.iter||64!==b.ts&&96!==b.ts&&128!==b.ts||128!==b.ks&&192!==b.ks&&0x100!==b.ks||!b.iv||2>b.iv.length||4<b.iv.length)throw new sjcl.exception.invalid(\"json decrypt: invalid parameters\");\"string\"===typeof a?(g=sjcl.misc.cachedPbkdf2(a,b),a=g.key.slice(0,b.ks/32),b.salt=g.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.secretKey&&(a=a.unkem(sjcl.codec.base64.toBits(b.kemtag)).slice(0,b.ks/32));\"string\"===typeof f&&(f=sjcl.codec.utf8String.toBits(f));g=new sjcl.cipher[b.cipher](a);f=\"ccm\"===\nb.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&b.ct instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.decrypt(g,b.ct,b.iv,b.tag,f,b.ts):sjcl.mode[b.mode].decrypt(g,b.ct,b.iv,f,b.ts);e.C(c,b);c.key=a;return 1===d.raw?f:sjcl.codec.utf8String.fromBits(f)},decrypt:function(a,b,d,c){var e=sjcl.json;return e.Ba(a,e.decode(b),d,c)},encode:function(a){var b,d=\"{\",c=\"\";for(b in a)if(a.hasOwnProperty(b)){if(!b.match(/^[a-z0-9]+$/i))throw new sjcl.exception.invalid(\"json encode: invalid property name\");d+=c+'\"'+\nb+'\":';c=\",\";switch(typeof a[b]){case \"number\":case \"boolean\":d+=a[b];break;case \"string\":d+='\"'+escape(a[b])+'\"';break;case \"object\":d+='\"'+sjcl.codec.base64.fromBits(a[b],0)+'\"';break;default:throw new sjcl.exception.bug(\"json encode: unsupported type\");}}return d+\"}\"},decode:function(a){a=a.replace(/\\s/g,\"\");if(!a.match(/^\\{.*\\}$/))throw new sjcl.exception.invalid(\"json decode: this isn't json!\");a=a.replace(/^\\{|\\}$/g,\"\").split(/,/);var b={},d,c;for(d=0;d<a.length;d++){if(!(c=a[d].match(/^\\s*(?:([\"']?)([a-z][a-z0-9]*)\\1)\\s*:\\s*(?:(-?\\d+)|\"([a-z0-9+\\/%*_.@=\\-]*)\"|(true|false))$/i)))throw new sjcl.exception.invalid(\"json decode: this isn't json!\");\nnull!=c[3]?b[c[2]]=parseInt(c[3],10):null!=c[4]?b[c[2]]=c[2].match(/^(ct|adata|salt|iv)$/)?sjcl.codec.base64.toBits(c[4]):unescape(c[4]):null!=c[5]&&(b[c[2]]=\"true\"===c[5])}return b},C:function(a,b,d){void 0===a&&(a={});if(void 0===b)return a;for(var c in b)if(b.hasOwnProperty(c)){if(d&&void 0!==a[c]&&a[c]!==b[c])throw new sjcl.exception.invalid(\"required parameter overridden\");a[c]=b[c]}return a},Na:function(a,b){var d={},c;for(c in a)a.hasOwnProperty(c)&&a[c]!==b[c]&&(d[c]=a[c]);return d},Ma:function(a,\nb){var d={},c;for(c=0;c<b.length;c++)void 0!==a[b[c]]&&(d[b[c]]=a[b[c]]);return d}};sjcl.encrypt=sjcl.json.encrypt;sjcl.decrypt=sjcl.json.decrypt;sjcl.misc.Ka={};sjcl.misc.cachedPbkdf2=function(a,b){var d=sjcl.misc.Ka,c;b=b||{};c=b.iter||1E3;d=d[a]=d[a]||{};c=d[c]=d[c]||{firstSalt:b.salt&&b.salt.length?b.salt.slice(0):sjcl.random.randomWords(2,0)};d=void 0===b.salt?c.firstSalt:b.salt;c[d]=c[d]||sjcl.misc.pbkdf2(a,d,b.iter);return{key:c[d].slice(0),salt:d.slice(0)}};sjcl.bn=function(a){this.initWith(a)};\nsjcl.bn.prototype={radix:24,maxMul:8,o:sjcl.bn,copy:function(){return new this.o(this)},initWith:function(a){var b=0,d;switch(typeof a){case \"object\":this.limbs=a.limbs.slice(0);break;case \"number\":this.limbs=[a];this.normalize();break;case \"string\":a=a.replace(/^0x/,\"\");this.limbs=[];d=this.radix/4;for(b=0;b<a.length;b+=d)this.limbs.push(parseInt(a.substring(Math.max(a.length-b-d,0),a.length-b),16));break;default:this.limbs=[0]}return this},equals:function(a){\"number\"===typeof a&&(a=new this.o(a));\nvar b=0,d;this.fullReduce();a.fullReduce();for(d=0;d<this.limbs.length||d<a.limbs.length;d++)b|=this.getLimb(d)^a.getLimb(d);return 0===b},getLimb:function(a){return a>=this.limbs.length?0:this.limbs[a]},greaterEquals:function(a){\"number\"===typeof a&&(a=new this.o(a));var b=0,d=0,c,e,f;for(c=Math.max(this.limbs.length,a.limbs.length)-1;0<=c;c--)e=this.getLimb(c),f=a.getLimb(c),d|=f-e&~b,b|=e-f&~d;return(d|~b)>>>31},toString:function(){this.fullReduce();var a=\"\",b,d,c=this.limbs;for(b=0;b<this.limbs.length;b++){for(d=\nc[b].toString(16);b<this.limbs.length-1&&6>d.length;)d=\"0\"+d;a=d+a}return\"0x\"+a},addM:function(a){\"object\"!==typeof a&&(a=new this.o(a));var b=this.limbs,d=a.limbs;for(a=b.length;a<d.length;a++)b[a]=0;for(a=0;a<d.length;a++)b[a]+=d[a];return this},doubleM:function(){var a,b=0,d,c=this.radix,e=this.radixMask,f=this.limbs;for(a=0;a<f.length;a++)d=f[a],d=d+d+b,f[a]=d&e,b=d>>c;b&&f.push(b);return this},halveM:function(){var a,b=0,d,c=this.radix,e=this.limbs;for(a=e.length-1;0<=a;a--)d=e[a],e[a]=d+b>>\n1,b=(d&1)<<c;e[e.length-1]||e.pop();return this},subM:function(a){\"object\"!==typeof a&&(a=new this.o(a));var b=this.limbs,d=a.limbs;for(a=b.length;a<d.length;a++)b[a]=0;for(a=0;a<d.length;a++)b[a]-=d[a];return this},mod:function(a){var b=!this.greaterEquals(new sjcl.bn(0));a=(new sjcl.bn(a)).normalize();var d=(new sjcl.bn(this)).normalize(),c=0;for(b&&(d=(new sjcl.bn(0)).subM(d).normalize());d.greaterEquals(a);c++)a.doubleM();for(b&&(d=a.sub(d).normalize());0<c;c--)a.halveM(),d.greaterEquals(a)&&\nd.subM(a).normalize();return d.trim()},inverseMod:function(a){var b=new sjcl.bn(1),d=new sjcl.bn(0),c=new sjcl.bn(this),e=new sjcl.bn(a),f,g=1;if(!(a.limbs[0]&1))throw new sjcl.exception.invalid(\"inverseMod: p must be odd\");do for(c.limbs[0]&1&&(c.greaterEquals(e)||(f=c,c=e,e=f,f=b,b=d,d=f),c.subM(e),c.normalize(),b.greaterEquals(d)||b.addM(a),b.subM(d)),c.halveM(),b.limbs[0]&1&&b.addM(a),b.normalize(),b.halveM(),f=g=0;f<c.limbs.length;f++)g|=c.limbs[f];while(g);if(!e.equals(1))throw new sjcl.exception.invalid(\"inverseMod: p and x must be relatively prime\");\nreturn d},add:function(a){return this.copy().addM(a)},sub:function(a){return this.copy().subM(a)},mul:function(a){\"number\"===typeof a?a=new this.o(a):a.normalize();this.normalize();var b,d=this.limbs,c=a.limbs,e=d.length,f=c.length,g=new this.o,h=g.limbs,k,l=this.maxMul;for(b=0;b<this.limbs.length+a.limbs.length+1;b++)h[b]=0;for(b=0;b<e;b++){k=d[b];for(a=0;a<f;a++)h[b+a]+=k*c[a];--l||(l=this.maxMul,g.cnormalize())}return g.cnormalize().reduce()},square:function(){return this.mul(this)},power:function(a){a=\n(new sjcl.bn(a)).normalize().trim().limbs;var b,d,c=new this.o(1),e=this;for(b=0;b<a.length;b++)for(d=0;d<this.radix;d++){a[b]&1<<d&&(c=c.mul(e));if(b==a.length-1&&0==a[b]>>d+1)break;e=e.square()}return c},mulmod:function(a,b){return this.mod(b).mul(a.mod(b)).mod(b)},powermod:function(a,b){a=new sjcl.bn(a);b=new sjcl.bn(b);if(1==(b.limbs[0]&1)){var d=this.montpowermod(a,b);if(0!=d)return d}for(var c,e=a.normalize().trim().limbs,f=new this.o(1),g=this,d=0;d<e.length;d++)for(c=0;c<this.radix;c++){e[d]&\n1<<c&&(f=f.mulmod(g,b));if(d==e.length-1&&0==e[d]>>c+1)break;g=g.mulmod(g,b)}return f},montpowermod:function(a,b){function d(a,b){var d=b%a.radix;return(a.limbs[Math.floor(b/a.radix)]&1<<d)>>d}function c(a,d){var c,e,f=(1<<l+1)-1;c=a.mul(d);e=c.mul(r);e.limbs=e.limbs.slice(0,k.limbs.length);e.limbs.length==k.limbs.length&&(e.limbs[k.limbs.length-1]&=f);e=e.mul(b);e=c.add(e).normalize().trim();e.limbs=e.limbs.slice(k.limbs.length-1);for(c=0;c<e.limbs.length;c++)0<c&&(e.limbs[c-1]|=(e.limbs[c]&f)<<\ng-l-1),e.limbs[c]>>=l+1;e.greaterEquals(b)&&e.subM(b);return e}a=(new sjcl.bn(a)).normalize().trim();b=new sjcl.bn(b);var e,f,g=this.radix,h=new this.o(1);e=this.copy();var k,l,m;m=a.bitLength();k=new sjcl.bn({limbs:b.copy().normalize().trim().limbs.map(function(){return 0})});for(l=this.radix;0<l;l--)if(1==(b.limbs[b.limbs.length-1]>>l&1)){k.limbs[k.limbs.length-1]=1<<l;break}if(0==m)return this;m=18>m?1:48>m?3:144>m?4:768>m?5:6;var n=k.copy(),p=b.copy();f=new sjcl.bn(1);for(var r=new sjcl.bn(0),\nt=k.copy();t.greaterEquals(1);)t.halveM(),0==(f.limbs[0]&1)?(f.halveM(),r.halveM()):(f.addM(p),f.halveM(),r.halveM(),r.addM(n));f=f.normalize();r=r.normalize();n.doubleM();p=n.mulmod(n,b);if(!n.mul(f).sub(b.mul(r)).equals(1))return!1;e=c(e,p);h=c(h,p);n={};f=(1<<m-1)-1;n[1]=e.copy();n[2]=c(e,e);for(e=1;e<=f;e++)n[2*e+1]=c(n[2*e-1],n[2]);for(e=a.bitLength()-1;0<=e;)if(0==d(a,e))h=c(h,h),--e;else{for(p=e-m+1;0==d(a,p);)p++;t=0;for(f=p;f<=e;f++)t+=d(a,f)<<f-p,h=c(h,h);h=c(h,n[t]);e=p-1}return c(h,1)},\ntrim:function(){var a=this.limbs,b;do b=a.pop();while(a.length&&0===b);a.push(b);return this},reduce:function(){return this},fullReduce:function(){return this.normalize()},normalize:function(){var a=0,b,d=this.placeVal,c=this.ipv,e,f=this.limbs,g=f.length,h=this.radixMask;for(b=0;b<g||0!==a&&-1!==a;b++)a=(f[b]||0)+a,e=f[b]=a&h,a=(a-e)*c;-1===a&&(f[b-1]-=d);this.trim();return this},cnormalize:function(){var a=0,b,d=this.ipv,c,e=this.limbs,f=e.length,g=this.radixMask;for(b=0;b<f-1;b++)a=e[b]+a,c=e[b]=\na&g,a=(a-c)*d;e[b]+=a;return this},toBits:function(a){this.fullReduce();a=a||this.exponent||this.bitLength();var b=Math.floor((a-1)/24),d=sjcl.bitArray,c=[d.partial((a+7&-8)%this.radix||this.radix,this.getLimb(b))];for(b--;0<=b;b--)c=d.concat(c,[d.partial(Math.min(this.radix,a),this.getLimb(b))]),a-=this.radix;return c},bitLength:function(){this.fullReduce();for(var a=this.radix*(this.limbs.length-1),b=this.limbs[this.limbs.length-1];b;b>>>=1)a++;return a+7&-8}};\nsjcl.bn.fromBits=function(a){var b=new this,d=[],c=sjcl.bitArray,e=this.prototype,f=Math.min(this.bitLength||0x100000000,c.bitLength(a)),g=f%e.radix||e.radix;for(d[0]=c.extract(a,0,g);g<f;g+=e.radix)d.unshift(c.extract(a,g,e.radix));b.limbs=d;return b};sjcl.bn.prototype.ipv=1/(sjcl.bn.prototype.placeVal=Math.pow(2,sjcl.bn.prototype.radix));sjcl.bn.prototype.radixMask=(1<<sjcl.bn.prototype.radix)-1;\nsjcl.bn.pseudoMersennePrime=function(a,b){function d(a){this.initWith(a)}var c=d.prototype=new sjcl.bn,e,f,g;g=c.modOffset=Math.ceil(f=a/c.radix);c.exponent=a;c.offset=[];c.factor=[];c.minOffset=g;c.fullMask=0;c.fullOffset=[];c.fullFactor=[];c.modulus=d.modulus=new sjcl.bn(Math.pow(2,a));c.fullMask=0|-Math.pow(2,a%c.radix);for(e=0;e<b.length;e++)c.offset[e]=Math.floor(b[e][0]/c.radix-f),c.fullOffset[e]=Math.floor(b[e][0]/c.radix)-g+1,c.factor[e]=b[e][1]*Math.pow(.5,a-b[e][0]+c.offset[e]*c.radix),\nc.fullFactor[e]=b[e][1]*Math.pow(.5,a-b[e][0]+c.fullOffset[e]*c.radix),c.modulus.addM(new sjcl.bn(Math.pow(2,b[e][0])*b[e][1])),c.minOffset=Math.min(c.minOffset,-c.offset[e]);c.o=d;c.modulus.cnormalize();c.reduce=function(){var a,b,d,c=this.modOffset,e=this.limbs,f=this.offset,g=this.offset.length,t=this.factor,D;for(a=this.minOffset;e.length>c;){d=e.pop();D=e.length;for(b=0;b<g;b++)e[D+f[b]]-=t[b]*d;a--;a||(e.push(0),this.cnormalize(),a=this.minOffset)}this.cnormalize();return this};c.sa=-1===c.fullMask?\nc.reduce:function(){var a=this.limbs,b=a.length-1,d,c;this.reduce();if(b===this.modOffset-1){c=a[b]&this.fullMask;a[b]-=c;for(d=0;d<this.fullOffset.length;d++)a[b+this.fullOffset[d]]-=this.fullFactor[d]*c;this.normalize()}};c.fullReduce=function(){var a,b;this.sa();this.addM(this.modulus);this.addM(this.modulus);this.normalize();this.sa();for(b=this.limbs.length;b<this.modOffset;b++)this.limbs[b]=0;a=this.greaterEquals(this.modulus);for(b=0;b<this.limbs.length;b++)this.limbs[b]-=this.modulus.limbs[b]*\na;this.cnormalize();return this};c.inverse=function(){return this.power(this.modulus.sub(2))};d.fromBits=sjcl.bn.fromBits;return d};var W=sjcl.bn.pseudoMersennePrime;\nsjcl.bn.prime={p127:W(127,[[0,-1]]),p25519:W(255,[[0,-19]]),p192k:W(192,[[32,-1],[12,-1],[8,-1],[7,-1],[6,-1],[3,-1],[0,-1]]),p224k:W(224,[[32,-1],[12,-1],[11,-1],[9,-1],[7,-1],[4,-1],[1,-1],[0,-1]]),p256k:W(0x100,[[32,-1],[9,-1],[8,-1],[7,-1],[6,-1],[4,-1],[0,-1]]),p192:W(192,[[0,-1],[64,-1]]),p224:W(224,[[0,1],[96,-1]]),p256:W(0x100,[[0,-1],[96,1],[192,1],[224,-1]]),p384:W(384,[[0,-1],[32,1],[96,-1],[128,-1]]),p521:W(521,[[0,-1]])};\nsjcl.bn.random=function(a,b){\"object\"!==typeof a&&(a=new sjcl.bn(a));for(var d,c,e=a.limbs.length,f=a.limbs[e-1]+1,g=new sjcl.bn;;){do d=sjcl.random.randomWords(e,b),0>d[e-1]&&(d[e-1]+=0x100000000);while(Math.floor(d[e-1]/f)===Math.floor(0x100000000/f));d[e-1]%=f;for(c=0;c<e-1;c++)d[c]&=a.radixMask;g.limbs=d;if(!g.greaterEquals(a))return g}};sjcl.ecc={};\nsjcl.ecc.point=function(a,b,d){void 0===b?this.isIdentity=!0:(b instanceof sjcl.bn&&(b=new a.field(b)),d instanceof sjcl.bn&&(d=new a.field(d)),this.x=b,this.y=d,this.isIdentity=!1);this.curve=a};\nsjcl.ecc.point.prototype={toJac:function(){return new sjcl.ecc.pointJac(this.curve,this.x,this.y,new this.curve.field(1))},mult:function(a){return this.toJac().mult(a,this).toAffine()},mult2:function(a,b,d){return this.toJac().mult2(a,this,b,d).toAffine()},multiples:function(){var a,b,d;if(void 0===this.pa)for(d=this.toJac().doubl(),a=this.pa=[new sjcl.ecc.point(this.curve),this,d.toAffine()],b=3;16>b;b++)d=d.add(this),a.push(d.toAffine());return this.pa},negate:function(){var a=(new this.curve.field(0)).sub(this.y).normalize().reduce();\nreturn new sjcl.ecc.point(this.curve,this.x,a)},isValid:function(){return this.y.square().equals(this.curve.b.add(this.x.mul(this.curve.a.add(this.x.square()))))},toBits:function(){return sjcl.bitArray.concat(this.x.toBits(),this.y.toBits())}};sjcl.ecc.pointJac=function(a,b,d,c){void 0===b?this.isIdentity=!0:(this.x=b,this.y=d,this.z=c,this.isIdentity=!1);this.curve=a};\nsjcl.ecc.pointJac.prototype={add:function(a){var b,d,c,e;if(this.curve!==a.curve)throw new sjcl.exception.invalid(\"sjcl['ecc']['add'](): Points must be on the same curve to add them!\");if(this.isIdentity)return a.toJac();if(a.isIdentity)return this;b=this.z.square();d=a.x.mul(b).subM(this.x);if(d.equals(0))return this.y.equals(a.y.mul(b.mul(this.z)))?this.doubl():new sjcl.ecc.pointJac(this.curve);b=a.y.mul(b.mul(this.z)).subM(this.y);c=d.square();a=b.square();e=d.square().mul(d).addM(this.x.add(this.x).mul(c));\na=a.subM(e);b=this.x.mul(c).subM(a).mul(b);c=this.y.mul(d.square().mul(d));b=b.subM(c);d=this.z.mul(d);return new sjcl.ecc.pointJac(this.curve,a,b,d)},doubl:function(){if(this.isIdentity)return this;var a=this.y.square(),b=a.mul(this.x.mul(4)),d=a.square().mul(8),a=this.z.square(),c=this.curve.a.toString()==(new sjcl.bn(-3)).toString()?this.x.sub(a).mul(3).mul(this.x.add(a)):this.x.square().mul(3).add(a.square().mul(this.curve.a)),a=c.square().subM(b).subM(b),b=b.sub(a).mul(c).subM(d),d=this.y.add(this.y).mul(this.z);\nreturn new sjcl.ecc.pointJac(this.curve,a,b,d)},toAffine:function(){if(this.isIdentity||this.z.equals(0))return new sjcl.ecc.point(this.curve);var a=this.z.inverse(),b=a.square();return new sjcl.ecc.point(this.curve,this.x.mul(b).fullReduce(),this.y.mul(b.mul(a)).fullReduce())},mult:function(a,b){\"number\"===typeof a?a=[a]:void 0!==a.limbs&&(a=a.normalize().limbs);var d,c,e=(new sjcl.ecc.point(this.curve)).toJac(),f=b.multiples();for(d=a.length-1;0<=d;d--)for(c=sjcl.bn.prototype.radix-4;0<=c;c-=4)e=\ne.doubl().doubl().doubl().doubl().add(f[a[d]>>c&15]);return e},mult2:function(a,b,d,c){\"number\"===typeof a?a=[a]:void 0!==a.limbs&&(a=a.normalize().limbs);\"number\"===typeof d?d=[d]:void 0!==d.limbs&&(d=d.normalize().limbs);var e,f=(new sjcl.ecc.point(this.curve)).toJac();b=b.multiples();var g=c.multiples(),h,k;for(c=Math.max(a.length,d.length)-1;0<=c;c--)for(h=a[c]|0,k=d[c]|0,e=sjcl.bn.prototype.radix-4;0<=e;e-=4)f=f.doubl().doubl().doubl().doubl().add(b[h>>e&15]).add(g[k>>e&15]);return f},negate:function(){return this.toAffine().negate().toJac()},\nisValid:function(){var a=this.z.square(),b=a.square(),a=b.mul(a);return this.y.square().equals(this.curve.b.mul(a).add(this.x.mul(this.curve.a.mul(b).add(this.x.square()))))}};sjcl.ecc.curve=function(a,b,d,c,e,f){this.field=a;this.r=new sjcl.bn(b);this.a=new a(d);this.b=new a(c);this.G=new sjcl.ecc.point(this,new a(e),new a(f))};\nsjcl.ecc.curve.prototype.fromBits=function(a){var b=sjcl.bitArray,d=this.field.prototype.exponent+7&-8;a=new sjcl.ecc.point(this,this.field.fromBits(b.bitSlice(a,0,d)),this.field.fromBits(b.bitSlice(a,d,2*d)));if(!a.isValid())throw new sjcl.exception.corrupt(\"not on the curve!\");return a};\nsjcl.ecc.curves={c192:new sjcl.ecc.curve(sjcl.bn.prime.p192,\"0xffffffffffffffffffffffff99def836146bc9b1b4d22831\",-3,\"0x64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1\",\"0x188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012\",\"0x07192b95ffc8da78631011ed6b24cdd573f977a11e794811\"),c224:new sjcl.ecc.curve(sjcl.bn.prime.p224,\"0xffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d\",-3,\"0xb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4\",\"0xb70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21\",\n\"0xbd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34\"),c256:new sjcl.ecc.curve(sjcl.bn.prime.p256,\"0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551\",-3,\"0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b\",\"0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296\",\"0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5\"),c384:new sjcl.ecc.curve(sjcl.bn.prime.p384,\"0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973\",\n-3,\"0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef\",\"0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7\",\"0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f\"),c521:new sjcl.ecc.curve(sjcl.bn.prime.p521,\"0x1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409\",-3,\"0x051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00\",\n\"0xC6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66\",\"0x11839296A789A3BC0045C8A5FB42C7D1BD998F54449579B446817AFBD17273E662C97EE72995EF42640C550B9013FAD0761353C7086A272C24088BE94769FD16650\"),k192:new sjcl.ecc.curve(sjcl.bn.prime.p192k,\"0xfffffffffffffffffffffffe26f2fc170f69466a74defd8d\",0,3,\"0xdb4ff10ec057e9ae26b07d0280b7f4341da5d1b1eae06c7d\",\"0x9b2f2f6d9c5628a7844163d015be86344082aa88d95e2f9d\"),k224:new sjcl.ecc.curve(sjcl.bn.prime.p224k,\n\"0x010000000000000000000000000001dce8d2ec6184caf0a971769fb1f7\",0,5,\"0xa1455b334df099df30fc28a169a467e9e47075a90f7e650eb6b7a45c\",\"0x7e089fed7fba344282cafbd6f7e319f7c0b0bd59e2ca4bdb556d61a5\"),k256:new sjcl.ecc.curve(sjcl.bn.prime.p256k,\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\",0,7,\"0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\"0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\")};\nsjcl.ecc.curveName=function(a){for(var b in sjcl.ecc.curves)if(sjcl.ecc.curves.hasOwnProperty(b)&&sjcl.ecc.curves[b]===a)return b;throw new sjcl.exception.invalid(\"no such curve\");};\nsjcl.ecc.deserialize=function(a){if(!a||!a.curve||!sjcl.ecc.curves[a.curve])throw new sjcl.exception.invalid(\"invalid serialization\");if(-1===[\"elGamal\",\"ecdsa\"].indexOf(a.type))throw new sjcl.exception.invalid(\"invalid type\");var b=sjcl.ecc.curves[a.curve];if(a.secretKey){if(!a.exponent)throw new sjcl.exception.invalid(\"invalid exponent\");var d=new sjcl.bn(a.exponent);return new sjcl.ecc[a.type].secretKey(b,d)}if(!a.point)throw new sjcl.exception.invalid(\"invalid point\");d=b.fromBits(sjcl.codec.hex.toBits(a.point));\nreturn new sjcl.ecc[a.type].publicKey(b,d)};\nsjcl.ecc.basicKey={publicKey:function(a,b){this.w=a;this.I=a.r.bitLength();b instanceof Array?this.H=a.fromBits(b):this.H=b;this.serialize=function(){var b=sjcl.ecc.curveName(a);return{type:this.getType(),secretKey:!1,point:sjcl.codec.hex.fromBits(this.H.toBits()),curve:b}};this.get=function(){var a=this.H.toBits(),b=sjcl.bitArray.bitLength(a),e=sjcl.bitArray.bitSlice(a,0,b/2),a=sjcl.bitArray.bitSlice(a,b/2);return{x:e,y:a}}},secretKey:function(a,b){this.w=a;this.I=a.r.bitLength();this.S=b;this.serialize=\nfunction(){var b=this.get(),c=sjcl.ecc.curveName(a);return{type:this.getType(),secretKey:!0,exponent:sjcl.codec.hex.fromBits(b),curve:c}};this.get=function(){return this.S.toBits()}}};sjcl.ecc.basicKey.generateKeys=function(a){return function(b,d,c){b=b||0x100;if(\"number\"===typeof b&&(b=sjcl.ecc.curves[\"c\"+b],void 0===b))throw new sjcl.exception.invalid(\"no such curve\");c=c||sjcl.bn.random(b.r,d);d=b.G.mult(c);return{pub:new sjcl.ecc[a].publicKey(b,d),sec:new sjcl.ecc[a].secretKey(b,c)}}};\nsjcl.ecc.elGamal={generateKeys:sjcl.ecc.basicKey.generateKeys(\"elGamal\"),publicKey:function(a,b){sjcl.ecc.basicKey.publicKey.apply(this,arguments)},secretKey:function(a,b){sjcl.ecc.basicKey.secretKey.apply(this,arguments)}};sjcl.ecc.elGamal.publicKey.prototype={kem:function(a){a=sjcl.bn.random(this.w.r,a);var b=this.w.G.mult(a).toBits();return{key:sjcl.hash.sha256.hash(this.H.mult(a).toBits()),tag:b}},getType:function(){return\"elGamal\"}};\nsjcl.ecc.elGamal.secretKey.prototype={unkem:function(a){return sjcl.hash.sha256.hash(this.w.fromBits(a).mult(this.S).toBits())},dh:function(a){return sjcl.hash.sha256.hash(a.H.mult(this.S).toBits())},dhJavaEc:function(a){return a.H.mult(this.S).x.toBits()},getType:function(){return\"elGamal\"}};sjcl.ecc.ecdsa={generateKeys:sjcl.ecc.basicKey.generateKeys(\"ecdsa\")};sjcl.ecc.ecdsa.publicKey=function(a,b){sjcl.ecc.basicKey.publicKey.apply(this,arguments)};\nsjcl.ecc.ecdsa.publicKey.prototype={verify:function(a,b,d){sjcl.bitArray.bitLength(a)>this.I&&(a=sjcl.bitArray.clamp(a,this.I));var c=sjcl.bitArray,e=this.w.r,f=this.I,g=sjcl.bn.fromBits(c.bitSlice(b,0,f)),c=sjcl.bn.fromBits(c.bitSlice(b,f,2*f)),h=d?c:c.inverseMod(e),f=sjcl.bn.fromBits(a).mul(h).mod(e),h=g.mul(h).mod(e),f=this.w.G.mult2(f,h,this.H).x;if(g.equals(0)||c.equals(0)||g.greaterEquals(e)||c.greaterEquals(e)||!f.equals(g)){if(void 0===d)return this.verify(a,b,!0);throw new sjcl.exception.corrupt(\"signature didn't check out\");\n}return!0},getType:function(){return\"ecdsa\"}};sjcl.ecc.ecdsa.secretKey=function(a,b){sjcl.ecc.basicKey.secretKey.apply(this,arguments)};\nsjcl.ecc.ecdsa.secretKey.prototype={sign:function(a,b,d,c){sjcl.bitArray.bitLength(a)>this.I&&(a=sjcl.bitArray.clamp(a,this.I));var e=this.w.r,f=e.bitLength();c=c||sjcl.bn.random(e.sub(1),b).add(1);b=this.w.G.mult(c).x.mod(e);a=sjcl.bn.fromBits(a).add(b.mul(this.S));d=d?a.inverseMod(e).mul(c).mod(e):a.mul(c.inverseMod(e)).mod(e);return sjcl.bitArray.concat(b.toBits(f),d.toBits(f))},getType:function(){return\"ecdsa\"}};\nsjcl.keyexchange.srp={makeVerifier:function(a,b,d,c){a=sjcl.keyexchange.srp.makeX(a,b,d);a=sjcl.bn.fromBits(a);return c.g.powermod(a,c.N)},makeX:function(a,b,d){a=sjcl.hash.sha1.hash(a+\":\"+b);return sjcl.hash.sha1.hash(sjcl.bitArray.concat(d,a))},knownGroup:function(a){\"string\"!==typeof a&&(a=a.toString());sjcl.keyexchange.srp.ja||sjcl.keyexchange.srp.Ea();return sjcl.keyexchange.srp.na[a]},ja:!1,Ea:function(){var a,b;for(a=0;a<sjcl.keyexchange.srp.ma.length;a++)b=sjcl.keyexchange.srp.ma[a].toString(),\nb=sjcl.keyexchange.srp.na[b],b.N=new sjcl.bn(b.N),b.g=new sjcl.bn(b.g);sjcl.keyexchange.srp.ja=!0},ma:[1024,1536,2048,3072,0x1000,6144,8192],na:{1024:{N:\"EEAF0AB9ADB38DD69C33F80AFA8FC5E86072618775FF3C0B9EA2314C9C256576D674DF7496EA81D3383B4813D692C6E0E0D5D8E250B98BE48E495C1D6089DAD15DC7D7B46154D6B6CE8EF4AD69B15D4982559B297BCF1885C529F566660E57EC68EDBC3C05726CC02FD4CBF4976EAA9AFD5138FE8376435B9FC61D2FC0EB06E3\",g:2},1536:{N:\"9DEF3CAFB939277AB1F12A8617A47BBBDBA51DF499AC4C80BEEEA9614B19CC4D5F4F5F556E27CBDE51C6A94BE4607A291558903BA0D0F84380B655BB9A22E8DCDF028A7CEC67F0D08134B1C8B97989149B609E0BE3BAB63D47548381DBC5B1FC764E3F4B53DD9DA1158BFD3E2B9C8CF56EDF019539349627DB2FD53D24B7C48665772E437D6C7F8CE442734AF7CCB7AE837C264AE3A9BEB87F8A2FE9B8B5292E5A021FFF5E91479E8CE7A28C2442C6F315180F93499A234DCF76E3FED135F9BB\",\ng:2},2048:{N:\"AC6BDB41324A9A9BF166DE5E1389582FAF72B6651987EE07FC3192943DB56050A37329CBB4A099ED8193E0757767A13DD52312AB4B03310DCD7F48A9DA04FD50E8083969EDB767B0CF6095179A163AB3661A05FBD5FAAAE82918A9962F0B93B855F97993EC975EEAA80D740ADBF4FF747359D041D5C33EA71D281E446B14773BCA97B43A23FB801676BD207A436C6481F1D2B9078717461A5B9D32E688F87748544523B524B0D57D5EA77A2775D2ECFA032CFBDBF52FB3786160279004E57AE6AF874E7303CE53299CCC041C7BC308D82A5698F3A8D0C38271AE35F8E9DBFBB694B5C803D89F7AE435DE236D525F54759B65E372FCD68EF20FA7111F9E4AFF73\",\ng:2},3072:{N:\"FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF\",\ng:5},0x1000:{N:\"FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FFB7DC90A6C08F4DF435C934063199FFFFFFFFFFFFFFFF\",\ng:5},6144:{ng:5},8192:{N:\"FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FFB7DC90A6C08F4DF435C93402849236C3FAB4D27C7026C1D4DCB2602646DEC9751E763DBA37BDF8FF9406AD9E530EE5DB382F413001AEB06A53ED9027D831179727B0865A8918DA3EDBEBCF9B14ED44CE6CBACED4BB1BDB7F1447E6CC254B332051512BD7AF426FB8F401378CD2BF5983CA01C64B92ECF032EA15D1721D03F482D7CE6E74FEF6D55E702F46980C82B5A84031900B1C9E59E7C97FBEC7E8F323A97A7E36CC88BE0F1D45B7FF585AC54BD407B22B4154AACC8F6D7EBF48E1D814CC5ED20F8037E0A79715EEF29BE32806A1D58BB7C5DA76F550AA3D8A1FBFF0EB19CCB1A313D55CDA56C9EC2EF29632387FE8D76E3C0468043E8F663F4860EE12BF2D5B0B7474D6E694F91E6DBE115974A3926F12FEE5E438777CB6A932DF8CD8BEC4D073B931BA3BC832B68D9DD300741FA7BF8AFC47ED2576F6936BA424663AAB639C5AE4F5683423B4742BF1C978238F16CBE39D652DE3FDB8BEFC848AD922222E04A4037C0713EB57A81A23F0C73473FC646CEA306B4BCBC8862F8385DDFA9D4B7FA2C087E879683303ED5BDD3A062B3CF5B3A278A66D2A13F83F44F82DDF310EE074AB6A364597E899A0255DC164F31CC50846851DF9AB48195DED7EA1B1D510BD7EE74D73FAF36BC31ECFA268359046F4EB879F924009438B481C6CD7889A002ED5EE382BC9190DA6FC026E479558E4475677E9AA9E3050E2765694DFC81F56E880B96E7160C980DD98EDD3DFFFFFFFFFFFFFFFFF\",\ng:19}}};sjcl.arrayBuffer=sjcl.arrayBuffer||{};\"undefined\"===typeof ArrayBuffer&&function(a){a.ArrayBuffer=function(){};a.DataView=function(){}}(this);\nsjcl.arrayBuffer.ccm={mode:\"ccm\",defaults:{tlen:128},compat_encrypt:function(a,b,d,c,e){var f=sjcl.codec.arrayBuffer.fromBits(b,!0,16);b=sjcl.bitArray.bitLength(b)/8;c=c||[];a=sjcl.arrayBuffer.ccm.encrypt(a,f,d,c,e||64,b);d=sjcl.codec.arrayBuffer.toBits(a.ciphertext_buffer);d=sjcl.bitArray.clamp(d,8*b);return sjcl.bitArray.concat(d,a.tag)},compat_decrypt:function(a,b,d,c,e){e=e||64;c=c||[];var f=sjcl.bitArray,g=f.bitLength(b),h=f.clamp(b,g-e);b=f.bitSlice(b,g-e);h=sjcl.codec.arrayBuffer.fromBits(h,\n!0,16);a=sjcl.arrayBuffer.ccm.decrypt(a,h,d,b,c,e,(g-e)/8);return sjcl.bitArray.clamp(sjcl.codec.arrayBuffer.toBits(a),g-e)},encrypt:function(a,b,d,c,e,f){var g,h=sjcl.bitArray,k=h.bitLength(d)/8;c=c||[];e=e||sjcl.arrayBuffer.ccm.defaults.tlen;f=f||b.byteLength;e=Math.ceil(e/8);for(g=2;4>g&&f>>>8*g;g++);g<15-k&&(g=15-k);d=h.clamp(d,8*(15-g));c=sjcl.arrayBuffer.ccm.R(a,b,d,c,e,f,g);c=sjcl.arrayBuffer.ccm.u(a,b,d,c,e,g);return{ciphertext_buffer:b,tag:c}},decrypt:function(a,b,d,c,e,f,g){var h,k=sjcl.bitArray,\nl=k.bitLength(d)/8;e=e||[];f=f||sjcl.arrayBuffer.ccm.defaults.tlen;g=g||b.byteLength;f=Math.ceil(f/8);for(h=2;4>h&&g>>>8*h;h++);h<15-l&&(h=15-l);d=k.clamp(d,8*(15-h));c=sjcl.arrayBuffer.ccm.u(a,b,d,c,f,h);a=sjcl.arrayBuffer.ccm.R(a,b,d,e,f,g,h);if(!sjcl.bitArray.equal(c,a))throw new sjcl.exception.corrupt(\"ccm: tag doesn't match\");return b},R:function(a,b,d,c,e,f,g){d=sjcl.mode.ccm.oa(a,c,d,e,f,g);if(0!==b.byteLength){for(c=new DataView(b);f<b.byteLength;f++)c.setUint8(f,0);for(f=0;f<c.byteLength;f+=\n16)d[0]^=c.getUint32(f),d[1]^=c.getUint32(f+4),d[2]^=c.getUint32(f+8),d[3]^=c.getUint32(f+12),d=a.encrypt(d)}return sjcl.bitArray.clamp(d,8*e)},u:function(a,b,d,c,e,f){var g,h,k,l,m;g=sjcl.bitArray;h=g.l;var n=b.byteLength/50,p=n;new DataView(new ArrayBuffer(16));d=g.concat([g.partial(8,f-1)],d).concat([0,0,0]).slice(0,4);c=g.bitSlice(h(c,a.encrypt(d)),0,8*e);d[3]++;0===d[3]&&d[2]++;if(0!==b.byteLength)for(e=new DataView(b),m=0;m<e.byteLength;m+=16)m>n&&(sjcl.mode.ccm.ha(m/b.byteLength),n+=p),l=a.encrypt(d),\ng=e.getUint32(m),h=e.getUint32(m+4),f=e.getUint32(m+8),k=e.getUint32(m+12),e.setUint32(m,g^l[0]),e.setUint32(m+4,h^l[1]),e.setUint32(m+8,f^l[2]),e.setUint32(m+12,k^l[3]),d[3]++,0===d[3]&&d[2]++;return c}};\"undefined\"===typeof ArrayBuffer&&function(a){a.ArrayBuffer=function(){};a.DataView=function(){}}(this);\nsjcl.codec.arrayBuffer={fromBits:function(a,b,d){var c;b=void 0==b?!0:b;d=d||8;if(0===a.length)return new ArrayBuffer(0);c=sjcl.bitArray.bitLength(a)/8;if(0!==sjcl.bitArray.bitLength(a)%8)throw new sjcl.exception.invalid(\"Invalid bit size, must be divisble by 8 to fit in an arraybuffer correctly\");b&&0!==c%d&&(c+=d-c%d);d=new DataView(new ArrayBuffer(4*a.length));for(b=0;b<a.length;b++)d.setUint32(4*b,a[b]<<32);a=new DataView(new ArrayBuffer(c));if(a.byteLength===d.byteLength)return d.buffer;c=d.byteLength<\na.byteLength?d.byteLength:a.byteLength;for(b=0;b<c;b++)a.setUint8(b,d.getUint8(b));return a.buffer},toBits:function(a){var b=[],d,c,e;if(0===a.byteLength)return[];c=new DataView(a);d=c.byteLength-c.byteLength%4;for(a=0;a<d;a+=4)b.push(c.getUint32(a));if(0!=c.byteLength%4){e=new DataView(new ArrayBuffer(4));a=0;for(var f=c.byteLength%4;a<f;a++)e.setUint8(a+4-f,c.getUint8(d+a));b.push(sjcl.bitArray.partial(c.byteLength%4*8,e.getUint32(0)))}return b},Oa:function(a){function b(a){a=a+\"\";return 4<=a.length?\na:Array(4-a.length+1).join(\"0\")+a}a=new DataView(a);for(var d=\"\",c=0;c<a.byteLength;c+=2)0==c%16&&(d+=\"\\n\"+c.toString(16)+\"\\t\"),d+=b(a.getUint16(c).toString(16))+\" \";void 0===typeof console&&(console=console||{log:function(){}});console.log(d.toUpperCase())}};\n(function(){function a(a,b){return a<<b|a>>>32-b}function b(a){return(a&255)<<24|(a&0xff00)<<8|(a&0xff0000)>>>8|(a&-0x1000000)>>>24}function d(b){for(var d=this.c[0],c=this.c[1],g=this.c[2],h=this.c[3],x=this.c[4],B=this.c[0],A=this.c[1],y=this.c[2],u=this.c[3],v=this.c[4],q=0,w;16>q;++q)w=a(d+(c^g^h)+b[k[q]]+e[q],m[q])+x,d=x,x=h,h=a(g,10),g=c,c=w,w=a(B+(A^(y|~u))+b[l[q]]+f[q],n[q])+v,B=v,v=u,u=a(y,10),y=A,A=w;for(;32>q;++q)w=a(d+(c&g|~c&h)+b[k[q]]+e[q],m[q])+x,d=x,x=h,h=a(g,10),g=c,c=w,w=a(B+(A&u|\ny&~u)+b[l[q]]+f[q],n[q])+v,B=v,v=u,u=a(y,10),y=A,A=w;for(;48>q;++q)w=a(d+((c|~g)^h)+b[k[q]]+e[q],m[q])+x,d=x,x=h,h=a(g,10),g=c,c=w,w=a(B+((A|~y)^u)+b[l[q]]+f[q],n[q])+v,B=v,v=u,u=a(y,10),y=A,A=w;for(;64>q;++q)w=a(d+(c&h|g&~h)+b[k[q]]+e[q],m[q])+x,d=x,x=h,h=a(g,10),g=c,c=w,w=a(B+(A&y|~A&u)+b[l[q]]+f[q],n[q])+v,B=v,v=u,u=a(y,10),y=A,A=w;for(;80>q;++q)w=a(d+(c^(g|~h))+b[k[q]]+e[q],m[q])+x,d=x,x=h,h=a(g,10),g=c,c=w,w=a(B+(A^y^u)+b[l[q]]+f[q],n[q])+v,B=v,v=u,u=a(y,10),y=A,A=w;w=this.c[1]+g+u;this.c[1]=\nthis.c[2]+h+v;this.c[2]=this.c[3]+x+B;this.c[3]=this.c[4]+d+A;this.c[4]=this.c[0]+c+y;this.c[0]=w}sjcl.hash.ripemd160=function(a){a?(this.c=a.c.slice(0),this.h=a.h.slice(0),this.f=a.f):this.reset()};sjcl.hash.ripemd160.hash=function(a){return(new sjcl.hash.ripemd160).update(a).finalize()};sjcl.hash.ripemd160.prototype={reset:function(){this.c=c.slice(0);this.h=[];this.f=0;return this},update:function(a){\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var c,e=this.h=sjcl.bitArray.concat(this.h,\na);c=this.f;a=this.f=c+sjcl.bitArray.bitLength(a);if(0x1fffffffffffff<a)throw new sjcl.exception.invalid(\"Cannot hash more than 2^53 - 1 bits\");for(c=512+c-(512+c&0x1ff);c<=a;c+=512){for(var f=e.splice(0,16),g=0;16>g;++g)f[g]=b(f[g]);d.call(this,f)}return this},finalize:function(){var a=sjcl.bitArray.concat(this.h,[sjcl.bitArray.partial(1,1)]),c=(this.f+1)%512,c=(448<c?512:448)-c%448,e=c%32;for(0<e&&(a=sjcl.bitArray.concat(a,[sjcl.bitArray.partial(e,0)]));32<=c;c-=32)a.push(0);a.push(b(this.f|0));for(a.push(b(Math.floor(this.f/\n4294967296)));a.length;){e=a.splice(0,16);for(c=0;16>c;++c)e[c]=b(e[c]);d.call(this,e)}a=this.c;this.reset();for(c=0;5>c;++c)a[c]=b(a[c]);return a}};for(var c=[1732584193,4023233417,2562383102,271733878,3285377520],e=[0,1518500249,1859775393,2400959708,2840853838],f=[1352829926,1548603684,1836072691,2053994217,0],g=4;0<=g;--g)for(var h=1;16>h;++h)e.splice(g,0,e[g]),f.splice(g,0,f[g]);var k=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,\n5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],l=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],m=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],n=[8,9,9,11,13,15,15,\n5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]})();\"undefined\"!==typeof module&&module.exports&&(module.exports=sjcl);\"function\"===typeof define&&define([],function(){return sjcl});\n","let BigInt = require('bn.js');\nlet p256 = require(\"../ec\").P256;\nlet utils = require('../privacy_utils');\nlet aggUtils = require(\"./aggregatedrange_utils\");\nlet constants = require('../constants');\nlet params = require(\"./aggregaterangeparams\");\nlet PedCom = require(\"../pedersen\").PedCom;\n\nconst gobridge = require('golang-wasm-async-loader/dist/gobridge');\nconst {join} = require('path');\nrequire('golang-wasm-async-loader/lib/wasm_exec');\nrequire('isomorphic-fetch');\nconst {readFileSync} = require('fs');\n\nglobal.requestAnimationFrame = global.setImmediate;\n\nlet p = new Promise(resolve =>\n  resolve(readFileSync(join(__dirname, '../privacy.wasm')))\n);\nconst wasm = gobridge.default(p);\n\nclass AggregatedRangeProof {\n  constructor() {\n    this.cmsValue = [];\n    this.A = p256.curve.point(0, 0);\n    this.S = p256.curve.point(0, 0);\n    this.T1 = p256.curve.point(0, 0);\n    this.T2 = p256.curve.point(0, 0);\n    this.tauX = new BigInt(\"0\");\n    this.tHat = new BigInt(\"0\");\n    this.mu = new BigInt(\"0\");\n    this.innerProductProof = new aggUtils.InnerProductProof()\n  }\n\n  toBytes() {\n    let l = 1 + constants.COMPRESS_POINT_SIZE * this.cmsValue.length;\n    let innerProBytes = this.innerProductProof.bytes();\n    l = l + constants.COMPRESS_POINT_SIZE * 4 + constants.BIG_INT_SIZE * 3 + innerProBytes.length;\n    let bytes = new Uint8Array(l);\n    let offset = 1;\n    bytes.set([this.cmsValue.length], 0);\n    for (let i = 0; i < this.cmsValue.length; i++) {\n      bytes.set(this.cmsValue[i].compress(), offset);\n      offset = offset + constants.COMPRESS_POINT_SIZE;\n    }\n    bytes.set(this.A.compress(), offset);\n    offset += constants.COMPRESS_POINT_SIZE;\n    bytes.set(this.S.compress(), offset);\n    offset += constants.COMPRESS_POINT_SIZE;\n    bytes.set(this.T1.compress(), offset);\n    offset += constants.COMPRESS_POINT_SIZE;\n    bytes.set(this.T2.compress(), offset);\n    offset += constants.COMPRESS_POINT_SIZE;\n    bytes.set(this.tauX.toArray(\"be\", constants.BIG_INT_SIZE), offset);\n    offset += constants.BIG_INT_SIZE;\n    bytes.set(this.tHat.toArray(\"be\", constants.BIG_INT_SIZE), offset);\n    offset += constants.BIG_INT_SIZE;\n    bytes.set(this.mu.toArray(\"be\", constants.BIG_INT_SIZE), offset);\n    offset += constants.BIG_INT_SIZE;\n    bytes.set(innerProBytes, offset);\n    return bytes;\n  }\n\n  setBytes(bytes) {\n    if (bytes.length === 0) {\n      return null;\n    }\n    let lenValues = bytes[0];\n    let offset = 1;\n    this.cmsValue = new Array(lenValues);\n    for (let i = 0; i < lenValues; i++) {\n      this.cmsValue[i] = p256.decompress(bytes.slice(offset, offset + constants.COMPRESS_POINT_SIZE));\n      offset = offset + constants.COMPRESS_POINT_SIZE;\n    }\n    this.A = p256.decompress(bytes.slice(offset, offset + constants.COMPRESS_POINT_SIZE));\n    offset = offset + constants.COMPRESS_POINT_SIZE;\n\n    this.S = p256.decompress(bytes.slice(offset, offset + constants.COMPRESS_POINT_SIZE));\n    offset = offset + constants.COMPRESS_POINT_SIZE;\n\n    this.T1 = p256.decompress(bytes.slice(offset, offset + constants.COMPRESS_POINT_SIZE));\n    offset = offset + constants.COMPRESS_POINT_SIZE;\n\n    this.T2 = p256.decompress(bytes.slice(offset, offset + constants.COMPRESS_POINT_SIZE));\n    offset = offset + constants.COMPRESS_POINT_SIZE;\n\n    this.tauX = new BigInt(bytes.slice(offset, offset + constants.BIG_INT_SIZE), 16, \"be\");\n    offset = offset + constants.BIG_INT_SIZE;\n\n    this.tHat = new BigInt(bytes.slice(offset, offset + constants.BIG_INT_SIZE), 16, \"be\");\n    offset = offset + constants.BIG_INT_SIZE;\n\n    this.mu = new BigInt(bytes.slice(offset, offset + constants.BIG_INT_SIZE), 16, \"be\");\n    offset = offset + constants.BIG_INT_SIZE;\n\n    this.innerProductProof.setBytes(bytes.slice(offset));\n  }\n\n  verify() {\n    let numValue = this.cmsValue.length;\n    let numValuePad = aggUtils.pad(numValue);\n    for (let i = numValue; i < numValuePad; i++) {\n      this.cmsValue.push(p256.curve.point(0, 0));\n    }\n    let aggParam = new params.BulletproofParams(numValuePad);\n    let n = constants.MAX_EXP;\n\n    let numberTwo = new BigInt(\"2\");\n    let vector2powN = aggUtils.powerVector(numberTwo, n);\n    // recalculate challenge y, z\n    let y = params.generateChallengeForAggRange(aggParam, [this.A.compress(), this.S.compress()]);\n    let z = params.generateChallengeForAggRange(aggParam, [this.A.compress(), this.S.compress(), y.toArray(\"be\")]);\n    let zSquare = z.mul(z);\n    zSquare = zSquare.umod(p256.n);\n\n    // challenge x = hash(G || H || A || S || T1 || T2)\n    let x = params.generateChallengeForAggRange(aggParam, [this.A.compress(), this.S.compress(), this.T1.compress(), this.T2.compress()]);\n    let xSquare = x.mul(x);\n    xSquare = xSquare.umod(p256.n);\n\n    let vectorPowOfY = aggUtils.powerVector(y, n * numValuePad);\n\n    let HPrime = new Array(n * numValuePad);\n    for (let i = 0; i < n * numValuePad; i++) {\n      let yPowMinusOne = y.pow(new BigInt(i));\n      yPowMinusOne = yPowMinusOne.invm(p256.n);\n      HPrime[i] = aggParam.H[i].mul(yPowMinusOne);\n    }\n    // g^tHat * h^tauX = V^(z^2) * g^delta(y,z) * T1^x * T2^(x^2)\n    let deltaYZ = z.sub(zSquare);\n    //  = vectorPowOfY[vectorPowOfY.length - 1].mul(y).sub(new BigInt(-1));\n    // innerProduct1 = innerProduct1.div(y.sub(new BigInt(-1)));\n    let innerProduct1 = new BigInt(\"0\");\n    for (let i = 0; i < vectorPowOfY.length; i++) {\n      innerProduct1 = innerProduct1.add(vectorPowOfY[i])\n    }\n    // innerProduct1 = <1^(n*m), y^(n*m)>\n    innerProduct1 = innerProduct1.umod(p256.n);\n    deltaYZ = deltaYZ.mul(innerProduct1);\n\n    // innerProduct2 = <1^n, 2^n>\n    let innerProduct2 = vector2powN[vector2powN.length - 1].mul(numberTwo);\n    innerProduct2 = innerProduct2.sub(new BigInt(1));\n    innerProduct2 = innerProduct2.umod(p256.n);\n\n    let sum = new BigInt(\"0\");\n    let zTmp = zSquare;\n    for (let j = 0; j < numValuePad; j++) {\n      zTmp = zTmp.mul(z);\n      zTmp = zTmp.umod(p256.n);\n      sum = sum.add(zTmp);\n    }\n\n    sum = sum.mul(innerProduct2);\n    // console.log(deltaYZ.toString())\n\n    deltaYZ = deltaYZ.sub(sum);\n\n    deltaYZ = deltaYZ.umod(p256.n);\n\n    let left = PedCom.commitAtIndex(this.tHat, this.tauX, constants.VALUE);\n    let right = PedCom.G[constants.VALUE].mul(deltaYZ).add(this.T1.mul(x)).add(this.T2.mul(xSquare));\n    let expVector = aggUtils.vectorMulScalar(aggUtils.powerVector(z, numValuePad), zSquare);\n    for (let i = 0; i < this.cmsValue.length; i++) {\n      right = right.add(this.cmsValue[i].mul(expVector[i]))\n    }\n    if (left.getX().cmp(right.getX()) !== 0 && left.getY().cmp(right.getY()) !== 0) {\n      return false;\n    }\n    return this.innerProductProof.verify(aggParam)\n  }\n}\n\nclass AggregatedRangeWitness {\n  constructor() {\n\n  }\n\n  set(values, rands) {\n    let numValue = values.length;\n    this.values = new Array(numValue);\n    this.rands = new Array(numValue);\n    for (let i = 0; i < numValue; i++) {\n      this.values[i] = values[i];\n      this.rands[i] = rands[i];\n    }\n  }\n\n  async prove() {\n    let numValues = this.values.length;\n    let valueStrs = new Array(numValues)\n    let randStrs = new Array(numValues)\n\n    for (let i = 0; i < numValues; i++) {\n      valueStrs[i] = this.values[i].toString();\n      randStrs[i] = this.rands[i].toString();\n    }\n\n    let tmpObject = {\n      \"values\": valueStrs,\n      \"rands\": randStrs\n    }\n    let base64EncodedProof = await wasm.aggregatedRangeProve(JSON.stringify(tmpObject));\n\n    // console.log(\"proof base64 encode get from WASM: \", proof);\n    let proofBytes = utils.base64Decode(base64EncodedProof);\n    console.log(\"proofBytes: \", proofBytes.join(\", \"));\n    let proof = new (AggregatedRangeProof);\n    proof.setBytes(proofBytes);\n    return proof;\n\n    // console.time(\"bullet proof init data:\");\n    // let proof = new AggregatedRangeProof();\n    // let numValue = this.values.length;\n    // let numValuePad = aggUtils.pad(numValue);\n    // let values = new Array(numValuePad);\n    // let rands = new Array(numValuePad);\n    // for (let i = 0; i < numValue; i++) {\n    //   values[i] = this.values[i];\n    //   rands[i] = this.rands[i];\n    // }\n    // for (let i = numValue; i < numValuePad; i++) {\n    //   values[i] = new BigInt(\"0\");\n    //   rands[i] = new BigInt(\"0\");\n    // }\n    // console.timeEnd(\"bullet proof init data:\");\n\n    // console.time(\"init BulletproofParams\");\n    // let AggParam = new params.BulletproofParams(numValuePad);\n    // proof.cmsValue = new Array(numValue);\n    // for (let i = 0; i < numValue; i++) {\n    //   proof.cmsValue[i] = PedCom.commitAtIndex(values[i], rands[i], constants.VALUE);\n    // }\n    // console.timeEnd(\"init BulletproofParams\");\n\n    // console.time(\"vectorMinusOne:\");\n    // let n = constants.MAX_EXP;\n    // let aL = new Array(numValuePad);\n    // for (let i = 0; i < values.length; i++) {\n    //   let tmp = utils.convertIntToBinary(values[i], n);\n    //   for (let j = 0; j < n; j++) {\n    //     aL[i * n + j] = new BigInt(tmp[j])\n    //   }\n    // }\n\n    // let numberTwo = new BigInt(\"2\");\n    // let vectorMinusOne = new Array(numValuePad * n);\n    // for (let i = 0; i < n * numValuePad; i++) {\n    //   vectorMinusOne[i] = new BigInt(\"-1\")\n    // }\n\n    // console.timeEnd(\"vectorMinusOne:\");\n\n    // let vector2powN = aggUtils.powerVector(numberTwo, n);\n    // let aR = aggUtils.vectorAdd(aL, vectorMinusOne);\n\n    // console.time(\"alpha: \");\n    // let alpha = utils.randScalar();\n    // let A = params.EncodeVectors(aL, aR, AggParam.G, AggParam.H);\n    // A = A.add(PedCom.G[constants.RAND].mul(alpha));\n    // proof.A = A;\n    // console.timeEnd(\"alpha: \");\n\n    // console.time(\"sL, sR:\");\n    // // Random blinding vectors sL, sR\n    // let sL = new Array(numValuePad * n);\n    // let sR = new Array(numValuePad * n);\n    // for (let i = 0; i < n * numValuePad; i++) {\n    //   sL[i] = utils.randScalar();\n    //   sR[i] = utils.randScalar();\n    // }\n    // console.timeEnd(\"sL, sR:\");\n\n    // console.time(\"rho:\");\n    // let rho = utils.randScalar();\n    // let S = params.EncodeVectors(sL, sR, AggParam.G, AggParam.H);\n    // S = S.add(PedCom.G[constants.RAND].mul(rho));\n    // proof.S = S;\n    // console.timeEnd(\"rho:\");\n\n    // console.time(\"challenge y, z\");\n    // // challenge y, z\n    // let y = params.generateChallengeForAggRange(AggParam, [A.compress(), S.compress()]);\n    // let z = params.generateChallengeForAggRange(AggParam, [A.compress(), S.compress(), y.toArray(\"be\")]);\n    // let zNeg = z.neg();\n    // zNeg = zNeg.umod(p256.n);\n    // let zSquare = z.mul(z);\n    // zSquare = zSquare.umod(p256.n);\n    // let vectorPowOfY = aggUtils.powerVector(y, n * numValuePad);\n    // let l0 = aggUtils.vectorAddScalar(aL, zNeg);\n\n    // let l1 = sL;\n    // // r(X) = y^n hada (aR +z*1^n + sR*X) + z^2 * 2^n\n    // let hadaProduct = aggUtils.hadamardProduct(vectorPowOfY, aggUtils.vectorAddScalar(aR, z));\n\n\n    // let vectorSum = new Array(numValuePad * n);\n    // let zTmp = z;\n    // for (let j = 0; j < numValuePad; j++) {\n    //   zTmp = zTmp.mul(z);\n    //   zTmp = zTmp.umod(p256.n);\n    //   for (let i = 0; i < n; i++) {\n    //     vectorSum[j * n + i] = vector2powN[i].mul(zTmp);\n    //     vectorSum[j * n + i] = vectorSum[j * n + i].umod(p256.n);\n    //   }\n    // }\n\n    // let r0 = aggUtils.vectorAdd(hadaProduct, vectorSum);\n    // let r1 = aggUtils.hadamardProduct(vectorPowOfY, sR);\n    // //t(X) = <l(X), r(X)> = t0 + t1*X + t2*X^2\n    // let deltaYZ = z.sub(zSquare);\n    // console.timeEnd(\"challenge y, z\");\n\n    // console.time(\"innerProduct\");\n    // let innerProduct1 = vectorPowOfY[vectorPowOfY.length - 1].mul(y).sub(new BigInt(-1));\n    // // innerProduct1 = <1^(n*m), y^(n*m)>\n    // innerProduct1 = innerProduct1.umod(p256.n);\n    // deltaYZ = deltaYZ.mul(innerProduct1);\n\n    // // innerProduct2 = <1^n, 2^n>\n    // let innerProduct2 = vector2powN[vector2powN.length - 1].mul(numberTwo).sub(new BigInt(-1));\n    // innerProduct2 = innerProduct2.umod(p256.n);\n\n    // let sum = new BigInt(\"0\");\n    // zTmp = zSquare;\n    // for (let j = 0; j < numValuePad; j++) {\n    //   zTmp = zTmp.mul(z);\n    //   zTmp = zTmp.umod(p256.n);\n    //   sum = sum.add(zTmp);\n    // }\n    // sum = sum.mul(innerProduct2);\n    // deltaYZ = deltaYZ.sub(sum);\n    // deltaYZ = deltaYZ.umod(p256.n);\n\n    // // t1 = <l1, r0> + <l0, r1>\n    // let innerProduct3 = aggUtils.innerProduct(l1, r0);\n    // let innerProduct4 = aggUtils.innerProduct(l0, r1);\n    // let t1 = innerProduct3.add(innerProduct4);\n    // t1 = t1.umod(p256.n);\n    // let t2 = aggUtils.innerProduct(l1, r1);\n    // console.timeEnd(\"innerProduct\");\n\n    // console.time(\"calculate param 1:\");\n    // // commitment to t1, t2\n    // let tau1 = utils.randScalar();\n    // let tau2 = utils.randScalar();\n\n    // proof.T1 = PedCom.commitAtIndex(t1, tau1, constants.VALUE);\n    // proof.T2 = PedCom.commitAtIndex(t2, tau2, constants.VALUE);\n    // // challenge x = hash(G || H || A || S || T1 || T2)\n    // let x = params.generateChallengeForAggRange(AggParam, [proof.A.compress(), proof.S.compress(), proof.T1.compress(), proof.T2.compress()])\n    // let xSquare = x.mul(x);\n    // xSquare = xSquare.umod(p256.n);\n    // console.timeEnd(\"calculate param 1:\");\n\n    // console.time(\"calculate param 2:\");\n    // // lVector = aL - z*1^n + sL*x\n    // let lVector = aggUtils.vectorAdd(aggUtils.vectorAddScalar(aL, zNeg), aggUtils.vectorMulScalar(sL, x));\n    // // rVector = y^n hada (aR +z*1^n + sR*x) + z^2*2^n\n    // let tmpVector = aggUtils.vectorAdd(aggUtils.vectorAddScalar(aR, z), aggUtils.vectorMulScalar(sR, x));\n    // let rVector = aggUtils.hadamardProduct(vectorPowOfY, tmpVector);\n    // vectorSum = new Array(numValuePad * n);\n    // zTmp = z;\n    // for (let j = 0; j < numValuePad; j++) {\n    //   zTmp = zTmp.mul(z);\n    //   zTmp = zTmp.umod(p256.n);\n    //   for (let i = 0; i < n; i++) {\n    //     vectorSum[j * n + i] = vector2powN[i].mul(zTmp);\n    //     vectorSum[j * n + i] = vectorSum[j * n + i].umod(p256.n);\n    //   }\n    // }\n    // rVector = aggUtils.vectorAdd(rVector, vectorSum);\n    // // tHat = <lVector, rVector>\n    // proof.tHat = aggUtils.innerProduct(lVector, rVector);\n    // // blinding value for tHat: tauX = tau2*x^2 + tau1*x + z^2*rand\n    // proof.tauX = tau2.mul(xSquare);\n    // proof.tauX = proof.tauX.add(tau1.mul(x));\n    // zTmp = z;\n    // for (let j = 0; j < numValuePad; j++) {\n    //   zTmp = zTmp.mul(z);\n    //   zTmp = zTmp.umod(p256.n);\n    //   proof.tauX = proof.tauX.add(zTmp.mul(rands[j]))\n    // }\n    // proof.tauX = proof.tauX.umod(p256.n);\n    // // alpha, rho blind A, S\n    // // mu = alpha + rho*x\n    // proof.mu = rho.mul(x);\n    // proof.mu = proof.mu.add(alpha);\n    // proof.mu = proof.mu.umod(p256.n);\n    // console.timeEnd(\"calculate param:\");\n\n    // console.time(\"innerProductWit.prove:\");\n    // // instead of sending left vector and right vector, we use inner sum argument to reduce proof size from 2*n to 2(log2(n)) + 2\n    // let innerProductWit = new aggUtils.InnerProductWitness();\n    // innerProductWit.a = lVector;\n    // innerProductWit.b = rVector;\n    // innerProductWit.p = params.EncodeVectors(lVector, rVector, AggParam.G, AggParam.H);\n    // innerProductWit.p = innerProductWit.p.add(AggParam.U.mul(proof.tHat));\n    // proof.innerProductProof = innerProductWit.prove(AggParam);\n    // console.timeEnd(\"innerProductWit.prove:\");\n    // return proof\n  }\n}\n\nmodule.exports = {\n  AggregatedRangeProof,\n  AggregatedRangeWitness\n};\n","let BigInt = require('bn.js');\nlet utils = require('../privacy_utils');\nlet constant = require('../constants');\nlet p256 = require('../ec').P256;\n\nlet zeroPoint = p256.curve.point(0, 0);\nlet aggParams = require(\"./aggregaterangeparams\");\n\nclass InnerProductWitness {\n  constructor() {\n    this.a = [];\n    this.b = [];\n    this.p = zeroPoint\n  }\n\n  prove(AggParam) {\n    if (this.a.length !== this.b.length) {\n      return null\n    }\n    let n = this.a.length;\n    let a = new Array(n);\n    let b = new Array(n);\n    for (let i = 0; i < n; i++) {\n      a[i] = this.a[i];\n      b[i] = this.b[i];\n    }\n    let p = p256.curve.point(this.p.getX(), this.p.getY());\n    let G = new Array(n);\n    let H = new Array(n);\n    for (let i = 0; i < n; i++) {\n      G[i] = p256.curve.point(AggParam.G[i].getX(), AggParam.G[i].getY());\n      H[i] = p256.curve.point(AggParam.H[i].getX(), AggParam.H[i].getY());\n    }\n    let proof = new InnerProductProof();\n    proof.l = [];\n    proof.r = [];\n    proof.p = this.p;\n    console.time(\"While\")\n    while (n > 1) {\n      let temp = n;\n      console.time(\"While\" + temp)\n      let nPrime = n / 2;\n\n      let cL = innerProduct(a.slice(0, nPrime), b.slice(nPrime,));\n      let cR = innerProduct(a.slice(nPrime,), b.slice(0, nPrime));\n\n      let L = aggParams.EncodeVectors(a.slice(0, nPrime), b.slice(nPrime,), G.slice(nPrime,), H.slice(0, nPrime));\n      L = L.add(AggParam.U.mul(cL));\n      proof.l = proof.l.concat(L);\n      let R = aggParams.EncodeVectors(a.slice(nPrime,), b.slice(0, nPrime), G.slice(0, nPrime), H.slice(nPrime,));\n      R = R.add(AggParam.U.mul(cR));\n      proof.r = proof.r.concat(R);\n\n      // calculate challenge x = hash(G || H || u || p ||  l || r)\n      let x = aggParams.generateChallengeForAggRange(AggParam, [p.compress(), L.compress(), R.compress()]);\n      let xInverse = x.invm(p256.n);\n\n      console.time(\"GPrime, HPrime: \")\n      let GPrime = new Array(nPrime);\n      let HPrime = new Array(nPrime);\n      for (let i = 0; i < nPrime; i++) {\n        GPrime[i] = G[i].mul(xInverse).add(G[i + nPrime].mul(x));\n        HPrime[i] = H[i].mul(x).add(H[i + nPrime].mul(xInverse));\n      }\n      console.timeEnd(\"GPrime, HPrime: \")\n\n      let xSquare = x.mul(x);\n      let xSquareInverse = xSquare.invm(p256.n);\n      let PPrime = L.mul(xSquare).add(p).add(R.mul(xSquareInverse));\n\n      // calculate aPrime, bPrime\n      console.time(\"calculate aPrime, bPrime:\")\n      let aPrime = new Array(nPrime);\n      let bPrime = new Array(nPrime);\n      for (let i = 0; i < nPrime; i++) {\n        aPrime[i] = a[i].mul(x);\n        aPrime[i] = aPrime[i].add(a[i + nPrime].mul(xInverse));\n        aPrime[i] = aPrime[i].umod(p256.n);\n\n        bPrime[i] = b[i].mul(xInverse);\n        bPrime[i] = bPrime[i].add(b[i + nPrime].mul(x));\n        bPrime[i] = bPrime[i].umod(p256.n);\n      }\n      console.timeEnd(\"calculate aPrime, bPrime:\")\n\n      a = aPrime;\n      b = bPrime;\n      p = p256.curve.point(PPrime.getX(), PPrime.getY());\n      G = GPrime;\n      H = HPrime;\n      n = nPrime;\n\n      console.timeEnd(\"While\" + temp)\n    }\n    console.timeEnd(\"While\")\n\n    proof.a = a[0];\n    proof.b = b[0];\n\n    return proof\n  }\n}\n\nclass InnerProductProof {\n  constructor() {\n    this.l = [];\n    this.r = [];\n    this.a = new BigInt(\"0\");\n    this.b = new BigInt(\"0\");\n    this.p = p256.curve.point(0, 0);\n  }\n\n  bytes() {\n    let l = 1 + constant.COMPRESS_POINT_SIZE * (this.l.length + this.r.length) + 2 * constant.BIG_INT_SIZE + constant.COMPRESS_POINT_SIZE;\n    let bytes = new Uint8Array(l);\n    let offset = 0;\n    bytes.set([this.l.length], offset);\n    offset++;\n    for (let i = 0; i < this.l.length; i++) {\n      bytes.set(this.l[i].compress(), offset);\n      offset += constant.COMPRESS_POINT_SIZE;\n    }\n    for (let i = 0; i < this.r.length; i++) {\n      bytes.set(this.r[i].compress(), offset);\n      offset += constant.COMPRESS_POINT_SIZE;\n    }\n    bytes.set(this.a.toArray(\"be\", constant.BIG_INT_SIZE), offset);\n    offset += constant.BIG_INT_SIZE;\n    bytes.set(this.b.toArray(\"be\", constant.BIG_INT_SIZE), offset);\n    offset += constant.BIG_INT_SIZE;\n    bytes.set(this.p.compress(), offset);\n    return bytes\n  }\n\n  setBytes(bytes) {\n    if (bytes.length === 0) {\n      return null\n    }\n    let lenLArray = bytes[0];\n    let offset = 1;\n    this.l = new Array(lenLArray);\n    for (let i = 0; i < lenLArray; i++) {\n      this.l[i] = p256.decompress(bytes.slice(offset, offset + constant.COMPRESS_POINT_SIZE));\n      offset = offset + constant.COMPRESS_POINT_SIZE;\n    }\n    this.r = new Array(lenLArray);\n    for (let i = 0; i < lenLArray; i++) {\n      this.r[i] = p256.decompress(bytes.slice(offset, offset + constant.COMPRESS_POINT_SIZE));\n      offset = offset + constant.COMPRESS_POINT_SIZE;\n    }\n    this.a = new BigInt(bytes.slice(offset, offset + constant.BIG_INT_SIZE), 16, \"be\");\n    offset = offset + constant.BIG_INT_SIZE;\n    this.b = new BigInt(bytes.slice(offset, offset + constant.BIG_INT_SIZE), 16, \"be\");\n    offset = offset + constant.BIG_INT_SIZE;\n    this.p = p256.decompress(bytes.slice(offset, offset + constant.COMPRESS_POINT_SIZE));\n  }\n\n  verify(AggParameter) {\n    let p = this.p;\n    let n = AggParameter.G.length;\n    let G = new Array(n);\n    let H = new Array(n);\n    for (let i = 0; i < n; i++) {\n      G[i] = AggParameter.G[i];\n      H[i] = AggParameter.H[i];\n    }\n    let lLength = this.l.length;\n    for (let i = 0; i < lLength; i++) {\n      let nPrime = n / 2;\n      let x = aggParams.generateChallengeForAggRange(AggParameter, [p.compress(), this.l[i].compress(), this.r[i].compress()]);\n      let xInverse = x.invm(p256.n);\n      let GPrime = new Array(nPrime);\n      let HPrime = new Array(nPrime);\n      for (let i = 0; i < nPrime; i++) {\n        GPrime[i] = G[i].mul(xInverse).add(G[i + nPrime].mul(x));\n        HPrime[i] = H[i].mul(x).add(H[i + nPrime].mul(xInverse));\n      }\n      let xSquare = x.mul(x);\n      let xSquareInverse = xSquare.invm(p256.n);\n      // x^2 * l + P + xInverse^2 * r\n      p = this.l[i].mul(xSquare).add(p).add(this.r[i].mul(xSquareInverse));\n      G = GPrime;\n      H = HPrime;\n      n = nPrime;\n    }\n    let c = this.a.mul(this.b);\n    let rightPoint = G[0].mul(this.a);\n    rightPoint = rightPoint.add(H[0].mul(this.b));\n    rightPoint = rightPoint.add(AggParameter.U.mul(c));\n    if (rightPoint.getX().cmp(p.getX()) === 0 && rightPoint.getY().cmp(p.getY()) === 0) {\n      return true;\n    }\n    return false;\n  }\n}\n\nfunction innerProduct(a, b) {\n  if (a.length !== b.length) {\n    return null\n  }\n\n  let c = new BigInt(\"0\", 10);\n  for (let i = 0; i < a.length; i++) {\n    let tmp = a[i].mul(b[i]);\n    c = c.add(tmp);\n  }\n  c = c.umod(p256.n);\n  return c;\n}\n\nfunction vectorAdd(v, w) {\n  if (v.length !== w.length) {\n    return null\n  }\n  let result = new Array(v.length);\n  for (let i = 0; i < v.length; i++) {\n    result[i] = v[i].add(w[i]);\n    result[i] = result[i].umod(p256.n)\n  }\n  return result\n}\n\nfunction hadamardProduct(v, w) {\n  if (v.length !== w.length) {\n    //privacy.NewPrivacyErr(privacy.UnexpectedErr, errors.New(\"hadamardProduct: Uh oh! Arrays not of the same length\"))\n  }\n\n  let result = new Array(v.length);\n\n  for (let i = 0; i < v.length; i++) {\n    result[i] = v[i].mul(w[i]);\n    result[i] = result[i].umod(p256.n);\n  }\n  return result\n}\n\nfunction vectorAddScalar(v, s) {\n  let result = new Array(v.length);\n  for (let i = 0; i < v.length; i++) {\n    result[i] = v[i].add(s);\n    result[i] = result[i].umod(p256.n);\n  }\n  return result\n}\n\nfunction vectorMulScalar(v, s) {\n  let result = new Array(v.length);\n  for (let i = 0; i < v.length; i++) {\n    result[i] = v[i].mul(s);\n    result[i] = result[i].umod(p256.n);\n  }\n  return result\n}\n\nfunction powerVector(base, l) {\n  let result = new Array(l.length);\n  result[0] = new BigInt(\"1\");\n  for (let i = 1; i < l; i++) {\n    result[i] = base.mul(result[i - 1]);\n    result[i] = result[i].umod(p256.n);\n  }\n  return result;\n}\n\nfunction pad(l) {\n  let deg = 0;\n  while (l > 0) {\n    if (l % 2 === 0) {\n      deg++;\n      l = l >> 1;\n    } else {\n      break;\n    }\n  }\n  let i = 0;\n  for (; ;) {\n    if (Math.pow(2, i) < l) {\n      i++;\n    } else {\n      l = Math.pow(2, i + deg);\n      break;\n    }\n  }\n  return l;\n\n}\nfunction estimateMultiRangeProofSize(nOutput){\n  return parseInt((nOutput + 2*(Math.log2(constant.MAX_EXP*pad(nOutput))) + 5)*constant.COMPRESS_POINT_SIZE + 5* constant.BIG_INT_SIZE + 2)\n}\n\nmodule.exports = {\n  InnerProductWitness,\n  pad,\n  powerVector,\n  vectorAddScalar,\n  vectorMulScalar,\n  vectorAdd,\n  hadamardProduct,\n  innerProduct,\n  InnerProductProof,\n  estimateMultiRangeProofSize\n};\n","let PedCom = require(\"../pedersen\").PedCom;\nlet Elliptic = require('elliptic').ec;\nlet BigInt = require('bn.js');\nlet utils = require('../privacy_utils');\nlet P256 = new Elliptic('p256');\nlet constants = require('../constants');\nclass BulletproofParams {\n    constructor(m) {\n        let capacity = 64 * m;\n        this.G = new Array(capacity);\n        this.H = new Array(capacity);\n        for (let i = 0; i < capacity; i++) {\n            this.G[i] = PedCom.G[0].hash(5 + i);\n            this.H[i] = PedCom.G[0].hash(5 + i + capacity);\n        }\n        this.U = this.H[0].hash(5 + 2 * capacity)\n    }\n}\n\nfunction EncodeVectors(a, b, g, h) {\n    if (a.length !== b.length || g.length !== h.length || a.length !== g.length) {\n        return null\n    }\n    let res = (g[0].mul(a[0])).add(h[0].mul(b[0]));\n    for (let i = 1; i < a.length; i++) {\n        res = res.add(g[i].mul(a[i])).add(h[i].mul(b[i]))\n    }\n    return res\n}\n\nfunction generateChallengeForAggRange(AggParam, values) {\n    l = (AggParam.G.length + AggParam.H.length + 1) * constants.COMPRESS_POINT_SIZE;\n    for (let i = 0; i < values.length; i++) {\n        l += values[i].length\n    }\n    let bytes = new Uint8Array(l);\n    let offset = 0;\n    for (let i = 0; i < AggParam.G.length; i++) {\n        let b = AggParam.G[i].compress();\n        bytes.set(b, offset);\n        offset += constants.COMPRESS_POINT_SIZE;\n    }\n    for (let i = 0; i < AggParam.H.length; i++) {\n        bytes.set(AggParam.H[i].compress(), offset);\n        offset += constants.COMPRESS_POINT_SIZE;\n    }\n    bytes.set(AggParam.U.compress(), offset);\n    offset += constants.COMPRESS_POINT_SIZE;\n    for (let i = 0; i < values.length; i++) {\n        bytes.set(values[i], offset);\n        offset += values[i].length\n    }\n    let hash = utils.hashSha3BytesToBytes(bytes);\n    let res = new BigInt(hash, 16, \"be\");\n    res = res.umod(P256.n);\n    return res;\n}\nmodule.exports = {\n    BulletproofParams,\n    generateChallengeForAggRange,\n    EncodeVectors\n};\n// let G1 = PedCom.G[0].hash(5);\n// console.log(G1.compress());\n// for (let i=0;i<5;i++){\n//     let bytes = PedCom.G[0].hash(5+i).compress();\n//     let str = \"[\";\n//     for (let b in bytes){\n//         str = str + \" \" + new String(bytes[b])\n//     }\n//     console.log(str+ \"]\")\n// }\n","let bn = require('bn.js');\nconst P256 = require('../ec').P256;\nlet constants = require('../constants');\nconst utils = require('../privacy_utils');\nconst zkpUtils = require('./utils');\nconst pc = require('../pedersen');\nlet poly = require('../polynomials');\n\n\nclass OneOutOfManyStatement {\n  constructor() {\n    this.commitments = [];\n  }\n\n  set(commitments) {\n    this.commitments = commitments\n  }\n}\n\n\nclass OneOutOfManyWitness {\n  constructor() {\n    this.rand = new bn(0);\n    this.indexIsZero = 0;\n    this.stmt = new OneOutOfManyStatement();\n  }\n\n  set(commitments, rand, indexIsZero) {\n    this.rand = rand;\n    this.indexIsZero = indexIsZero;\n    this.stmt.set(commitments);\n  }\n\n  prove() {\n    // Check the number of Commitment list's elements\n    let N = this.stmt.commitments.length;\n    if (N !== constants.CM_RING_SIZE) {\n      return {\n        proof: new OneOutOfManyProof(),\n        err: new Error(\"the number of Commitment list's elements must be equal to CM_RING_SIZE\")\n      }\n    }\n\n    let n = constants.CM_RING_SIZE_EXP;\n\n    // Check indexIsZero\n    if (this.indexIsZero > N) {\n      return {\n        proof: new OneOutOfManyProof(),\n        err: new Error(\"Index is zero must be Index in list of commitments\")\n      }\n    }\n\n    // represent indexIsZero in binary\n    let indexIsZeroBinary = utils.convertIntToBinary(this.indexIsZero, n);\n\n    // randomness array\n    let r = new Array(n); // big int array\n    let a = new Array(n); // big int array\n    let s = new Array(n); // big int array\n    let t = new Array(n); // big int array\n    let u = new Array(n); // big int array\n\n    let cl = new Array(n); // elliptic point array\n    let ca = new Array(n); // elliptic point array\n    let cb = new Array(n); // elliptic point array\n    let cd = new Array(n); // elliptic point array\n\n    for (let j = 0; j < n; j++) {\n      // Generate random numbers\n      r[j] = utils.randScalar();\n      a[j] = utils.randScalar();\n      s[j] = utils.randScalar();\n      t[j] = utils.randScalar();\n      u[j] = utils.randScalar();\n\n      // convert indexIsZeroBinary[j] to big.Int\n      let indexInt = new bn(indexIsZeroBinary[j]);\n\n      // Calculate cl, ca, cb, cd\n      // cl = Com(l, r)\n      cl[j] = pc.PedCom.commitAtIndex(indexInt, r[j], constants.SK);\n\n      // ca = Com(a, s)\n      ca[j] = pc.PedCom.commitAtIndex(a[j], s[j], constants.SK);\n\n      // cb = Com(la, t)\n      let la = indexInt.mul(a[j]);\n      cb[j] = pc.PedCom.commitAtIndex(la, t[j], constants.SK);\n\n      // console.log('a: ', j, ': ', a[j].toArray().join(', '));\n      // console.log('u: ', j, ': ', u[j].toArray().join(', '));\n    }\n\n    // console.log();\n\n    // Calculate: cd_k = ci^pi,k\n    for (let k = 0; k < n; k++) {\n      // Calculate pi,k which is coefficient of x^k in polynomial pi(x)\n      cd[k] = pc.PedCom.commitAtIndex(new bn(0), u[k], constants.SK);\n\n      for (let i = 0; i < N; i++) {\n        // console.log('k: ', k);\n        // console.log('i: ', i);\n        let iBinary = utils.convertIntToBinary(i, n);\n        // console.log('iBinary: ', iBinary);\n        // console.log('n: ', n);\n        // console.log('a0: ', a[0].toArray().join(', '));\n        // console.log('a1: ', a[1].toArray().join(', '));\n        // console.log('a2: ', a[2].toArray().join(', '));\n        // console.log('indexIsZeroBinary: ', indexIsZeroBinary);\n\n        let pik = GetCoefficient(iBinary, k, n, a, indexIsZeroBinary);\n\n        // console.log('pik: ', pik.toArray().join(', '));\n        cd[k] = cd[k].add(this.stmt.commitments[i].mul(pik));\n        // console.log('cd ', i, ': ', cd[k].compress().join(', '));\n        // console.log();\n      }\n\n      // console.log('cd ', k, ': ', cd[k].compress().join(', '));\n    }\n\n    // Calculate challenge x\n    let x = new bn(0);\n\n    for (let j = 0; j < n; j++) {\n      x = zkpUtils.generateChallenge([x.toArray('be', constants.BIG_INT_SIZE), cl[j].compress(), ca[j].compress(), cb[j].compress(), cd[j].compress()]);\n    }\n\n    // console.log(\"Challenge x: \", x.toArray('be', constants.BIG_INT_SIZE));\n\n    // Calculate za, zb zd\n    let za = new Array(n); // big int array\n    let zb = new Array(n); // big int array\n    let f = new Array(n); // big int array\n\n    for (let j = 0; j < n; j++) {\n      // f = lx + a\n      let indexInt = new bn(indexIsZeroBinary[j]);\n      f[j] = indexInt.mul(x);\n      f[j] = f[j].add(a[j]);\n      f[j] = f[j].umod(P256.n);\n\n      // za = s + rx\n      za[j] = r[j].mul(x);\n      za[j] = za[j].add(s[j]);\n      za[j] = za[j].umod(P256.n);\n\n      // zb = r(x - f) + t\n      zb[j] = x.sub(f[j]);\n      zb[j] = zb[j].mul(r[j]);\n      zb[j] = zb[j].add(t[j]);\n      zb[j] = zb[j].umod(P256.n);\n    }\n\n    // zd = rand * x^n - sum_{k=0}^{n-1} u[k] * x^k\n    let zd = x.pow(new bn(n));\n    zd = zd.mul(this.rand);\n\n    // let uxInt = new BigInt(0);\n    let sumInt = new bn(0);\n    for (let k = 0; k < n; k++) {\n      let uxInt = x.pow(new bn(k));\n      uxInt = uxInt.mul(u[k]);\n      sumInt = sumInt.add(uxInt);\n      // sumInt = sumInt.umod(P256.n);\n    }\n\n    zd = zd.sub(sumInt);\n    zd = zd.umod(P256.n);\n\n    let proof = new OneOutOfManyProof();\n    proof.set(this.stmt.commitments, cl, ca, cb, cd, f, za, zb, zd);\n\n\n    //Test\n\n    // let left1 = pc.PedCom.G[constants.RAND].mul(r[0].mul(x).add(s[0]));\n    // let right1 = pc.PedCom.CommitAtIndex(new BigInt(0), za[0], constants.SK);\n    //\n    // if (left1.eq(right1)){\n    //     console.log(\"Rightttttttttttttttt\");\n    // } else{\n    //     console.log(\"Wrongggggggggggggggg\");\n    // }\n\n    // for (let i=0; i<n; i++){\n    //     let left1 = cl[i].mul(x).add(ca[i]);\n    //     let right1 = pc.PedCom.CommitAtIndex(f[i], za[i], constants.SK);\n    //\n    //     if (left1.eq(right1)){\n    //         console.log(\"Rightttttttttttttttt\");\n    //     } else{\n    //         console.log(\"Wrongggggggggggggggg\");\n    //     }\n    // }\n\n    // let leftPoint = P256.curve.point();\n    //\n    // for (let i = 0; i < N; i++) {\n    //     let iBinary = utils.convertIntToBinary(i, n);\n    //     let exp = new BigInt(1);\n    //     let fji = new BigInt(1);\n    //\n    //     for (let j = 0; j < n; j++) {\n    //         if (iBinary[j] === 1) {\n    //             fji = f[j]\n    //         } else {\n    //             fji = x.sub(f[j]);\n    //             fji = fji.umod(P256.n);\n    //         }\n    //\n    //         exp = exp.mul(fji);\n    //         exp = exp.umod(P256.n);\n    //     }\n    //\n    //     if (i === 0) {\n    //         leftPoint = this.stmt.commitments[i].mul(exp)\n    //     } else {\n    //         leftPoint = leftPoint.add(this.stmt.commitments[i].mul(exp))\n    //     }\n    // }\n    //\n    // let leftPoint2 = P256.curve.point();\n    //\n    // for (let k = 0; k < n; k++) {\n    //     let xk = x.pow(new BigInt(k));\n    //     xk = xk.umod(P256.n);\n    //\n    //     if (k === 0) {\n    //         leftPoint2 = cd[k].mul(xk);\n    //     } else {\n    //         leftPoint2 = leftPoint2.add(cd[k].mul(xk));\n    //     }\n    // }\n    //\n    // leftPoint = leftPoint.add(leftPoint2);\n    //\n    // let rightPoint = pc.PedCom.commitAtIndex(new BigInt(0), zd, constants.SK);\n    //\n    // if (leftPoint.eq(rightPoint)) {\n    //     console.log('Righttttttttt')\n    // } else {\n    //     console.log('Wrongggggggggg');\n    //\n    //     let tmpPoint = leftPoint.add(rightPoint.inverse());\n    //     console.log('tmpPoint: ', tmpPoint);\n    // }\n\n    return {\n      proof: proof,\n      err: null\n    }\n  }\n}\n\nclass OneOutOfManyProof {\n  constructor() {\n    this.cl = []; // []EllipticPoint\n    this.ca = []; // []EllipticPoint\n    this.cb = []; // []EllipticPoint\n    this.cd = []; // []EllipticPoint\n    this.f = []; // [] BigInt\n    this.za = []; // [] BigInt\n    this.zb = []; // [] BigInt\n    this.zd = new bn(0);\n    this.stmt = new OneOutOfManyStatement();\n  }\n\n  isNull() {\n    if (this.cl.length === 0) {\n      return true;\n    }\n    if (this.ca.length === 0) {\n      return true;\n    }\n    if (this.cb.length === 0) {\n      return true;\n    }\n    if (this.cd.length === 0) {\n      return true;\n    }\n    if (this.f.length === 0) {\n      return true;\n    }\n    if (this.za.length === 0) {\n      return true;\n    }\n    if (this.zb.length === 0) {\n      return true;\n    }\n    if (this.zd.eq(0)) {\n      return true;\n    }\n    return this.stmt.commitments.length === 0\n  }\n\n  set(commitments, cl, ca, cb, cd, f, za, zb, zd) {\n    this.stmt.commitments = commitments;\n    this.cl = cl;\n    this.ca = ca;\n    this.cb = cb;\n    this.cd = cd;\n    this.f = f;\n    this.za = za;\n    this.zb = zb;\n    this.zd = zd;\n    return this;\n  }\n\n  toBytes() {\n    // if proof is null, return an empty array\n    if (this.isNull()) {\n      return [];\n    }\n\n    let bytes = new Uint8Array(constants.ONE_OF_MANY_PROOF_SIZE);\n    let offset = 0;\n\n    // N = 2^n\n    let N = constants.CM_RING_SIZE;\n    let n = constants.CM_RING_SIZE_EXP;\n\n    // convert array cl to bytes array\n    for (let i = 0; i < n; i++) {\n      bytes.set(this.cl[i].compress(), offset);\n      offset += constants.COMPRESS_POINT_SIZE;\n    }\n    // convert array ca to bytes array\n    for (let i = 0; i < n; i++) {\n      bytes.set(this.ca[i].compress(), offset);\n      offset += constants.COMPRESS_POINT_SIZE;\n    }\n\n    // convert array cb to bytes array\n    for (let i = 0; i < n; i++) {\n      bytes.set(this.cb[i].compress(), offset);\n      offset += constants.COMPRESS_POINT_SIZE;\n    }\n\n    // convert array cd to bytes array\n    for (let i = 0; i < n; i++) {\n      bytes.set(this.cd[i].compress(), offset);\n      offset += constants.COMPRESS_POINT_SIZE;\n    }\n\n    // convert array f to bytes array\n    for (let i = 0; i < n; i++) {\n      bytes.set(this.f[i].toArray('be', constants.BIG_INT_SIZE), offset);\n      offset += constants.BIG_INT_SIZE;\n    }\n\n    // convert array za to bytes array\n    for (let i = 0; i < n; i++) {\n      bytes.set(this.za[i].toArray('be', constants.BIG_INT_SIZE), offset);\n      offset += constants.BIG_INT_SIZE;\n    }\n\n    // convert array zb to bytes array\n    for (let i = 0; i < n; i++) {\n      bytes.set(this.zb[i].toArray('be', constants.BIG_INT_SIZE), offset);\n      offset += constants.BIG_INT_SIZE;\n    }\n\n    bytes.set(this.zd.toArray('be', constants.BIG_INT_SIZE), offset);\n    return bytes;\n  }\n\n  verify() {\n    let N = this.stmt.commitments.length;\n\n    // the number of Commitment list's elements must be equal to CMRingSize\n    if (N !== constants.CM_RING_SIZE) {\n      return false\n    }\n    let n = constants.CM_RING_SIZE_EXP;\n\n    //Calculate challenge x\n    let x = new bn(0);\n    for (let j = 0; j < n; j++) {\n      x = zkpUtils.generateChallenge([utils.addPaddingBigInt(x, constants.BIG_INT_SIZE), this.cl[j].compress(), this.ca[j].compress(), this.cb[j].compress(), this.cd[j].compress()])\n    }\n\n    for (let i = 0; i < n; i++) {\n      //Check cl^x * ca = Com(f, za)\n      let leftPoint1 = this.cl[i].mul(x).add(this.ca[i]);\n      let rightPoint1 = pc.PedCom.commitAtIndex(this.f[i], this.za[i], constants.SK);\n\n      if (!leftPoint1.eq(rightPoint1)) {\n        return false;\n      }\n\n      //Check cl^(x-f) * cb = Com(0, zb)s\n      let xSubF = x.sub(this.f[i]);\n      xSubF = xSubF.umod(P256.n);\n\n      let leftPoint2 = this.cl[i].mul(xSubF).add(this.cb[i]);\n      let rightPoint2 = pc.PedCom.commitAtIndex(new bn(0), this.zb[i], constants.SK);\n\n      if (!leftPoint2.eq(rightPoint2)) {\n        return false\n      }\n    }\n\n    let leftPoint3 = P256.curve.point(0, 0);\n    let leftPoint32 = P256.curve.point(0, 0);\n\n    for (let i = 0; i < N; i++) {\n      let iBinary = utils.convertIntToBinary(i, n);\n\n      let exp = new bn(1);\n      let fji = new bn(0);\n\n      for (let j = 0; j < n; j++) {\n        if (iBinary[j] === 1) {\n          fji = this.f[j];\n        } else {\n          fji = x.sub(this.f[j]);\n          fji = fji.umod(P256.n);\n        }\n\n        exp = exp.mul(fji);\n        exp = exp.umod(P256.n);\n      }\n      if (i === 0) {\n        leftPoint3 = this.stmt.commitments[i].mul(exp);\n      } else {\n        leftPoint3 = leftPoint3.add(this.stmt.commitments[i].mul(exp))\n      }\n    }\n\n    for (let k = 0; k < n; k++) {\n      let xk = x.pow(new bn(k));\n      xk = P256.n.sub(xk);\n      xk = xk.umod(P256.n);\n\n      if (k === 0) {\n        leftPoint32 = this.cd[k].mul(xk);\n      } else {\n        leftPoint32 = leftPoint32.add(this.cd[k].mul(xk));\n      }\n    }\n\n    leftPoint3 = leftPoint3.add(leftPoint32);\n\n    let rightPoint3 = pc.PedCom.commitAtIndex(new bn(0), this.zd, constants.SK);\n\n    return leftPoint3.eq(rightPoint3);\n  }\n}\n\n// Get coefficient of x^k in the polynomial p_i(x)\nfunction GetCoefficient(iBinary, k, n, a, l) {\n  let res = new poly.Poly([new bn(1)]);\n  let fji = new poly.Poly([]);\n\n  for (let j = n - 1; j >= 0; j--) {\n    let fj = new poly.Poly([a[j], new bn(l[j])]);\n    if (iBinary[j] === 0) {\n      fji = new poly.Poly([new bn(0), new bn(1)]).sub(fj, P256.n);\n    } else {\n      fji = fj;\n    }\n    res = res.mul(fji, P256.n);\n  }\n\n  if (res.getDegree() < k) {\n    return new bn(0);\n  }\n\n  return res.Coeffs[k];\n}\n\nfunction TestGetCoefficient() {\n\n  let a = new Array(3);\n\n  a[0] = new bn([28, 30, 162, 177, 161, 127, 119, 10, 195, 106, 31, 125, 252, 56, 111, 229, 236, 245, 202, 172, 27, 54, 110, 9, 9, 8, 56, 189, 248, 100, 190, 129]);\n  a[1] = new bn([144, 245, 78, 232, 93, 155, 71, 49, 175, 154, 78, 81, 146, 120, 171, 74, 88, 99, 196, 61, 124, 156, 35, 55, 39, 22, 189, 111, 108, 236, 3, 131]);\n  a[2] = new bn([224, 15, 114, 83, 56, 148, 202, 7, 187, 99, 242, 4, 2, 168, 169, 168, 44, 174, 215, 111, 119, 162, 172, 44, 225, 97, 236, 240, 242, 233, 148, 49]);\n\n  let res = GetCoefficient([0, 1, 1], 3, 3, a, [0, 1, 1]);\n\n  // let expectedRes = new BigInt(-6);\n  // expectedRes = expectedRes.umod(P256.n);\n  // console.log('expected res: ', expectedRes);\n  console.log('res: ', res.toArray().join(' '));\n}\n\n// TestGetCoefficient();\n\n\nmodule.exports = {\n  OneOutOfManyWitness,\n  OneOutOfManyProof\n};","let BigInt = require('bn.js');\nlet ec = require(\"../ec\");\nlet Pds = require(\"../pedersen\").PedCom;\nlet cs = require(\"../constants\");\nlet utils = require('./utils');\nlet privacy_utils = require('../privacy_utils');\n\nclass SNNoPrivacyProof {\n    constructor(serialNumber, PK, SND, tSK, tE, zSK) {\n        this.serialNumber = serialNumber;\n        this.PK = PK;\n        this.SND = SND;\n        this.tSK = tSK;\n        this.tE = tE;\n        this.zSK = zSK;\n    }\n    toBytes() {\n        if (this.serialNumber == null) {\n            return [];\n        } else {\n            let res = new Uint8Array(cs.COMPRESS_POINT_SIZE * 4 + cs.BIG_INT_SIZE * 2);\n            res.set(this.serialNumber.compress(), 0);\n            res.set(this.PK.compress(), cs.COMPRESS_POINT_SIZE);\n            res.set(this.SND.toArray('be', cs.BIG_INT_SIZE), cs.COMPRESS_POINT_SIZE * 2);\n            res.set(this.tSK.compress(), 2 * cs.COMPRESS_POINT_SIZE + cs.BIG_INT_SIZE);\n            res.set(this.tE.compress(), 3 * cs.COMPRESS_POINT_SIZE + cs.BIG_INT_SIZE);\n            res.set(this.zSK.toArray('be', cs.BIG_INT_SIZE), 4 * cs.COMPRESS_POINT_SIZE + cs.BIG_INT_SIZE);\n            return res;\n        }\n    }\n    verify(mess = null) {\n        let x = new BigInt;\n        if (mess == null) {\n            let bytesTmp = new Uint8Array(cs.COMPRESS_POINT_SIZE * 2);\n            bytesTmp.set(this.tSK.compress(), 0);\n            bytesTmp.set(this.tE.compress(), cs.COMPRESS_POINT_SIZE);\n            x = utils.generateChallenge([bytesTmp]);\n        } else {\n            x = BigInt(mess, 10, 'be');\n        }\n        if (!Pds.G[cs.SK].mul(this.zSK).eq(this.PK.mul(x).add(this.tSK))) {\n            return false;\n        }\n        return this.serialNumber.mul(this.zSK.clone().add(x.clone().mul(this.SND))).eq(Pds.G[cs.SK].mul(x).add(this.tE));\n    }\n}\n\n\nclass SNNoPrivacyWitness {\n\n    constructor() {\n        this.serialNumber = null;\n        this.PK = null;\n        this.SND = null;\n        this.sk = null;\n    }\n\n    set(serialNumber, PK, SND, sk) {\n        this.serialNumber = serialNumber;\n        this.PK = PK;\n        this.SND = SND;\n        this.sk = sk;\n    }\n\n    prove(mess = null) {\n        if (this.PK === null) {\n            return null;\n        }\n\n        let eSK = privacy_utils.randScalar();\n        let tSK = Pds.G[cs.SK].mul(eSK);\n        let tE = this.serialNumber.mul(eSK);\n        let x = new BigInt;\n        if (mess == null) {\n            let bytesTmp = new Uint8Array(cs.COMPRESS_POINT_SIZE * 2);\n            bytesTmp.set(tSK.compress(), 0);\n            bytesTmp.set(tE.compress(), cs.COMPRESS_POINT_SIZE);\n            x = utils.generateChallenge([bytesTmp]);\n        } else {\n            x = BigInt(mess, 10, 'be');\n        }\n        let zSK = this.sk.toRed(ec.N).redMul(x.toRed(ec.N)).redAdd(eSK.toRed(ec.N)).fromRed();\n        return new SNNoPrivacyProof(this.serialNumber, this.PK, this.SND, tSK, tE, zSK);\n    }\n}\n\nmodule.exports = {\n    SNNoPrivacyWitness,\n    SNNoPrivacyProof\n};","let BigInt = require('bn.js');\nlet ec = require(\"../ec\");\nlet Pds = require(\"../pedersen\").PedCom;\nlet cs = require(\"../constants\");\nlet utils = require('./utils');\nlet privacy_utils = require('../privacy_utils');\n\nclass SNPrivacyProof {\n    constructor() {\n        this.serialNumber = null;\n        this.comSK = null;\n        this.comInput = null;\n        this.tSK = null;\n        this.tInput = null;\n        this.tSN = null;\n        this.zSK = null; //BigInt\n        this.zRSK = null;\n        this.zInput = null;\n        this.zRInput = null;\n    };\n\n    set(serialNumber, comSK, comInput, tSK, tInput, tSN, zSK, zRSK, zInput, zRInput) {\n        this.serialNumber = serialNumber; //EllipticPoint\n        this.comSK = comSK;\n        this.comInput = comInput;\n        this.tSK = tSK;\n        this.tInput = tInput;\n        this.tSN = tSN;\n        this.zSK = zSK; //BigInt\n        this.zRSK = zRSK;\n        this.zInput = zInput;\n        this.zRInput = zRInput;\n        return this\n    }\n\n    toBytes() {\n        if (this.serialNumber == null) {\n            return [];\n        };\n        let res = new Uint8Array(cs.SN_PRIVACY_PROOF_SIZE);\n        let offset = 0;\n\n        res.set(this.serialNumber.compress(), offset);\n        offset += cs.COMPRESS_POINT_SIZE;\n        res.set(this.comSK.compress(), offset);\n        offset += cs.COMPRESS_POINT_SIZE;\n        res.set(this.comInput.compress(), offset);\n        offset += cs.COMPRESS_POINT_SIZE;\n        res.set(this.tSK.compress(), offset);\n        offset += cs.COMPRESS_POINT_SIZE;\n        res.set(this.tInput.compress(), offset);\n        offset += cs.COMPRESS_POINT_SIZE;\n        res.set(this.tSN.compress(), offset);\n        offset += cs.COMPRESS_POINT_SIZE;\n        res.set(this.zSK.toArray('be', cs.BIG_INT_SIZE), offset);\n        offset += cs.BIG_INT_SIZE;\n        res.set(this.zRSK.toArray('be', cs.BIG_INT_SIZE), offset);\n        offset += cs.BIG_INT_SIZE;\n        res.set(this.zInput.toArray('be', cs.BIG_INT_SIZE), offset);\n        offset += cs.BIG_INT_SIZE;\n        res.set(this.zRInput.toArray('be', cs.BIG_INT_SIZE), offset);\n\n        return res;\n    }\n    verify(mess = null) {\n        let x = new BigInt;\n        if (mess == null) {\n            let bytesTmp = new Uint8Array(cs.COMPRESS_POINT_SIZE * 3);\n            bytesTmp.set(this.tSK.compress(), 0);\n            bytesTmp.set(this.tInput.compress(), cs.COMPRESS_POINT_SIZE);\n            bytesTmp.set(this.tSN.compress(), cs.COMPRESS_POINT_SIZE * 2);\n            x = utils.generateChallenge([bytesTmp]);\n        } else {\n            x = BigInt(mess, 10, 'be');\n        }\n        if (!Pds.commitAtIndex(this.zInput, this.zRInput, cs.SND).eq(this.comInput.mul(x).add(this.tInput))) {\n            return false;\n        }\n        if (!Pds.commitAtIndex(this.zSK, this.zRSK, cs.SK).eq(this.comSK.mul(x).add(this.tSK))) {\n            return false;\n        }\n        return this.serialNumber.mul(this.zSK.clone().add(this.zInput)).eq(Pds.G[cs.SK].mul(x).add(this.tSN));\n    }\n}\n\n\nclass SNPrivacyWitness {\n    constructor() {\n        this.serialNumber = null;\n        this.comSK = null;\n        this.comInput = null;\n        this.sk = null;\n        this.rSK = null;\n        this.input = null;\n        this.rInput = null;\n    }\n\n    set(serialNumber, comSK, comInput, sk, rSK, input, rInput) {\n        this.serialNumber = serialNumber;\n        this.comSK = comSK;\n        this.comInput = comInput;\n        this.sk = sk;\n        this.rSK = rSK;\n        this.input = input;\n        this.rInput = rInput;\n    }\n\n    prove(mess = null) {\n        let eSK = privacy_utils.randScalar();\n        let eSND = privacy_utils.randScalar();\n        let dSK = privacy_utils.randScalar();\n        let dSND = privacy_utils.randScalar();\n        // calculate tSK = g_SK^eSK * h^dSK\n        let tSK = Pds.commitAtIndex(eSK, dSK, cs.SK);\n\n        // calculate tSND = g_SND^eSND * h^dSND\n        let tInput = Pds.commitAtIndex(eSND, dSND, cs.SND);\n\n        // calculate tSN = g_SK^eSND * h^dSND2\n        let tSN = this.serialNumber.mul(eSK.toRed(ec.N).redAdd(eSND.toRed(ec.N)).fromRed());\n\n        // calculate x = hash(tSK || tInput || tSN)\n        let x = new BigInt;\n        if (mess == null) {\n            let bytesTmp = new Uint8Array(cs.COMPRESS_POINT_SIZE * 3);\n            bytesTmp.set(tSK.compress(), 0);\n            bytesTmp.set(tInput.compress(), cs.COMPRESS_POINT_SIZE);\n            bytesTmp.set(tSN.compress(), cs.COMPRESS_POINT_SIZE * 2);\n            x = utils.generateChallenge([bytesTmp]);\n        } else {\n            x = BigInt(mess, 10, 'be');\n        }\n\n        // Calculate zSK = sk * x + eSK\n        let zSK = this.sk.toRed(ec.N).redMul(x.toRed(ec.N)).redAdd(eSK.toRed(ec.N)).fromRed();\n\n        // Calculate zRSK = rSK * x + dSK\n        let zRSK = this.rSK.toRed(ec.N).redMul(x.toRed(ec.N)).redAdd(dSK.toRed(ec.N)).fromRed();\n\n        // Calculate zInput = input * x + eSND\n        let zInput = this.input.toRed(ec.N).redMul(x.toRed(ec.N)).redAdd(eSND.toRed(ec.N)).fromRed();\n\n        // Calculate zRInput = rInput * x + dSND\n        let zRInput = this.rInput.toRed(ec.N).redMul(x.toRed(ec.N)).redAdd(dSND.toRed(ec.N)).fromRed();\n\n        return new SNPrivacyProof().set(this.serialNumber, this.comSK, this.comInput, tSK, tInput, tSN, zSK, zRSK, zInput, zRInput);\n    }\n}\n\nmodule.exports = {\n    SNPrivacyWitness,\n    SNPrivacyProof\n};","let BigInt = require('bn.js');\nlet PedCom = require(\"../pedersen\").PedCom;\nlet ec = require('../ec');\nlet utils = require('../privacy_utils');\nlet P256 = ec.P256;\n\nfunction generateChallenge(values) {\n    let l = PedCom.GBytes.length;\n    let offset = PedCom.GBytes.length;\n    for (let i = 0; i < values.length; i++) {\n        l += values[i].length;\n    }\n    let bytes = new Uint8Array(l);\n    bytes.set(PedCom.GBytes, 0);\n\n    for (let i = 0; i < values.length; i++) {\n        bytes.set(values[i], offset);\n        offset += values[i].length;\n    }\n    let hash = utils.hashSha3BytesToBytes(bytes);\n    let res = new BigInt(hash, 10);\n    res = res.umod(P256.n);\n    return res\n}\n\nmodule.exports = {\n  generateChallenge\n}\n\n//     let values =[[38,182,245,255,88,71,47,10,115,26,170,82,236,162,201,123,200,13,250,151,214,25,218,187,168,209,63,19,234,0,54,0],\n//     [72,61,92,58,58,29,10,79,54,224,61,8,8,144,178,208,72,114,250,27,117,144,123,150,201,64,26,91,229,71,74,9],\n//     [248,79,103,162,8,4,98,59,194,232,126,96,246,93,252,23,252,50,182,42,209,216,89,114,234,194,14,76,75,160,225,111],\n//     [133,38,172,236,51,55,146,102,135,105,14,214,206,69,138,133,103,121,34,94,190,29,244,126,118,137,137,255,74,196,226,250]];\n// console.log(generateChallenge(values).toString(10));\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:512;if(!this||this.constructor!==Hash){return new Hash(size)}var sponge=new _sponge[\"default\"]({capacity:size,padding:padding});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var format=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var buffer=sponge.squeeze();if(format&&format!==\"binary\"){return buffer.toString(format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({padding:1});exports.Keccak=Keccak;var SHA3=createHash({padding:6});exports.SHA3=SHA3;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var allowedCapacityValues=[224,256,384,512];var writeState=function writeState(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}};var readHash=function readHash(I,n){var O=_buffer.Buffer.allocUnsafe(n);for(var o=0;o<n;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;if(!allowedCapacityValues.includes(capacity)){throw new Error(\"Unsupported hash length\")}var keccak=(0,_permute[\"default\"])();var stateSize=200;var hashSize=capacity/8;var queueSize=stateSize-hashSize*2;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){writeState(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var output={queue:_buffer.Buffer.allocUnsafe(queueSize),state:new Uint32Array(stateSize/4)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=padding;output.queue[queueSize-1]|=128;writeState(output.queue,output.state);keccak(output.state);return readHash(output.state,hashSize)};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var chi=function chi(_ref){var A=_ref.A,C=_ref.C;for(var y=0;y<25;y+=5){for(var x=0;x<5;x++){(0,_copy[\"default\"])(A,y+x)(C,x)}for(var _x=0;_x<5;_x++){var xy=(y+_x)*2;var x1=(_x+1)%5*2;var x2=(_x+2)%5*2;A[xy]^=~C[x1]&C[x2];A[xy+1]^=~C[x1+1]&C[x2+1]}}};var _default=chi;exports[\"default\"]=_default;","\"use strict\";var copy=function copy(I,i){return function(O,o){var oi=o*2;var ii=i*2;O[oi]=I[ii];O[oi+1]=I[ii+1]}};module.exports=copy;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _chi=_interopRequireDefault(require(\"./chi\"));var _iota=_interopRequireDefault(require(\"./iota\"));var _rhoPi=_interopRequireDefault(require(\"./rho-pi\"));var _theta=_interopRequireDefault(require(\"./theta\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var permute=function permute(){var C=new Uint32Array(10);var D=new Uint32Array(10);var W=new Uint32Array(2);return function(A){for(var roundIndex=0;roundIndex<24;roundIndex++){(0,_theta[\"default\"])({A:A,C:C,D:D,W:W});(0,_rhoPi[\"default\"])({A:A,C:C,W:W});(0,_chi[\"default\"])({A:A,C:C});(0,_iota[\"default\"])({A:A,roundIndex:roundIndex})}C.fill(0);D.fill(0);W.fill(0)}};var _default=permute;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _roundConstants=_interopRequireDefault(require(\"./round-constants\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var iota=function iota(_ref){var A=_ref.A,roundIndex=_ref.roundIndex;var i=roundIndex*2;A[0]^=_roundConstants[\"default\"][i];A[1]^=_roundConstants[\"default\"][i+1]};var _default=iota;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var ROUND_CONSTANTS=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);var _default=ROUND_CONSTANTS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _piShuffles=_interopRequireDefault(require(\"./pi-shuffles\"));var _rhoOffsets=_interopRequireDefault(require(\"./rho-offsets\"));var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var rhoPi=function rhoPi(_ref){var A=_ref.A,C=_ref.C,W=_ref.W;(0,_copy[\"default\"])(A,1)(W,0);var H=0;var L=0;var Wi=0;var ri=32;for(var i=0;i<24;i++){var j=_piShuffles[\"default\"][i];var r=_rhoOffsets[\"default\"][i];(0,_copy[\"default\"])(A,j)(C,0);H=W[0];L=W[1];ri=32-r;Wi=r<32?0:1;W[Wi]=H<<r|L>>>ri;W[(Wi+1)%2]=L<<r|H>>>ri;(0,_copy[\"default\"])(W,0)(A,j);(0,_copy[\"default\"])(C,0)(W,0)}};var _default=rhoPi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var PI_SHUFFLES=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1];var _default=PI_SHUFFLES;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var RHO_OFFSETS=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44];var _default=RHO_OFFSETS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var theta=function theta(_ref){var A=_ref.A,C=_ref.C,D=_ref.D,W=_ref.W;var H=0;var L=0;for(var x=0;x<5;x++){var x20=x*2;var x21=(x+5)*2;var x22=(x+10)*2;var x23=(x+15)*2;var x24=(x+20)*2;C[x20]=A[x20]^A[x21]^A[x22]^A[x23]^A[x24];C[x20+1]=A[x20+1]^A[x21+1]^A[x22+1]^A[x23+1]^A[x24+1]}for(var _x=0;_x<5;_x++){(0,_copy[\"default\"])(C,(_x+1)%5)(W,0);H=W[0];L=W[1];W[0]=H<<1|L>>>31;W[1]=L<<1|H>>>31;D[_x*2]=C[(_x+4)%5*2]^W[0];D[_x*2+1]=C[(_x+4)%5*2+1]^W[1];for(var y=0;y<25;y+=5){A[(y+_x)*2]^=D[_x*2];A[(y+_x)*2+1]^=D[_x*2+1]}}};var _default=theta;exports[\"default\"]=_default;","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");"],"sourceRoot":""}